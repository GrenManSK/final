{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment final  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0.7 \par
}}final}
{\comment Generated by doxygen 1.9.6.}
{\creatim \yr2023\mo4\dy24\hr21\min45\sec15}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt final}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0.7\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Mon Apr 24 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the packages with brief descriptions (if available):}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 final.anime_rename}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFE" }{}}{\fldrslt {\cs37\ul\cf2 final.code2string}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 final.completer}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 final.downloadmusic}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 final.git}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPM" }{}}{\fldrslt {\cs37\ul\cf2 final.git_legacy}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUA" }{}}{\fldrslt {\cs37\ul\cf2 final.mathematical}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYG" }{}}{\fldrslt {\cs37\ul\cf2 final.music}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEB" }{}}{\fldrslt {\cs37\ul\cf2 final.profiler}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFU" }{}}{\fldrslt {\cs37\ul\cf2 final.pymp4}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHB" }{}}{\fldrslt {\cs37\ul\cf2 final.pywinmove}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIZ" }{}}{\fldrslt {\cs37\ul\cf2 final.rapi}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXJ" }{}}{\fldrslt {\cs37\ul\cf2 final.sql}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEB" }{}}{\fldrslt {\cs37\ul\cf2 final.writing}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
final.rapi.animq\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
final.code2string.c2s\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
final.music.Channel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
final.git.download\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
final.git_legacy.download\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
final.rapi.fanart\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
final.writing.installing_carousel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
final.mathematical.list\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
final.music.music\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
object
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
final.completer.SimpleCompleter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
final.anime_rename.rename\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
final.sql.SQLServer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
final.pymp4.video\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLV" }{}}{\fldrslt {\cs37\ul\cf2 final.rapi.animq}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 final.code2string.c2s}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCA" }{}}{\fldrslt {\cs37\ul\cf2 final.music.Channel}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 final.git.download}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARA" }{}}{\fldrslt {\cs37\ul\cf2 final.git_legacy.download}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNE" }{}}{\fldrslt {\cs37\ul\cf2 final.rapi.fanart}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFO" }{}}{\fldrslt {\cs37\ul\cf2 final.writing.installing_carousel}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUH" }{}}{\fldrslt {\cs37\ul\cf2 final.mathematical.list}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYO" }{}}{\fldrslt {\cs37\ul\cf2 final.music.music}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 final.anime_rename.rename}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 final.completer.SimpleCompleter}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXU" }{}}{\fldrslt {\cs37\ul\cf2 final.sql.SQLServer}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGC" }{}}{\fldrslt {\cs37\ul\cf2 final.pymp4.video}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 __init__.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 anime_rename.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFC" }{}}{\fldrslt {\cs37\ul\cf2 code2string.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHN" }{}}{\fldrslt {\cs37\ul\cf2 completer.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 downloadmusic.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 git.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPK" }{}}{\fldrslt {\cs37\ul\cf2 git_legacy.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATY" }{}}{\fldrslt {\cs37\ul\cf2 mathematical.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYE" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDZ" }{}}{\fldrslt {\cs37\ul\cf2 profiler.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFS" }{}}{\fldrslt {\cs37\ul\cf2 pymp4.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGZ" }{}}{\fldrslt {\cs37\ul\cf2 pywinmove.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXH" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDZ" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
 } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final}
{\xe \v final}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 anime_rename}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFE" }{}}{\fldrslt {\cs37\ul\cf2 code2string}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 completer}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 downloadmusic}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 git}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPM" }{}}{\fldrslt {\cs37\ul\cf2 git_legacy}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUA" }{}}{\fldrslt {\cs37\ul\cf2 mathematical}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYG" }{}}{\fldrslt {\cs37\ul\cf2 music}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEB" }{}}{\fldrslt {\cs37\ul\cf2 profiler}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFU" }{}}{\fldrslt {\cs37\ul\cf2 pymp4}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHB" }{}}{\fldrslt {\cs37\ul\cf2 pywinmove}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIZ" }{}}{\fldrslt {\cs37\ul\cf2 rapi}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXJ" }{}}{\fldrslt {\cs37\ul\cf2 sql}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEB" }{}}{\fldrslt {\cs37\ul\cf2 writing}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 VERSION}}}
 = '1.0.7'\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 AUTHOR}}}
 = 'GrenManSK'\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v AUTHOR\:final}
{\xe \v final\:AUTHOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str final.AUTHOR = 'GrenManSK'}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAV" }{}}{\fldrslt {\cs37\ul\cf2 18}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAA" }{}}{\fldrslt {\cs37\ul\cf2 __init__.py}}}
.}\par
}
{\xe \v VERSION\:final}
{\xe \v final\:VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str final.VERSION = '1.0.7'}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAT" }{}}{\fldrslt {\cs37\ul\cf2 17}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAA" }{}}{\fldrslt {\cs37\ul\cf2 __init__.py}}}
.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.anime_rename Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final.anime_rename}
{\xe \v final.anime_rename}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 rename}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEH" }{}}{\fldrslt {\cs37\ul\cf2 main}}}
 ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:final.anime_rename}
{\xe \v final.anime_rename\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.anime_rename.main ()}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The main function of the program.\par
: return: The anime object\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEG" }{}}{\fldrslt {\cs37\ul\cf2 80}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 anime_rename.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00080 {\cf17 def }main():\par
00081     {\cf22 """}\par
00082 {\cf22     The main function of the program.}\par
00083 {\cf22     : }{\cf19 return}: The anime object\par
00084     {\cf22 """}\par
00085 {\cf22     input_folder = filedialog.askdirectory()}\par
00086 {\cf22     anime = rename(input_folder)}\par
00087 {\cf22     }{\cf19 while} {\cf17 True}:\par
00088         vstup = input({\cf22 'Rename (Y/n) > '})\par
00089         {\cf19 if} vstup {\cf19 in} [{\cf22 ''}, {\cf22 'y'}, {\cf22 'Y'}]:\par
00090             anime.rename()\par
00091             {\cf19 break}\par
00092         {\cf19 if} vstup {\cf19 in} [{\cf22 'n'}, {\cf22 'N'}]:\par
00093             {\cf19 break}\par
00094         {\cf19 else}:\par
00095             {\cf19 continue}\par
00096 \par
00097 \par
}
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/db8/namespacefinal_1_1anime__rename_a1dd70bdba99b814b73585500167d98a6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/db8/namespacefinal_1_1anime__rename_a1dd70bdba99b814b73585500167d98a6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.code2string Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final.code2string}
{\xe \v final.code2string}
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 c2s}}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Code to string}
 \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.completer Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final.completer}
{\xe \v final.completer}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCompleter}}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.downloadmusic Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final.downloadmusic}
{\xe \v final.downloadmusic}
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 DownloadMusic}}}
 (music_name, directory)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v DownloadMusic\:final.downloadmusic}
{\xe \v final.downloadmusic\:DownloadMusic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.downloadmusic.DownloadMusic (  {\i music_name},   {\i directory})}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The DownloadMusic function takes in a string of the name of the song you want to download.\par
It then searches for that song on YouTube and downloads it as an mp3 file into your assets folder.\par
The function returns a string containing the name of the downloaded file.\par
\par
:param music_name: Search for the music in youtube\par
:return: The name of the downloaded music\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKG" }{}}{\fldrslt {\cs37\ul\cf2 12}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJR" }{}}{\fldrslt {\cs37\ul\cf2 downloadmusic.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00012 {\cf17 def }DownloadMusic(music_name, directory):\par
00013     {\cf22 """}\par
00014 {\cf22     The DownloadMusic function takes }{\cf19 in} a string of the name of the song you want to download.\par
00015     It then searches {\cf19 for} that song on YouTube {\cf19 and} downloads it {\cf17 as} an mp3 file into your assets folder.\par
00016     The function returns a string containing the name of the downloaded file.\par
00017 \par
00018     :param music_name: Search {\cf19 for} the music {\cf19 in} youtube\par
00019     :{\cf19 return}: The name of the downloaded music\par
00020     {\cf22 """}\par
00021 {\cf22     query_string = urllib.parse.urlencode(\{"search_query"}: music_name\})\par
00022     formatUrl = urllib.request.urlopen(\par
00023         {\cf22 "https://www.youtube.com/results?"} + query_string)\par
00024     logging.debug(\par
00025         {\cf22 "Searched in: https://www.youtube.com/results?"} + query_string)\par
00026     search_results = re.findall(\par
00027         {\cf22 r"watch\\?v=(\\S\{11\})"}, formatUrl.read().decode())\par
00028     clip = requests.get({\cf22 "https://www.youtube.com/watch?v="} +\par
00029                         {\cf22 "\{\}"}.format(search_results[0]))\par
00030     clip2 = {\cf22 "https://www.youtube.com/watch?v="} + {\cf22 "\{\}"}.format(search_results[0])\par
00031     logging.debug({\cf22 "Found: https://www.youtube.com/watch?v="} +\par
00032                   {\cf22 "\{\}"}.format(search_results[0]))\par
00033     inspect = BeautifulSoup(clip.content, {\cf22 "html.parser"})\par
00034     yt_title = inspect.find_all({\cf22 "meta"}, property={\cf22 "og:title"})\par
00035     {\cf19 for} concatMusic1 {\cf19 in} yt_title:\par
00036         {\cf19 pass}\par
00037     print({\cf22 '\\nStarting download'})\par
00038     print(clip2)\par
00039     print(concatMusic1[{\cf22 'content'}])\par
00040 \par
00041     {\cf17 def }run(clip2):\par
00042         {\cf22 """}\par
00043 {\cf22         The run function takes a YouTube link }{\cf17 as} an argument {\cf19 and} downloads the highest resolution video file.\par
00044         It then extracts the audio {\cf17 from} that video file, saves it to a new mp3 file, {\cf19 and} deletes the original video.\par
00045         The function returns the name of this new mp3 file.\par
00046 \par
00047         :param clip2: Pass the youtube link to the run function\par
00048         :{\cf19 return}: The name of the song\par
00049         {\cf22 """}\par
00050 {\cf22         out_file = YouTube(}\par
00051 {\cf22             str(clip2)).streams.get_highest_resolution().download()}\par
00052 {\cf22         base, ext = os.path.splitext(out_file)}\par
00053 {\cf22         base = os.path.basename(base)}\par
00054 {\cf22         base.replace("["}, {\cf22 "("})\par
00055         base.replace({\cf22 "]"}, {\cf22 ")"})\par
00056         base.replace({\cf22 "'"}, {\cf22 ""})\par
00057         base.replace({\cf22 "\\""}, {\cf22 ""})\par
00058         new_file = base + {\cf22 '.mp3'}\par
00059         print(os.path.join(out_file))\par
00060         print(os.path.join(directory + {\cf22 '\\\\'} + new_file))\par
00061         video = VideoFileClip(os.path.join(out_file))\par
00062         video.audio.write_audiofile(os.path.join(directory + {\cf22 '\\\\'} + new_file))\par
00063         video.close()\par
00064         os.remove(out_file)\par
00065         print({\cf22 'Done\\n'})\par
00066         {\cf19 return} base\par
00067     a = run(clip2)\par
00068     {\cf19 return} a\par
00069 \par
00070 \par
}
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/dc0/namespacefinal_1_1downloadmusic_a72e0fc2044c9b0537f44f52f090602d5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/dc0/namespacefinal_1_1downloadmusic_a72e0fc2044c9b0537f44f52f090602d5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.git Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final.git}
{\xe \v final.git}
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.git_legacy Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final.git_legacy}
{\xe \v final.git_legacy}
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARA" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPT" }{}}{\fldrslt {\cs37\ul\cf2 download_file}}}
 (str url, str fname, int chunk_size=1024)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v download_file\:final.git_legacy}
{\xe \v final.git_legacy\:download_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 bool final.git_legacy.download_file (str  {\i url}, str  {\i fname}, int   {\i chunk_size} = {\f2 1024})}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid "Download a file from a URL to a local file."\par
\par
The first line is the function's signature. It's a single line of code that tells you everything\par
you need to know about the function\par
\par
:param url: The URL of the file to download\par
:type url: str\par
:param fname: The name of the file to be downloaded\par
:type fname: str\par
:param chunk_size: The size of the chunks to download, defaults to 1024 (optional)\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPS" }{}}{\fldrslt {\cs37\ul\cf2 7}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPJ" }{}}{\fldrslt {\cs37\ul\cf2 git_legacy.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00007 {\cf17 def }download_file(url: str, fname: str, chunk_size: int = 1024) -> bool:\par
00008     {\cf22 """}\par
00009 {\cf22     "Download a file from a URL to a local file."}\par
00010 \par
00011     The first line {\cf19 is} the function{\cf22 's signature. It'}s a single line of code that tells you everything\par
00012     you need to know about the function\par
00013 \par
00014     :param url: The URL of the file to download\par
00015     :type url: str\par
00016     :param fname: The name of the file to be downloaded\par
00017     :type fname: str\par
00018     :param chunk_size: The size of the chunks to download, defaults to 1024 (optional)\par
00019     {\cf22 """}\par
00020 {\cf22     }{\cf17 import} requests\par
00021     {\cf19 try}:\par
00022         resp = requests.get(url, stream={\cf17 True})\par
00023         total: int = int(resp.headers.get({\cf22 'content-length'}, 0))\par
00024         {\cf17 with} open(fname, {\cf22 'wb'}) {\cf17 as} file, tqdm(\par
00025             desc=fname,\par
00026             total=total,\par
00027             unit={\cf22 'iB'},\par
00028             unit_scale={\cf17 True},\par
00029             unit_divisor=1024,\par
00030         ) {\cf17 as} bar:\par
00031             {\cf19 for} data {\cf19 in} resp.iter_content(chunk_size=chunk_size):\par
00032                 size = file.write(data)\par
00033                 bar.update(size)\par
00034     {\cf19 except} ConnectionError:\par
00035         {\cf19 return} {\cf17 False}\par
00036     {\cf19 return} {\cf17 True}\par
00037 \par
00038 \par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d0c/namespacefinal_1_1git__legacy_a4a4961e44bee7df0238f659d769e0e9d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.mathematical Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final.mathematical}
{\xe \v final.mathematical}
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUH" }{}}{\fldrslt {\cs37\ul\cf2 list}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXY" }{}}{\fldrslt {\cs37\ul\cf2 get_id}}}
 (int long=10)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Math functions}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v get_id\:final.mathematical}
{\xe \v final.mathematical\:get_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 int final.mathematical.get_id (int   {\i long} = {\f2 10})}}
\par
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXX" }{}}{\fldrslt {\cs37\ul\cf2 93}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATX" }{}}{\fldrslt {\cs37\ul\cf2 mathematical.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00093 {\cf17 def }get_id(long: int = 10) -> int:\par
00094     id = {\cf22 ''}\par
00095     {\cf19 for} i {\cf19 in} range(long):\par
00096         id += str(randint(0, 9))\par
00097     {\cf19 return} id\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.music Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final.music}
{\xe \v final.music}
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCA" }{}}{\fldrslt {\cs37\ul\cf2 Channel}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYO" }{}}{\fldrslt {\cs37\ul\cf2 music}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Music player using mixer from pygame}
 \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.profiler Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final.profiler}
{\xe \v final.profiler}
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
any {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 Profiler}}}
 (target, list args=(), bool time_info=False, bool output_file=False, str _return="r")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Profiler\:final.profiler}
{\xe \v final.profiler\:Profiler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 any final.profiler.Profiler (  {\i target}, list   {\i args} = {\f2 ()}, bool   {\i time_info} = {\f2 False}, bool   {\i output_file} = {\f2 False}, str   {\i _return} = {\f2 "r"})}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The Profiler function is a wrapper for the cProfile module.\par
It allows you to profile your code and get information about it's performance.\par
The Profiler function takes in 5 arguments: target, args, time_info and output_file.\par
target is the function that you want to profile (required). \par
args are any arguments that need to be passed into target (optional). \par
time_info will print out how long it took for the profiled code to run if set True (optional).\par
output file will create a file named PROFILING.prof if set True (default False)\par
Open this file with 'snakeviz PROFILING.prof' in CLI environment !!! Will overwrite if file exists\par
_return: use 'r' to return respone, 't' to return time or 'a' to return tuple of respone and time\par
\par
:param target: Specify the function you want to profile\par
:param args: tuple: Pass arguments to the target function\par
:param time_info: bool: Print the time it spend to process\par
:param output_file: bool: Dump the profiling data to a file\par
:param _return: str: Determine what the function should return\par
:return: A tuple: (response, time)\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEG" }{}}{\fldrslt {\cs37\ul\cf2 6}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDY" }{}}{\fldrslt {\cs37\ul\cf2 profiler.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00006 {\cf17 def }Profiler(target, args: list = (), time_info: bool = {\cf17 False}, output_file: bool = {\cf17 False}, _return: str = {\cf22 "r"}) -> any:\par
00007     {\cf22 """}\par
00008 {\cf22     The Profiler function }{\cf19 is} a wrapper {\cf19 for} the cProfile module.\par
00009     It allows you to profile your code {\cf19 and} get information about it{\cf22 's performance.}\par
00010 {\cf22     The Profiler function takes }{\cf19 in} 5 arguments: target, args, time_info {\cf19 and} output_file.\par
00011     target {\cf19 is} the function that you want to profile (required). \par
00012     args are any arguments that need to be passed into target (optional). \par
00013     time_info will {\cf19 print} out how long it took {\cf19 for} the profiled code to run {\cf19 if} set {\cf17 True} (optional).\par
00014     output file will create a file named PROFILING.prof {\cf19 if} set {\cf17 True} (default {\cf17 False})\par
00015     Open this file {\cf17 with} {\cf22 'snakeviz PROFILING.prof'} {\cf19 in} CLI environment !!! Will overwrite {\cf19 if} file exists\par
00016     _return: use {\cf22 'r'} to {\cf19 return} respone, {\cf22 't'} to {\cf19 return} time {\cf19 or} {\cf22 'a'} to {\cf19 return} tuple of respone {\cf19 and} time\par
00017     \par
00018     :param target: Specify the function you want to profile\par
00019     :param args: tuple: Pass arguments to the target function\par
00020     :param time_info: bool: Print the time it spend to process\par
00021     :param output_file: bool: Dump the profiling data to a file\par
00022     :param _return: str: Determine what the function should {\cf19 return}\par
00023     :{\cf19 return}: A tuple: (response, time)\par
00024     {\cf22 """}\par
00025 {\cf22     }{\cf17 with} cProfile.Profile() {\cf17 as} pr:\par
00026         _start = perf_counter()\par
00027         response = target(*args)\par
00028         _end = perf_counter()\par
00029     stats = pstats.Stats(pr)\par
00030     stats.sort_stats(pstats.SortKey.TIME)\par
00031     {\cf19 if} output_file:\par
00032         stats.dump_stats(filename={\cf22 'PROFILING.prof'})\par
00033         print({\cf22 'Use \\'snakeviz PROFILING.prof\\' to open file'})\par
00034     {\cf19 if} time_info:\par
00035         print(f{\cf22 "Time it spend to process: \{str(_end - _start)\}s"})\par
00036     {\cf19 if} _return == {\cf22 'r'}:\par
00037         {\cf19 return} response\par
00038     {\cf19 elif} _return == {\cf22 't'}:\par
00039         {\cf19 return} float(_end - _start)\par
00040     {\cf19 elif} _return == {\cf22 'a'}:\par
00041         {\cf19 return} (response, float(_end - _start))\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.pymp4 Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final.pymp4}
{\xe \v final.pymp4}
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGC" }{}}{\fldrslt {\cs37\ul\cf2 video}}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Video changes\par
}
 \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.pywinmove Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final.pywinmove}
{\xe \v final.pywinmove}
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHL" }{}}{\fldrslt {\cs37\ul\cf2 get_screensize}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
None {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHT" }{}}{\fldrslt {\cs37\ul\cf2 move}}}
 (str window, int x, int y, width, length)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ctypes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHE" }{}}{\fldrslt {\cs37\ul\cf2 user32}}}
 = ctypes.windll.user32\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tuple {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHG" }{}}{\fldrslt {\cs37\ul\cf2 screensize}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v get_screensize\:final.pywinmove}
{\xe \v final.pywinmove\:get_screensize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.pywinmove.get_screensize ()}}
\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHK" }{}}{\fldrslt {\cs37\ul\cf2 8}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGY" }{}}{\fldrslt {\cs37\ul\cf2 pywinmove.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00008 {\cf17 def }get_screensize():\par
00009     user32 = ctypes.windll.user32\par
00010     screensize: tuple[int, int] = user32.GetSystemMetrics(\par
00011         0), user32.GetSystemMetrics(1)\par
00012     {\cf19 return} screensize\par
00013 \par
00014 \par
}
}
{\xe \v move\:final.pywinmove}
{\xe \v final.pywinmove\:move}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 None final.pywinmove.move (str  {\i window}, int  {\i x}, int  {\i y},   {\i width},   {\i length})}}
\par
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The move function moves the specified window to a specified location.\par
The move function takes four arguments:\par
    1) The name of the window as a string. This is case sensitive and should be enclosed in quotation marks if it contains spaces or special characters (e.g., &quot;Microsoft Word&quot;). \par
    2) The x-coordinate of the desired location on your screen, measured in pixels from the left edge of your screen to where you want your window located (e.g., 100). \par
    3) The y-coordinate of the desired location on your screen, measured in pixels from the top edge of your screen\par
\par
:param window: str: Specify the name of the window\par
:param x: int: Set the x position of the window, y is used to set the y position\par
:param y: int: Set the y position of the window, measured in pixels from the top edge of your screen\par
:param width: Set the width of the window\par
:param length: Set the height of the window\par
:return: None\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHS" }{}}{\fldrslt {\cs37\ul\cf2 15}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGY" }{}}{\fldrslt {\cs37\ul\cf2 pywinmove.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00015 {\cf17 def }move(window: str, x: int, y: int, width, length) -> {\cf18 None}:  {\cf20 # type: ignore}\par
00016     {\cf22 """}\par
00017 {\cf22     The move function moves the specified window to a specified location.}\par
00018 {\cf22     The move function takes four arguments:}\par
00019 {\cf22         1) The name of the window }{\cf17 as} a string. This {\cf19 is} case sensitive {\cf19 and} should be enclosed {\cf19 in} quotation marks {\cf19 if} it contains spaces {\cf19 or} special characters (e.g., &quot;Microsoft Word&quot;). \par
00020         2) The x-coordinate of the desired location on your screen, measured {\cf19 in} pixels {\cf17 from} the left edge of your screen to where you want your window located (e.g., 100). \par
00021         3) The y-coordinate of the desired location on your screen, measured {\cf19 in} pixels {\cf17 from} the top edge of your screen\par
00022 \par
00023     :param window: str: Specify the name of the window\par
00024     :param x: int: Set the x position of the window, y {\cf19 is} used to set the y position\par
00025     :param y: int: Set the y position of the window, measured {\cf19 in} pixels {\cf17 from} the top edge of your screen\par
00026     :param width: Set the width of the window\par
00027     :param length: Set the height of the window\par
00028     :{\cf19 return}: {\cf18 None}\par
00029     {\cf22 """}\par
00030 {\cf22     appname: str = window}\par
00031 {\cf22     xpos: int = x}\par
00032 {\cf22     ypos: int = y}\par
00033 {\cf22     }{\cf19 if} width == {\cf18 None}:\par
00034         width: int = int((screensize[0]/10)*9)\par
00035     {\cf19 if} length == {\cf18 None}:\par
00036         length: int = int((screensize[1]/10)*9)\par
00037 \par
00038     {\cf17 def }enumHandler(hwnd, lParam):  {\cf20 # type: ignore}\par
00039         {\cf19 if} win32gui.IsWindowVisible(hwnd):  {\cf20 # type: ignore}\par
00040             {\cf19 if} appname {\cf19 in} win32gui.GetWindowText(hwnd):  {\cf20 # type: ignore}\par
00041                 win32gui.MoveWindow(\par
00042                     hwnd, xpos, ypos, width, length, {\cf17 True})  {\cf20 # type: ignore}\par
00043     win32gui.EnumWindows(enumHandler, {\cf18 None})  {\cf20 # type: ignore}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v screensize\:final.pywinmove}
{\xe \v final.pywinmove\:screensize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tuple final.pywinmove.screensize}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 =  user32.GetSystemMetrics(\par
00002     0), user32.GetSystemMetrics(1)\par
}
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHF" }{}}{\fldrslt {\cs37\ul\cf2 4}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGY" }{}}{\fldrslt {\cs37\ul\cf2 pywinmove.py}}}
.}\par
}
{\xe \v user32\:final.pywinmove}
{\xe \v final.pywinmove\:user32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ctypes final.pywinmove.user32 = ctypes.windll.user32}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHD" }{}}{\fldrslt {\cs37\ul\cf2 3}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGY" }{}}{\fldrslt {\cs37\ul\cf2 pywinmove.py}}}
.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.rapi Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final.rapi}
{\xe \v final.rapi}
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLV" }{}}{\fldrslt {\cs37\ul\cf2 animq}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNE" }{}}{\fldrslt {\cs37\ul\cf2 fanart}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKL" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
 (str url, str fname, int chunk_size=1024)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKF" }{}}{\fldrslt {\cs37\ul\cf2 level}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKH" }{}}{\fldrslt {\cs37\ul\cf2 format}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid API method\par
\par
Raises:\par
    ConnectionError: No connection\par
    ValueError: No data available from server\par
    ValueError: Type mismatch\par
    ValueError: Category mismatch\par
    ValueError: Category mismatch\par
    ConnectionError: No connection\par
    ConnectionError: No connection\par
    ValueError: Server not found\par
    ValueError: Server not found\par
\par
Returns:\par
    _type_: self\par
}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v download\:final.rapi}
{\xe \v final.rapi\:download}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 bool final.rapi.download (str  {\i url}, str  {\i fname}, int   {\i chunk_size} = {\f2 1024})}}
\par
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Download a file from a URL to a local file.\par
\par
The first line is the function's signature. It's a single line of code that tells you everything\par
you need to know about the function\par
\par
:param url: The URL of the file to download\par
:type url: str\par
:param fname: The name of the file to be downloaded\par
:type fname: str\par
:param chunk_size: The size of the chunks to download, defaults to 1024 (optional)\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKK" }{}}{\fldrslt {\cs37\ul\cf2 36}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00036 {\cf17 def }download(url: str, fname: str, chunk_size: int = 1024) -> bool:\par
00037     {\cf22 """}\par
00038 {\cf22     Download a file }{\cf17 from} a URL to a local file.\par
00039 \par
00040     The first line {\cf19 is} the function{\cf22 's signature. It'}s a single line of code that tells you everything\par
00041     you need to know about the function\par
00042 \par
00043     :param url: The URL of the file to download\par
00044     :type url: str\par
00045     :param fname: The name of the file to be downloaded\par
00046     :type fname: str\par
00047     :param chunk_size: The size of the chunks to download, defaults to 1024 (optional)\par
00048     {\cf22 """}\par
00049 {\cf22     }{\cf19 if} os.path.exists(fname):\par
00050         logging.warning(\par
00051             {\cf22 'file %s already exists, still downloading and replacing'}, fname)\par
00052     {\cf19 try}:\par
00053         resp = requests.get(url, stream={\cf17 True})\par
00054         total: int = int(resp.headers.get({\cf22 'content-length'}, 0))\par
00055         {\cf17 with} open(fname, {\cf22 'wb'}) {\cf17 as} file, tqdm(\par
00056             desc=fname,\par
00057             total=total,\par
00058             unit={\cf22 'iB'},\par
00059             unit_scale={\cf17 True},\par
00060             unit_divisor=1024,\par
00061         ) {\cf17 as} bar:\par
00062             {\cf19 for} data {\cf19 in} resp.iter_content(chunk_size=chunk_size):\par
00063                 size = file.write(data)\par
00064                 bar.update(size)\par
00065     {\cf19 except} ConnectionError:\par
00066         logging.error({\cf22 "Failed to download file: %s"}, fname)\par
00067         {\cf19 return} {\cf17 False}\par
00068     {\cf19 return} {\cf17 True}\par
00069 \par
00070 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v format\:final.rapi}
{\xe \v final.rapi\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.rapi.format}}
\par
{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKG" }{}}{\fldrslt {\cs37\ul\cf2 33}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
}
{\xe \v level\:final.rapi}
{\xe \v final.rapi\:level}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.rapi.level}}
\par
{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKE" }{}}{\fldrslt {\cs37\ul\cf2 32}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.sql Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final.sql}
{\xe \v final.sql}
{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXU" }{}}{\fldrslt {\cs37\ul\cf2 SQLServer}}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid SQL Server Commands}
 \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.writing Namespace Reference\par \pard\plain 
{\tc\tcl2 \v final.writing}
{\xe \v final.writing}
{\bkmkstart AAAAAAACEB}
{\bkmkend AAAAAAACEB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFO" }{}}{\fldrslt {\cs37\ul\cf2 installing_carousel}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEQ" }{}}{\fldrslt {\cs37\ul\cf2 log}}}
 (str msg, str end='\\n')\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFE" }{}}{\fldrslt {\cs37\ul\cf2 get_time}}}
 ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEM" }{}}{\fldrslt {\cs37\ul\cf2 datelog}}}
 = datetime.now().strftime("%y-%m-%d-%H-%M-%S")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Writing methods}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v get_time\:final.writing}
{\xe \v final.writing\:get_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 str final.writing.get_time ()}}
\par
{\bkmkstart AAAAAAACFE}
{\bkmkend AAAAAAACFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The get_time function returns the current time in HH-MM-SS format.\par
   This is a useful function for generating timestamps.\par
:return: The current time in the format of &quot;hour-minute-second&quot;\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFD" }{}}{\fldrslt {\cs37\ul\cf2 27}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00027 {\cf17 def }get_time() -> str:\par
00028     {\cf22 """}\par
00029 {\cf22     The get_time function returns the current time }{\cf19 in} HH-MM-SS format.\par
00030        This {\cf19 is} a useful function {\cf19 for} generating timestamps.\par
00031     :{\cf19 return}: The current time {\cf19 in} the format of &quot;hour-minute-second&quot;\par
00032     {\cf22 """}\par
00033 {\cf22     }{\cf19 return} datetime.now().strftime({\cf22 "%H-%M-%S"})\par
00034 \par
00035 \par
}
}
{\xe \v log\:final.writing}
{\xe \v final.writing\:log}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 str final.writing.log (str  {\i msg}, str   {\i end} = {\f2 '\\n'})}}
\par
{\bkmkstart AAAAAAACEQ}
{\bkmkend AAAAAAACEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid It opens a file, writes a message to it, and closes the file\par
\par
:param msg: The message to be logged\par
:param end: The character that will be used to end the line, defaults to \\n (optional)\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEP" }{}}{\fldrslt {\cs37\ul\cf2 14}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00014 {\cf17 def }log(msg: str, end: str = {\cf22 '\\n'}) -> str:\par
00015     {\cf22 """}\par
00016 {\cf22     It opens a file, writes a message to it, }{\cf19 and} closes the file\par
00017 \par
00018     :param msg: The message to be logged\par
00019     :param end: The character that will be used to end the line, defaults to \\n (optional)\par
00020     {\cf22 """}\par
00021 {\cf22     crashfile = open('crash_dump-'} + datelog + {\cf22 ".txt"}, {\cf22 'a'}, encoding={\cf22 'utf-8'})\par
00022     crashfile.write(str(msg) + str(end))\par
00023     crashfile.close()\par
00024     {\cf19 return} msg\par
00025 \par
00026 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v datelog\:final.writing}
{\xe \v final.writing\:datelog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
str final.writing.datelog = datetime.now().strftime("%y-%m-%d-%H-%M-%S")}}
\par
{\bkmkstart AAAAAAACEM}
{\bkmkend AAAAAAACEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEL" }{}}{\fldrslt {\cs37\ul\cf2 11}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.rapi.animq Class Reference\par \pard\plain 
{\tc\tcl2 \v final.rapi.animq}
{\xe \v final.rapi.animq}
{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMB" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMS" }{}}{\fldrslt {\cs37\ul\cf2 getq}}}
 (self)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Quotes from anime\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLU" }{}}{\fldrslt {\cs37\ul\cf2 71}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:final.rapi.animq}
{\xe \v final.rapi.animq\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.rapi.animq.__init__ (  {\i self})}}
\par
{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMA" }{}}{\fldrslt {\cs37\ul\cf2 76}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00076     {\cf17 def }__init__(self):\par
00077         {\cf19 try}:\par
00078             self.data: dict[str, str] = requests.get(\par
00079                 {\cf22 "https://animechan.vercel.app/api/random"}).json()\par
00080         {\cf19 except} requests.exceptions.ConnectionError:\par
00081             logging.error({\cf22 "Connection error"})\par
00082             {\cf19 raise} ConnectionError(\par
00083                 {\cf22 'Make sure you have a connection established'})\par
00084         {\cf19 try}:\par
00085             self.anime: str = self.data[{\cf22 "anime"}]\par
00086             self.character: str = self.data[{\cf22 "character"}]\par
00087             self.quote: str = self.data[{\cf22 "quote"}]\par
00088         {\cf19 except} TypeError:\par
00089             logging.error({\cf22 "No data available"})\par
00090             {\cf19 raise} ValueError({\cf22 'Server returned no data'})\par
00091 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getq\:final.rapi.animq}
{\xe \v final.rapi.animq\:getq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.rapi.animq.getq (  {\i self})}}
\par
{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The get_anime function returns a string containing the anime, character, and quote of the given character.\par
\par
:param self: Access variables that belongs to the class\par
:return: A string containing the anime, character and quote\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMR" }{}}{\fldrslt {\cs37\ul\cf2 92}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00092     {\cf17 def }getq(self):\par
00093         {\cf22 """}\par
00094 {\cf22         The get_anime function returns a string containing the anime, character, }{\cf19 and} quote of the given character.\par
00095 \par
00096         :param self: Access variables that belongs to the {\cf17 class}\par
00097         :{\cf19 return}: A string containing the anime, character {\cf19 and} quote\par
00098         {\cf22 """}\par
00099 {\cf22 }\par
00100 {\cf22         }{\cf19 return} {\cf22 "Anime: "} + self.anime + {\cf22 '\\nCharacter: '} + self.character + {\cf22 "\\nQuote: "} + self.quote\par
00101 \par
00102 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.code2string.c2s Class Reference\par \pard\plain 
{\tc\tcl2 \v final.code2string.c2s}
{\xe \v final.code2string.c2s}
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFM" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self, str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 code_file}}}
, str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFO" }{}}{\fldrslt {\cs37\ul\cf2 string_file}}}
)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGY" }{}}{\fldrslt {\cs37\ul\cf2 start}}}
 (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 to_str}}}
 (thing)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFO" }{}}{\fldrslt {\cs37\ul\cf2 string_file}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 code_file}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFJ" }{}}{\fldrslt {\cs37\ul\cf2 6}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 code2string.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:final.code2string.c2s}
{\xe \v final.code2string.c2s\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.code2string.c2s.__init__ (  {\i self}, str  {\i code_file}, str  {\i string_file})}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFL" }{}}{\fldrslt {\cs37\ul\cf2 7}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 code2string.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00007     {\cf17 def }__init__(self, code_file: str, string_file: str):\par
00008         self.string_file = string_file\par
00009         self.code_file = code_file\par
00010 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v start\:final.code2string.c2s}
{\xe \v final.code2string.c2s\:start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 str final.code2string.c2s.start (  {\i self})}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGX" }{}}{\fldrslt {\cs37\ul\cf2 41}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 code2string.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00041     {\cf17 def }start(self) -> str:\par
00042         full = {\cf22 ""}\par
00043         {\cf17 with} open(self.code_file, {\cf22 'r'}) {\cf17 as} code:\par
00044             {\cf19 if} self.string_file {\cf19 is} {\cf19 not} {\cf18 None} {\cf19 or} {\cf19 not} self.string_file {\cf19 in} [{\cf22 ''}]:\par
00045                 {\cf17 with} open(self.string_file, {\cf22 'w'}) {\cf17 as} file:\par
00046                     {\cf19 for} i {\cf19 in} tqdm(fr := code.readlines()):\par
00047                         oneline = c2s.to_str(i)\par
00048                         file.write(oneline)\par
00049                         full += oneline\par
00050             {\cf19 else}:\par
00051                 {\cf19 for} i {\cf19 in} tqdm(fr := code.readlines()):\par
00052                     oneline = c2s.to_str(i)\par
00053                     full += oneline\par
00054         {\cf19 return} full\par
}
}
{\xe \v to_str\:final.code2string.c2s}
{\xe \v final.code2string.c2s\:to_str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 str final.code2string.c2s.to_str (  {\i thing}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The to_str function takes a list of lists and converts it into a string.\par
The function is used to convert the data from the csv file into something that\par
can be written to an SQL database. The function also removes any apostrophes or \par
quotation marks in order to prevent SQL injection attacks.\par
\par
:param thing: Pass in a list of lists\par
:return: A string that is formatted for the insert statement\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFT" }{}}{\fldrslt {\cs37\ul\cf2 12}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 code2string.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00012     {\cf17 def }to_str(thing) -> str:\par
00013         {\cf22 """}\par
00014 {\cf22         The to_str function takes a list of lists }{\cf19 and} converts it into a string.\par
00015         The function {\cf19 is} used to convert the data {\cf17 from} the csv file into something that\par
00016         can be written to an SQL database. The function also removes any apostrophes {\cf19 or} \par
00017         quotation marks {\cf19 in} order to prevent SQL injection attacks.\par
00018 \par
00019         :param thing: Pass {\cf19 in} a list of lists\par
00020         :{\cf19 return}: A string that {\cf19 is} formatted {\cf19 for} the insert statement\par
00021         {\cf22 """}\par
00022 {\cf22         name: str = ''}\par
00023         {\cf19 if} thing {\cf19 is} {\cf18 None}:\par
00024             {\cf19 return} {\cf22 'NULL'}\par
00025         {\cf19 if} len(thing) == 0:\par
00026             name: str = {\cf22 'None'}\par
00027             {\cf19 return} name\par
00028         temp: str = {\cf22 ''}\par
00029         {\cf19 for} i {\cf19 in} tqdm(range(len(thing)), leave={\cf17 False}):\par
00030             {\cf19 if} thing[i] == {\cf22 "'"}:\par
00031                 temp += {\cf22 "\\\\'"}\par
00032             {\cf19 elif} thing[i] == {\cf22 '\\"'}:\par
00033                 temp += {\cf22 '\\\\"'}\par
00034             {\cf19 elif} thing[i] == {\cf22 '\\n'}:\par
00035                 temp += {\cf22 '\\\\n'}\par
00036             {\cf19 else}:\par
00037                 temp += str(thing[i])\par
00038         name += str(temp)\par
00039         {\cf19 return} name\par
00040 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v code_file\:final.code2string.c2s}
{\xe \v final.code2string.c2s\:code_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.code2string.c2s.code_file}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFP" }{}}{\fldrslt {\cs37\ul\cf2 9}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 code2string.py}}}
.}\par
}
{\xe \v string_file\:final.code2string.c2s}
{\xe \v final.code2string.c2s\:string_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.code2string.c2s.string_file}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFN" }{}}{\fldrslt {\cs37\ul\cf2 8}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFB" }{}}{\fldrslt {\cs37\ul\cf2 code2string.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFC" }{}}{\fldrslt {\cs37\ul\cf2 code2string.py}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.music.Channel Class Reference\par \pard\plain 
{\tc\tcl2 \v final.music.Channel}
{\xe \v final.music.Channel}
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
None {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCC" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self, int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 channel}}}
, int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCG" }{}}{\fldrslt {\cs37\ul\cf2 loops}}}
=-1, int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCI" }{}}{\fldrslt {\cs37\ul\cf2 fade}}}
=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
None {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCM" }{}}{\fldrslt {\cs37\ul\cf2 play}}}
 (self, path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
None {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCY" }{}}{\fldrslt {\cs37\ul\cf2 pause}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
None {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDI" }{}}{\fldrslt {\cs37\ul\cf2 unpause}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
None {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDR" }{}}{\fldrslt {\cs37\ul\cf2 stop}}}
 (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 channel}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCG" }{}}{\fldrslt {\cs37\ul\cf2 loops}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCI" }{}}{\fldrslt {\cs37\ul\cf2 fade}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBZ" }{}}{\fldrslt {\cs37\ul\cf2 90}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:final.music.Channel}
{\xe \v final.music.Channel\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 None final.music.Channel.__init__ (  {\i self}, int  {\i channel}, int   {\i loops} = {\f2 -1}, int   {\i fade} = {\f2 0})}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCB" }{}}{\fldrslt {\cs37\ul\cf2 91}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00091     {\cf17 def }__init__(self, channel: int, loops: int = -1, fade: int = 0) -> {\cf18 None}:\par
00092         self.channel = channel\par
00093         self.loops = loops\par
00094         self.fade = fade\par
00095         mixer.init()\par
00096 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v pause\:final.music.Channel}
{\xe \v final.music.Channel\:pause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 None final.music.Channel.pause (  {\i self})}}
\par
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The pause function pauses the music playback.\par
:param self: Access the attributes and methods of the class in python\par
:return: None\par
:doc-author: Trelent\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCX" }{}}{\fldrslt {\cs37\ul\cf2 108}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00108     {\cf17 def }pause(self) -> None:\par
00109         {\cf22 """}\par
00110 {\cf22         The pause function pauses the music playback.}\par
00111 {\cf22         :param self: Access the attributes }{\cf19 and} methods of the {\cf17 class }in python\par
00112         :{\cf19 return}: {\cf18 None}\par
00113         :doc-author: Trelent\par
00114         {\cf22 """}\par
00115 {\cf22         }{\cf19 return} mixer.Channel(self.channel).pause()\par
00116 \par
}
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d8e/classfinal_1_1music_1_1_channel_a3994d48413f54baa9f3344c82bbbfbc2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d8e/classfinal_1_1music_1_1_channel_a3994d48413f54baa9f3344c82bbbfbc2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v play\:final.music.Channel}
{\xe \v final.music.Channel\:play}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 None final.music.Channel.play (  {\i self},   {\i path})}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The play function plays a sound file.\par
:param self: Access the attributes and methods of the class\par
:param path: Specify the path of the sound file\par
:return: None\par
:doc-author: Trelent\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCL" }{}}{\fldrslt {\cs37\ul\cf2 97}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00097     {\cf17 def }play(self, path) -> None:\par
00098         {\cf22 """}\par
00099 {\cf22         The play function plays a sound file.}\par
00100 {\cf22         :param self: Access the attributes }{\cf19 and} methods of the {\cf17 class}\par
00101         :param path: Specify the path of the sound file\par
00102         :{\cf19 return}: {\cf18 None}\par
00103         :doc-author: Trelent\par
00104         {\cf22 """}\par
00105 {\cf22         }{\cf19 return} mixer.Channel(self.channel).play(mixer.Sound(path),\par
00106                                          loops=self.loops, fade_ms=self.fade)\par
00107 \par
}
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d8e/classfinal_1_1music_1_1_channel_a5813798bcb3ca2f6901e02831534a70e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d8e/classfinal_1_1music_1_1_channel_a5813798bcb3ca2f6901e02831534a70e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v stop\:final.music.Channel}
{\xe \v final.music.Channel\:stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 None final.music.Channel.stop (  {\i self})}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The stop function stops the music from playing.\par
:param self: Refer to the object itself\par
:return: None\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDQ" }{}}{\fldrslt {\cs37\ul\cf2 125}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00125     {\cf17 def }stop(self) -> None:\par
00126         {\cf22 """}\par
00127 {\cf22         The stop function stops the music }{\cf17 from} playing.\par
00128         :param self: Refer to the object itself\par
00129         :{\cf19 return}: {\cf18 None}\par
00130         {\cf22 """}\par
00131 {\cf22         }{\cf19 return} mixer.Channel(self.channel).stop()\par
}
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d8e/classfinal_1_1music_1_1_channel_ace656eaf5a2a280e7eedf7d91809aaa3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d8e/classfinal_1_1music_1_1_channel_ace656eaf5a2a280e7eedf7d91809aaa3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v unpause\:final.music.Channel}
{\xe \v final.music.Channel\:unpause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 None final.music.Channel.unpause (  {\i self})}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The unpause function will unpause the music.\par
:param self: Access the variables and methods of the class\par
:return: None\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDH" }{}}{\fldrslt {\cs37\ul\cf2 117}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00117     {\cf17 def }unpause(self) -> None:\par
00118         {\cf22 """}\par
00119 {\cf22         The unpause function will unpause the music.}\par
00120 {\cf22         :param self: Access the variables }{\cf19 and} methods of the {\cf17 class}\par
00121         :{\cf19 return}: {\cf18 None}\par
00122         {\cf22 """}\par
00123 {\cf22         }{\cf19 return} mixer.Channel(self.channel).unpause()\par
00124 \par
}
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d8e/classfinal_1_1music_1_1_channel_aef0c3f7fdbad63c47185dac4ebfb2094_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d8e/classfinal_1_1music_1_1_channel_aef0c3f7fdbad63c47185dac4ebfb2094_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v channel\:final.music.Channel}
{\xe \v final.music.Channel\:channel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.music.Channel.channel}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCD" }{}}{\fldrslt {\cs37\ul\cf2 92}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
}
{\xe \v fade\:final.music.Channel}
{\xe \v final.music.Channel\:fade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.music.Channel.fade}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCH" }{}}{\fldrslt {\cs37\ul\cf2 94}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
}
{\xe \v loops\:final.music.Channel}
{\xe \v final.music.Channel\:loops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.music.Channel.loops}}
\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCF" }{}}{\fldrslt {\cs37\ul\cf2 93}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYE" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.git.download Class Reference\par \pard\plain 
{\tc\tcl2 \v final.git.download}
{\xe \v final.git.download}
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self, str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 url}}}
)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANJ" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 remove_info}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOW" }{}}{\fldrslt {\cs37\ul\cf2 install}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 delete}}}
 (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 url}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 caller}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 directory}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMZ" }{}}{\fldrslt {\cs37\ul\cf2 7}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 git.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:final.git.download}
{\xe \v final.git.download\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.git.download.__init__ (  {\i self}, str  {\i url})}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANB" }{}}{\fldrslt {\cs37\ul\cf2 8}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 git.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00008     {\cf17 def }__init__(self, url: str):\par
00009         self.url = url\par
00010         self.caller = os.getcwd() + {\cf22 '/'} + self.url.split({\cf22 '/'})[-1].split({\cf22 '.'})[0]\par
00011 \par
}
}
{\xe \v download\:final.git.download}
{\xe \v final.git.download\:download}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.git.download.download (  {\i self})}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The download function downloads the zip file from the url, extracts it and returns a list of all files in the directory\par
\par
:param self: Access the class attributes and methods\par
:return: The directory of the extracted files\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANI" }{}}{\fldrslt {\cs37\ul\cf2 12}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 git.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00012     {\cf17 def }download(self):\par
00013         {\cf22 """}\par
00014 {\cf22         The download function downloads the zip file }{\cf17 from} the url, extracts it {\cf19 and} returns a list of all files {\cf19 in} the directory\par
00015 \par
00016         :param self: Access the {\cf17 class }attributes and methods\par
00017         :{\cf19 return}: The directory of the extracted files\par
00018         {\cf22 """}\par
00019 {\cf22         directory_before = os.listdir()}\par
00020 {\cf22         os.system(f'git clone \{self.url\}'})\par
00021         name = self.url.split({\cf22 '/'})[-1].split({\cf22 '.'})[0]\par
00022         os.system(f{\cf22 'cd \{name\}'})\par
00023         directory_after = os.listdir()\par
00024         self.directory = []\par
00025         {\cf19 for} i {\cf19 in} directory_after:\par
00026             {\cf19 if} i {\cf19 in} directory_before:\par
00027                 {\cf19 continue}\par
00028             self.directory = i\par
00029         print(self.directory)\par
00030         {\cf19 return} self\par
00031 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v delete\:final.git.download}
{\xe \v final.git.download\:delete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.git.download.delete (  {\i self})}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPA" }{}}{\fldrslt {\cs37\ul\cf2 52}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 git.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00052     {\cf17 def }delete(self):\par
00053         {\cf19 for} file {\cf19 in} glob.glob(self.caller + {\cf22 '\\\\*'}, include_hidden={\cf17 True}):\par
00054             {\cf19 if} file.split({\cf22 '\\\\'})[-1] == {\cf22 '.git'}:\par
00055                 {\cf19 continue}\par
00056             {\cf19 if} os.path.isdir(file):\par
00057                 shutil.rmtree(file)\par
00058             {\cf19 else}:\par
00059                 os.remove(file)\par
}
}
{\xe \v install\:final.git.download}
{\xe \v final.git.download\:install}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.git.download.install (  {\i self})}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOV" }{}}{\fldrslt {\cs37\ul\cf2 48}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 git.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00048     {\cf17 def }install(self):\par
00049         os.system(f{\cf22 "\{sys.executable\} -m pip install \{self.caller\}"})\par
00050         {\cf19 return} self\par
00051 \par
}
}
{\xe \v remove_info\:final.git.download}
{\xe \v final.git.download\:remove_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.git.download.remove_info (  {\i self})}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The remove_info function removes the README.md and requirements.txt files from the target directory.\par
\par
:param self: Represent the instance of the class\par
:return: Nothing\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOE" }{}}{\fldrslt {\cs37\ul\cf2 32}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 git.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00032     {\cf17 def }remove_info(self):\par
00033         {\cf22 """}\par
00034 {\cf22         The remove_info function removes the README.md }{\cf19 and} requirements.txt files {\cf17 from} the target directory.\par
00035 \par
00036         :param self: Represent the instance of the {\cf17 class}\par
00037         :{\cf19 return}: Nothing\par
00038         {\cf22 """}\par
00039 {\cf22         file_names = os.listdir(self.caller + '\\\\'})\par
00040         {\cf19 for} file_name {\cf19 in} file_names:\par
00041             {\cf19 if} file_name {\cf19 in} [{\cf22 "README.md"}, {\cf22 'requirements.txt'}, {\cf22 'LICENSE'}, {\cf22 '.gitignore'}]:\par
00042                 {\cf19 try}:\par
00043                     os.remove(self.caller + {\cf22 '\\\\'} + file_name)\par
00044                 {\cf19 except} FileNotFoundError:\par
00045                     {\cf19 pass}\par
00046         {\cf19 return} self\par
00047     \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v caller\:final.git.download}
{\xe \v final.git.download\:caller}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.git.download.caller}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANF" }{}}{\fldrslt {\cs37\ul\cf2 10}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 git.py}}}
.}\par
}
{\xe \v directory\:final.git.download}
{\xe \v final.git.download\:directory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.git.download.directory}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANV" }{}}{\fldrslt {\cs37\ul\cf2 24}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 git.py}}}
.}\par
}
{\xe \v url\:final.git.download}
{\xe \v final.git.download\:url}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.git.download.url}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAND" }{}}{\fldrslt {\cs37\ul\cf2 9}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMQ" }{}}{\fldrslt {\cs37\ul\cf2 git.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 git.py}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.git_legacy.download Class Reference\par \pard\plain 
{\tc\tcl2 \v final.git_legacy.download}
{\xe \v final.git_legacy.download}
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self, str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARE" }{}}{\fldrslt {\cs37\ul\cf2 url}}}
)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARJ" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASM" }{}}{\fldrslt {\cs37\ul\cf2 extract}}}
 (self, destionation='./')\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATJ" }{}}{\fldrslt {\cs37\ul\cf2 remove_info}}}
 (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARE" }{}}{\fldrslt {\cs37\ul\cf2 url}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARG" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 directory}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATE" }{}}{\fldrslt {\cs37\ul\cf2 target_dir}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAQZ" }{}}{\fldrslt {\cs37\ul\cf2 39}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPJ" }{}}{\fldrslt {\cs37\ul\cf2 git_legacy.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:final.git_legacy.download}
{\xe \v final.git_legacy.download\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.git_legacy.download.__init__ (  {\i self}, str  {\i url})}}
\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARB" }{}}{\fldrslt {\cs37\ul\cf2 40}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPJ" }{}}{\fldrslt {\cs37\ul\cf2 git_legacy.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00040     {\cf17 def }__init__(self, url: str):\par
00041         self.url = url\par
00042         self.name = {\cf22 'new.zip'}\par
00043 \par
}
}
{\xe \v download\:final.git_legacy.download}
{\xe \v final.git_legacy.download\:download}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.git_legacy.download.download (  {\i self})}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The download function downloads the zip file from the url, extracts it and returns a list of all files in the directory\par
\par
:param self: Access the class attributes and methods\par
:return: The directory of the extracted files\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARI" }{}}{\fldrslt {\cs37\ul\cf2 44}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPJ" }{}}{\fldrslt {\cs37\ul\cf2 git_legacy.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00044     {\cf17 def }download(self):\par
00045         {\cf22 """}\par
00046 {\cf22         The download function downloads the zip file }{\cf17 from} the url, extracts it {\cf19 and} returns a list of all files {\cf19 in} the directory\par
00047 \par
00048         :param self: Access the {\cf17 class }attributes and methods\par
00049         :{\cf19 return}: The directory of the extracted files\par
00050         {\cf22 """}\par
00051 {\cf22         directory_before = os.listdir()}\par
00052 {\cf22         download_file(self.url, self.name)}\par
00053 {\cf22         }{\cf17 with} zipfile.ZipFile(self.name, mode={\cf22 'r'}) {\cf17 as} zip:\par
00054             {\cf19 for} member {\cf19 in} tqdm(iterable=zip.namelist(), total=len(zip.namelist()), desc={\cf22 'Extracting '}):\par
00055                 {\cf19 try}:\par
00056                     zip.extract(member)\par
00057                     tqdm.write(\par
00058                         f{\cf22 "\{os.path.basename(member)\}("} + str(os.path.getsize(member)) + {\cf22 "KB)"})\par
00059                 {\cf19 except} zipfile.error {\cf17 as} e:\par
00060                     {\cf19 pass}\par
00061         os.remove(self.name)\par
00062         directory_after = os.listdir()\par
00063         self.directory = []\par
00064         {\cf19 for} i {\cf19 in} directory_after:\par
00065             {\cf19 if} i {\cf19 in} directory_before:\par
00066                 {\cf19 continue}\par
00067             self.directory = i\par
00068         print(self.directory)\par
00069         {\cf19 return} self\par
00070 \par
}
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/df5/classfinal_1_1git__legacy_1_1download_abeae32779bbbceb664486d8745372087_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v extract\:final.git_legacy.download}
{\xe \v final.git_legacy.download\:extract}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.git_legacy.download.extract (  {\i self},   {\i destionation} = {\f2 './'})}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The extract function takes a directory as an argument and moves all files from the source directory to the target directory.\par
It then deletes the source directory.\par
\par
:param self: Refer to the object itself\par
:param destionation: Specify the location where the files will be extracted to\par
:return: The object itself\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASL" }{}}{\fldrslt {\cs37\ul\cf2 71}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPJ" }{}}{\fldrslt {\cs37\ul\cf2 git_legacy.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00071     {\cf17 def }extract(self, destionation='./'):\par
00072         {\cf22 """}\par
00073 {\cf22         The extract function takes a directory }{\cf17 as} an argument {\cf19 and} moves all files {\cf17 from} the source directory to the target directory.\par
00074         It then deletes the source directory.\par
00075 \par
00076         :param self: Refer to the object itself\par
00077         :param destionation: Specify the location where the files will be extracted to\par
00078         :{\cf19 return}: The object itself\par
00079         {\cf22 """}\par
00080 {\cf22         source_dir = f'\{self.directory\}/'}\par
00081         target_dir = destionation\par
00082         file_names = os.listdir(source_dir)\par
00083         {\cf19 for} file_name {\cf19 in} file_names:\par
00084             {\cf19 try}:\par
00085                 shutil.move(os.path.join(source_dir, file_name), target_dir)\par
00086             {\cf19 except} shutil.Error:\par
00087                 {\cf19 pass}\par
00088         self.target_dir = target_dir\par
00089         shutil.rmtree(source_dir)\par
00090         {\cf19 return} self\par
00091 \par
}
}
{\xe \v remove_info\:final.git_legacy.download}
{\xe \v final.git_legacy.download\:remove_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.git_legacy.download.remove_info (  {\i self})}}
\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The remove_info function removes the README.md and requirements.txt files from the target directory.\par
\par
:param self: Represent the instance of the class\par
:return: Nothing\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATI" }{}}{\fldrslt {\cs37\ul\cf2 92}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPJ" }{}}{\fldrslt {\cs37\ul\cf2 git_legacy.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00092     {\cf17 def }remove_info(self):\par
00093         {\cf22 """}\par
00094 {\cf22         The remove_info function removes the README.md }{\cf19 and} requirements.txt files {\cf17 from} the target directory.\par
00095 \par
00096         :param self: Represent the instance of the {\cf17 class}\par
00097         :{\cf19 return}: Nothing\par
00098         {\cf22 """}\par
00099 {\cf22         file_names = os.listdir(self.target_dir)}\par
00100 {\cf22         }{\cf19 for} file_name {\cf19 in} file_names:\par
00101             {\cf19 if} file_name {\cf19 in} [{\cf22 "README.md"}, {\cf22 'requirements.txt'}]:\par
00102                 {\cf19 try}:\par
00103                     os.remove(file_name)\par
00104                 {\cf19 except} FileNotFoundError:\par
00105                     {\cf19 pass}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v directory\:final.git_legacy.download}
{\xe \v final.git_legacy.download\:directory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.git_legacy.download.directory}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASC" }{}}{\fldrslt {\cs37\ul\cf2 63}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPJ" }{}}{\fldrslt {\cs37\ul\cf2 git_legacy.py}}}
.}\par
}
{\xe \v name\:final.git_legacy.download}
{\xe \v final.git_legacy.download\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.git_legacy.download.name}}
\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARF" }{}}{\fldrslt {\cs37\ul\cf2 42}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPJ" }{}}{\fldrslt {\cs37\ul\cf2 git_legacy.py}}}
.}\par
}
{\xe \v target_dir\:final.git_legacy.download}
{\xe \v final.git_legacy.download\:target_dir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.git_legacy.download.target_dir}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATD" }{}}{\fldrslt {\cs37\ul\cf2 88}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPJ" }{}}{\fldrslt {\cs37\ul\cf2 git_legacy.py}}}
.}\par
}
{\xe \v url\:final.git_legacy.download}
{\xe \v final.git_legacy.download\:url}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.git_legacy.download.url}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARD" }{}}{\fldrslt {\cs37\ul\cf2 41}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPJ" }{}}{\fldrslt {\cs37\ul\cf2 git_legacy.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPK" }{}}{\fldrslt {\cs37\ul\cf2 git_legacy.py}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.rapi.fanart Class Reference\par \pard\plain 
{\tc\tcl2 \v final.rapi.fanart}
{\xe \v final.rapi.fanart}
{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNG" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self, int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPF" }{}}{\fldrslt {\cs37\ul\cf2 server}}}
=0, str type='sfw', str category='waifu')\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPI" }{}}{\fldrslt {\cs37\ul\cf2 get_new}}}
 (self, int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPF" }{}}{\fldrslt {\cs37\ul\cf2 server}}}
=0, str type='sfw', str category='waifu')\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRI" }{}}{\fldrslt {\cs37\ul\cf2 get_error}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRS" }{}}{\fldrslt {\cs37\ul\cf2 get_url}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 get_data}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSV" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
 (self, str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
='image.png', str destination='.\\\\')\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUD" }{}}{\fldrslt {\cs37\ul\cf2 show}}}
 (self, str side='right')\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWE" }{}}{\fldrslt {\cs37\ul\cf2 hide}}}
 (self, bool delete=True)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXC" }{}}{\fldrslt {\cs37\ul\cf2 sleep}}}
 (self, float seconds)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOM" }{}}{\fldrslt {\cs37\ul\cf2 res}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPF" }{}}{\fldrslt {\cs37\ul\cf2 server}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUU" }{}}{\fldrslt {\cs37\ul\cf2 media_player}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABND" }{}}{\fldrslt {\cs37\ul\cf2 103}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:final.rapi.fanart}
{\xe \v final.rapi.fanart\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.rapi.fanart.__init__ (  {\i self}, int   {\i server} = {\f2 0}, str   {\i type} = {\f2 'sfw'}, str   {\i category} = {\f2 'waifu'})}}
\par
{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNF" }{}}{\fldrslt {\cs37\ul\cf2 104}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00104     {\cf17 def }__init__(self, server: int = 0, type: str = {\cf22 'sfw'}, category: str = {\cf22 'waifu'}):\par
00105         self.error: list[str] = []\par
00106         servers = [0, 1]\par
00107         types = [{\cf22 'sfw'}, {\cf22 'nsfw'}]\par
00108         category_sfw: list[str] = [{\cf22 "waifu"}, {\cf22 "neko"}, {\cf22 "shinobu"}, {\cf22 "megumin"}, {\cf22 "bully"}, {\cf22 "cuddle"}, {\cf22 "cry"}, {\cf22 "hug"}, {\cf22 "awoo"}, {\cf22 "kiss"}, {\cf22 "lick"}, {\cf22 "pat"}, {\cf22 "smug"}, {\cf22 "bonk"}, {\cf22 "yeet"}, {\cf22 "blush"},\par
00109                                    {\cf22 "smile"}, {\cf22 "wave"}, {\cf22 "highfive"}, {\cf22 "handhold"}, {\cf22 "nom"}, {\cf22 "bite"}, {\cf22 "glomp"}, {\cf22 "slap"}, {\cf22 "kill"}, {\cf22 "kick"}, {\cf22 "happy"}, {\cf22 "wink"}, {\cf22 "poke"}, {\cf22 "dance"}, {\cf22 "cringe"}, {\cf22 "back"}]\par
00110         category_nsfw: list[str] = [{\cf22 'waifu'}, {\cf22 'neko'}, {\cf22 'trap'}, {\cf22 'blowjob'}, {\cf22 'back'}]\par
00111         {\cf19 if} {\cf19 not} type {\cf19 in} types:\par
00112             logging.error({\cf22 "Unknown type"})\par
00113             {\cf19 raise} ValueError(f{\cf22 'Type not found \{types\}, given \{type\}'})\par
00114         {\cf19 if} type == {\cf22 'sfw'} {\cf19 and} category {\cf19 not} {\cf19 in} category_sfw {\cf19 and} server == 0:\par
00115             logging.error({\cf22 "Unknown category"})\par
00116             {\cf19 if} category {\cf19 in} category_nsfw:\par
00117                 {\cf19 raise} ValueError(f{\cf22 'Category not found, but found in type nsfw'})\par
00118             {\cf19 raise} ValueError(\par
00119                 f{\cf22 'Category not found \{category_sfw\}, given \{category\}'})\par
00120         {\cf19 if} type == {\cf22 'nsfw'} {\cf19 and} category {\cf19 not} {\cf19 in} category_nsfw {\cf19 and} server == 0:\par
00121             logging.error({\cf22 'Unknown category'})\par
00122             {\cf19 if} category {\cf19 in} category_sfw:\par
00123                 {\cf19 raise} ValueError(f{\cf22 'Category not found, but found in type sfw'})\par
00124             {\cf19 raise} ValueError(\par
00125                 f{\cf22 'Category not found \{category_nsfw\}, given \{category\}'})\par
00126         {\cf19 if} server == 0:\par
00127             {\cf19 try}:\par
00128                 resp = requests.get(\par
00129                     {\cf22 "https://api.waifu.pics/"} + type + {\cf22 "/"} + category)\par
00130             {\cf19 except} requests.exceptions.ConnectionError:\par
00131                 logging.error({\cf22 "Connection error"})\par
00132                 {\cf19 raise} ConnectionError(\par
00133                     {\cf22 'Make sure you have a connection established'})\par
00134             self.data: dict[str, str] = resp.json()\par
00135             self.res = requests.get(self.data[{\cf22 "url"}], stream={\cf17 True})\par
00136         {\cf19 elif} server == 1:\par
00137             {\cf19 try}:\par
00138                 resp = requests.get({\cf22 "https://nekos.best/api/v2/neko"})\par
00139             {\cf19 except} requests.exceptions.ConnectionError:\par
00140                 logging.error({\cf22 "Connection error"})\par
00141                 {\cf19 raise} ConnectionError(\par
00142                     {\cf22 'Make sure you have a connection established'})\par
00143             self.data: dict[str, str] = resp.json()\par
00144             self.res = requests.get(\par
00145                 self.data[{\cf22 "results"}][0][{\cf22 "url"}], stream={\cf17 True})  {\cf20 # type: ignore}\par
00146             {\cf19 if} type != {\cf22 'sfw'} {\cf19 or} category != {\cf22 'waifu'}:\par
00147                 logging.warning({\cf22 "Type and category not supported on server 1"})\par
00148                 self.error.append(\par
00149                     f{\cf22 'type or category not supported on this server, given \{server\}'})\par
00150         {\cf19 else}:\par
00151             {\cf19 raise} ValueError(f{\cf22 "Server not found: \{servers\}, given \{server\}"})\par
00152         {\cf19 if} self.res.status_code == 200:\par
00153             self.server = server\par
00154 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v download\:final.rapi.fanart}
{\xe \v final.rapi.fanart\:download}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.rapi.fanart.download (  {\i self}, str   {\i filename} = {\f2 'image.png'}, str   {\i destination} = {\f2 '.\\\\'})}}
\par
{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The download function downloads the image from the url and saves it to a specified location.\par
The function takes two arguments, filename and destination. \par
If no filename is given, then 'image.png' will be used as default value for the file name argument. \par
If no destination is given, then current working directory will be used as default value for the destination argument.\par
\par
:param self: Access variables that belongs to the class\par
:param filename: str: Specify the name of the file that will be downloaded\par
:param destination: str: Specify the directory where the image is to be saved\par
:return: The filename of the image\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSU" }{}}{\fldrslt {\cs37\ul\cf2 242}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00242     {\cf17 def }download(self, filename: str = {\cf22 'image.png'}, destination: str = {\cf22 '.\\\\'}):\par
00243         {\cf22 """}\par
00244 {\cf22         The download function downloads the image }{\cf17 from} the url {\cf19 and} saves it to a specified location.\par
00245         The function takes two arguments, filename {\cf19 and} destination. \par
00246         If no filename {\cf19 is} given, then {\cf22 'image.png'} will be used {\cf17 as} default value {\cf19 for} the file name argument. \par
00247         If no destination {\cf19 is} given, then current working directory will be used {\cf17 as} default value {\cf19 for} the destination argument.\par
00248 \par
00249         :param self: Access variables that belongs to the {\cf17 class}\par
00250         :param filename: str: Specify the name of the file that will be downloaded\par
00251         :param destination: str: Specify the directory where the image {\cf19 is} to be saved\par
00252         :{\cf19 return}: The filename of the image\par
00253         {\cf22 """}\par
00254 {\cf22         }{\cf19 if} self.res.status_code == 200:\par
00255             {\cf19 if} self.server == 0:\par
00256                 {\cf19 if} self.data[{\cf22 "url"}].split({\cf22 '.'})[-1] == {\cf22 'gif'}:\par
00257                     logging.info({\cf22 "Downloading image as gif"})\par
00258                     filename = destination + \\\par
00259                         str(filename.split({\cf22 '.'})[0:-1][0]) + {\cf22 '.gif'}\par
00260                     download(self.data[{\cf22 'url'}], filename)\par
00261                 {\cf19 else}:\par
00262                     filename = destination + filename\par
00263                     download(self.data[{\cf22 'url'}], filename)\par
00264             {\cf19 elif} self.server == 1:\par
00265                 download(self.data[{\cf22 "results"}][0][{\cf22 "url"}],  {\cf20 # type: ignore}\par
00266                          destination + filename)\par
00267             {\cf19 else}:\par
00268                 logging.error({\cf22 'Server not found'})\par
00269                 {\cf19 raise} ValueError({\cf22 'Server not found'})\par
00270             self.filename = filename\par
00271             {\cf19 return} self\par
00272         {\cf19 return} self\par
00273 \par
}
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d46/classfinal_1_1rapi_1_1fanart_a1bd29c957046bb1b666db1fcd64ab908_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d46/classfinal_1_1rapi_1_1fanart_a1bd29c957046bb1b666db1fcd64ab908_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v get_data\:final.rapi.fanart}
{\xe \v final.rapi.fanart\:get_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.rapi.fanart.get_data (  {\i self})}}
\par
{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The get_data function returns the data stored in the object. If no data is present, it will return None.\par
\par
:param self: Access variables that belongs to the class\par
:return: The data attribute of the object\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSH" }{}}{\fldrslt {\cs37\ul\cf2 230}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00230     {\cf17 def }get_data(self):\par
00231         {\cf22 """}\par
00232 {\cf22         The get_data function returns the data stored }{\cf19 in} the object. If no data {\cf19 is} present, it will {\cf19 return} {\cf18 None}.\par
00233 \par
00234         :param self: Access variables that belongs to the {\cf17 class}\par
00235         :{\cf19 return}: The data attribute of the object\par
00236         {\cf22 """}\par
00237 {\cf22         }{\cf19 if} self.server == 0:\par
00238             {\cf19 return} self.data\par
00239         {\cf19 elif} self.server == 1:\par
00240             {\cf19 return} self.data\par
00241 \par
}
}
{\xe \v get_error\:final.rapi.fanart}
{\xe \v final.rapi.fanart\:get_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.rapi.fanart.get_error (  {\i self})}}
\par
{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The get_error function returns the error of the current state.\par
\par
:param self: Refer to the object itself\par
:return: The error of the neuron\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRH" }{}}{\fldrslt {\cs37\ul\cf2 206}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00206     {\cf17 def }get_error(self):\par
00207         {\cf22 """}\par
00208 {\cf22         The get_error function returns the error of the current state.}\par
00209 {\cf22 }\par
00210 {\cf22         :param self: Refer to the object itself}\par
00211 {\cf22         :}{\cf19 return}: The error of the neuron\par
00212         {\cf22 """}\par
00213 {\cf22         }{\cf19 return} self.error\par
00214 \par
}
}
{\xe \v get_new\:final.rapi.fanart}
{\xe \v final.rapi.fanart\:get_new}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.rapi.fanart.get_new (  {\i self}, int   {\i server} = {\f2 0}, str   {\i type} = {\f2 'sfw'}, str   {\i category} = {\f2 'waifu'})}}
\par
{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPH" }{}}{\fldrslt {\cs37\ul\cf2 155}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00155     {\cf17 def }get_new(self, server: int = 0, type: str = {\cf22 'sfw'}, category: str = {\cf22 'waifu'}):\par
00156         servers = [0, 1]\par
00157         types = [{\cf22 'sfw'}, {\cf22 'nsfw'}]\par
00158         category_sfw: list[str] = [{\cf22 "waifu"}, {\cf22 "neko"}, {\cf22 "shinobu"}, {\cf22 "megumin"}, {\cf22 "bully"}, {\cf22 "cuddle"}, {\cf22 "cry"}, {\cf22 "hug"}, {\cf22 "awoo"}, {\cf22 "kiss"}, {\cf22 "lick"}, {\cf22 "pat"}, {\cf22 "smug"}, {\cf22 "bonk"}, {\cf22 "yeet"}, {\cf22 "blush"},\par
00159                                    {\cf22 "smile"}, {\cf22 "wave"}, {\cf22 "highfive"}, {\cf22 "handhold"}, {\cf22 "nom"}, {\cf22 "bite"}, {\cf22 "glomp"}, {\cf22 "slap"}, {\cf22 "kill"}, {\cf22 "kick"}, {\cf22 "happy"}, {\cf22 "wink"}, {\cf22 "poke"}, {\cf22 "dance"}, {\cf22 "cringe"}, {\cf22 "back"}]\par
00160         category_nsfw: list[str] = [{\cf22 'waifu'}, {\cf22 'neko'}, {\cf22 'trap'}, {\cf22 'blowjob'}, {\cf22 'back'}]\par
00161         {\cf19 if} {\cf19 not} type {\cf19 in} types:\par
00162             logging.error({\cf22 "Unknown type"})\par
00163             {\cf19 raise} ValueError(f{\cf22 'Type not found \{types\}, given \{type\}'})\par
00164         {\cf19 if} type == {\cf22 'sfw'} {\cf19 and} category {\cf19 not} {\cf19 in} category_sfw {\cf19 and} server == 0:\par
00165             logging.error({\cf22 "Unknown category"})\par
00166             {\cf19 if} category {\cf19 in} category_nsfw:\par
00167                 {\cf19 raise} ValueError(f{\cf22 'Category not found, but found in type nsfw'})\par
00168             {\cf19 raise} ValueError(\par
00169                 f{\cf22 'Category not found \{category_sfw\}, given \{category\}'})\par
00170         {\cf19 if} type == {\cf22 'nsfw'} {\cf19 and} category {\cf19 not} {\cf19 in} category_nsfw {\cf19 and} server == 0:\par
00171             logging.error({\cf22 'Unknown category'})\par
00172             {\cf19 if} category {\cf19 in} category_sfw:\par
00173                 {\cf19 raise} ValueError(f{\cf22 'Category not found, but found in type sfw'})\par
00174             {\cf19 raise} ValueError(\par
00175                 f{\cf22 'Category not found \{category_nsfw\}, given \{category\}'})\par
00176         {\cf19 if} server == 0:\par
00177             {\cf19 try}:\par
00178                 resp = requests.get(\par
00179                     {\cf22 "https://api.waifu.pics/"} + type + {\cf22 "/"} + category)\par
00180             {\cf19 except} requests.exceptions.ConnectionError:\par
00181                 logging.error({\cf22 "Connection error"})\par
00182                 {\cf19 raise} ConnectionError(\par
00183                     {\cf22 'Make sure you have a connection established'})\par
00184             self.data: dict[str, str] = resp.json()\par
00185             self.res = requests.get(self.data[{\cf22 "url"}], stream={\cf17 True})\par
00186         {\cf19 elif} server == 1:\par
00187             {\cf19 try}:\par
00188                 resp = requests.get({\cf22 "https://nekos.best/api/v2/neko"})\par
00189             {\cf19 except} requests.exceptions.ConnectionError:\par
00190                 logging.error({\cf22 "Connection error"})\par
00191                 {\cf19 raise} ConnectionError(\par
00192                     {\cf22 'Make sure you have a connection established'})\par
00193             self.data: dict[str, str] = resp.json()\par
00194             self.res = requests.get(\par
00195                 self.data[{\cf22 "results"}][0][{\cf22 "url"}], stream={\cf17 True})  {\cf20 # type: ignore}\par
00196             {\cf19 if} type != {\cf22 'sfw'} {\cf19 or} category != {\cf22 'waifu'}:\par
00197                 logging.warning({\cf22 "Type and category not supported on server 1"})\par
00198                 self.error.append(\par
00199                     f{\cf22 'type or category not supported on this server, given \{server\}'})\par
00200         {\cf19 else}:\par
00201             {\cf19 raise} ValueError(f{\cf22 "Server not found: \{servers\}, given \{server\}"})\par
00202         {\cf19 if} self.res.status_code == 200:\par
00203             self.server = server\par
00204         {\cf19 return} self\par
00205 \par
}
}
{\xe \v get_url\:final.rapi.fanart}
{\xe \v final.rapi.fanart\:get_url}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.rapi.fanart.get_url (  {\i self})}}
\par
{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The get_url function returns the URL of a given search result.\par
If there is no server specified, it will return the URL from the \par
first search result in self.data[&quot;results&quot;]. If there is a server \par
specified, it will return the URL from that specific search result.\par
\par
:param self: Reference the object itself\par
:return: The url of the first search result\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRR" }{}}{\fldrslt {\cs37\ul\cf2 215}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00215     {\cf17 def }get_url(self):\par
00216         {\cf22 """}\par
00217 {\cf22         The get_url function returns the URL of a given search result.}\par
00218 {\cf22         If there }{\cf19 is} no server specified, it will {\cf19 return} the URL {\cf17 from} the \par
00219         first search result {\cf19 in} self.data[&quot;results&quot;]. If there {\cf19 is} a server \par
00220         specified, it will {\cf19 return} the URL {\cf17 from} that specific search result.\par
00221 \par
00222         :param self: Reference the object itself\par
00223         :{\cf19 return}: The url of the first search result\par
00224         {\cf22 """}\par
00225 {\cf22         }{\cf19 if} self.server == 0:\par
00226             {\cf19 return} self.data[{\cf22 "url"}]\par
00227         {\cf19 elif} self.server == 1:\par
00228             {\cf19 return} self.data[{\cf22 "results"}][0][{\cf22 "url"}]  {\cf20 # type: ignore}\par
00229 \par
}
}
{\xe \v hide\:final.rapi.fanart}
{\xe \v final.rapi.fanart\:hide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.rapi.fanart.hide (  {\i self}, bool   {\i delete} = {\f2 True})}}
\par
{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The hide function hides the image or video.\par
\par
:param self: Access the class attributes\par
:return: None\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWD" }{}}{\fldrslt {\cs37\ul\cf2 325}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00325     {\cf17 def }hide(self, delete: bool = {\cf17 True}):\par
00326         {\cf22 """}\par
00327 {\cf22         The hide function hides the image }{\cf19 or} video.\par
00328 \par
00329         :param self: Access the {\cf17 class }attributes\par
00330         :{\cf19 return}: {\cf18 None}\par
00331         {\cf22 """}\par
00332 {\cf22         }{\cf19 if} self.filename.split({\cf22 '.'})[-1] == {\cf22 'gif'}:\par
00333             self.media_player.stop()  {\cf20 # type: ignore}\par
00334             sleep(0.1)\par
00335             {\cf19 if} delete:\par
00336                 os.remove({\cf22 '.'} + self.filename.split({\cf22 '.'})[0:-1][1] + {\cf22 '.mp4'})\par
00337         {\cf19 else}:\par
00338             pg.keyDown({\cf22 'alt'})\par
00339             pg.press({\cf22 'tab'})\par
00340             pg.keyUp({\cf22 'alt'})\par
00341             pg.keyDown({\cf22 'alt'})\par
00342             pg.press({\cf22 'f4'})\par
00343             pg.keyUp({\cf22 'alt'})\par
00344             {\cf19 if} delete:\par
00345                 os.remove(self.filename)\par
00346         {\cf19 return} self\par
00347 \par
}
}
{\xe \v show\:final.rapi.fanart}
{\xe \v final.rapi.fanart\:show}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.rapi.fanart.show (  {\i self}, str   {\i side} = {\f2 'right'})}}
\par
{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The show function is used to display the image. It takes a single argument, side, which defaults to right.\par
The show function will open the image in Windows Photo Viewer and then play it in VLC media player.\par
\par
:param self: Access variables that belongs to the class\par
:param side: str: Specify which side of the screen to show the image on\par
:return: The object itself\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUC" }{}}{\fldrslt {\cs37\ul\cf2 274}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00274     {\cf17 def }show(self, side: str = {\cf22 'right'}):\par
00275         {\cf22 """}\par
00276 {\cf22         The show function }{\cf19 is} used to display the image. It takes a single argument, side, which defaults to right.\par
00277         The show function will open the image {\cf19 in} Windows Photo Viewer {\cf19 and} then play it {\cf19 in} VLC media player.\par
00278 \par
00279         :param self: Access variables that belongs to the {\cf17 class}\par
00280         :param side: str: Specify which side of the screen to show the image on\par
00281         :{\cf19 return}: The object itself\par
00282         {\cf22 """}\par
00283 {\cf22         }{\cf19 if} self.filename.split({\cf22 '.'})[-1] == {\cf22 'gif'}:\par
00284             {\cf19 if} os.path.exists(self.filename):\par
00285                 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGC" }{}}{\fldrslt {\cs37\ul\cf2 final.pymp4.video}}}
(self.filename).g2v()\par
00286                 os.remove(self.filename)\par
00287             {\cf19 if} os.path.exists({\cf22 '.'} + self.filename.split({\cf22 '.'})[0:-1][1] + {\cf22 '.mp4'}):\par
00288                 player = vlc.Instance({\cf22 '--input-repeat=999999'})\par
00289                 media_list = player.media_list_new()  {\cf20 # type: ignore}\par
00290                 self.media_player = player.media_list_player_new()  {\cf20 # type: ignore}\par
00291                 media = player.media_new(  {\cf20 # type: ignore}\par
00292                     {\cf22 '.'} + self.filename.split({\cf22 '.'})[0:-1][1] + {\cf22 '.mp4'})\par
00293                 media_list.add_media(media)\par
00294                 self.media_player.set_media_list(media_list)\par
00295                 player.vlm_set_loop({\cf22 "video"}, {\cf17 True})  {\cf20 # type: ignore}\par
00296                 self.media_player.play()\par
00297                 sleep(0.4)\par
00298                 window = pygetwindow.getWindowsWithTitle(\par
00299                     {\cf22 'VLC (Direct3D11 Output)'})[0]\par
00300                 window.activate()\par
00301                 pg.keyDown({\cf22 'win'})\par
00302                 pg.press(side)\par
00303                 pg.keyUp({\cf22 'win'})\par
00304                 pg.press({\cf22 'esc'})\par
00305                 sleep(0.25)\par
00306                 pg.keyDown({\cf22 'alt'})\par
00307                 pg.press({\cf22 'tab'})\par
00308                 pg.keyUp({\cf22 'alt'})\par
00309                 sleep(1)\par
00310             {\cf19 else}:\par
00311                 logging.error({\cf22 'File not found'})\par
00312         {\cf19 else}:\par
00313             img = Image.open(self.filename)\par
00314             img.show()\par
00315             pg.keyDown({\cf22 'win'})\par
00316             pg.press({\cf22 'right'})\par
00317             pg.keyUp({\cf22 'win'})\par
00318             pg.press({\cf22 'esc'})\par
00319             sleep(0.25)\par
00320             pg.keyDown({\cf22 'alt'})\par
00321             pg.press({\cf22 'tab'})\par
00322             pg.keyUp({\cf22 'alt'})\par
00323         {\cf19 return} self\par
00324 \par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d46/classfinal_1_1rapi_1_1fanart_a3429e7f312fab7d2861705553649b425_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sleep\:final.rapi.fanart}
{\xe \v final.rapi.fanart\:sleep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.rapi.fanart.sleep (  {\i self}, float  {\i seconds})}}
\par
{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXB" }{}}{\fldrslt {\cs37\ul\cf2 348}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00348     {\cf17 def }sleep(self, seconds: float):\par
00349         {\cf17 from} time {\cf17 import} sleep\par
00350         sleep(seconds)\par
00351         {\cf19 return} self\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v filename\:final.rapi.fanart}
{\xe \v final.rapi.fanart\:filename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.rapi.fanart.filename}}
\par
{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTX" }{}}{\fldrslt {\cs37\ul\cf2 270}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
}
{\xe \v media_player\:final.rapi.fanart}
{\xe \v final.rapi.fanart\:media_player}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.rapi.fanart.media_player}}
\par
{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUT" }{}}{\fldrslt {\cs37\ul\cf2 290}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
}
{\xe \v res\:final.rapi.fanart}
{\xe \v final.rapi.fanart\:res}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.rapi.fanart.res}}
\par
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOL" }{}}{\fldrslt {\cs37\ul\cf2 135}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
}
{\xe \v server\:final.rapi.fanart}
{\xe \v final.rapi.fanart\:server}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.rapi.fanart.server}}
\par
{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPE" }{}}{\fldrslt {\cs37\ul\cf2 153}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIW" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 rapi.py}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.writing.installing_carousel Class Reference\par \pard\plain 
{\tc\tcl2 \v final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel}
{\bkmkstart AAAAAAACFO}
{\bkmkend AAAAAAACFO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFQ" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self, str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFS" }{}}{\fldrslt {\cs37\ul\cf2 package}}}
, str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFU" }{}}{\fldrslt {\cs37\ul\cf2 comment}}}
='Installing', bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 bar}}}
=False, bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFY" }{}}{\fldrslt {\cs37\ul\cf2 move_by_command}}}
=False, bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGE" }{}}{\fldrslt {\cs37\ul\cf2 use_curses}}}
=False, int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 curses_y}}}
=0, int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 curses_x}}}
=0, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 curses_obj}}}
=None)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGP" }{}}{\fldrslt {\cs37\ul\cf2 start}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHB" }{}}{\fldrslt {\cs37\ul\cf2 pause}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHL" }{}}{\fldrslt {\cs37\ul\cf2 unpause}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHP" }{}}{\fldrslt {\cs37\ul\cf2 stop}}}
 (self, mode='s')\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIF" }{}}{\fldrslt {\cs37\ul\cf2 move}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGS" }{}}{\fldrslt {\cs37\ul\cf2 init}}}
 (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFS" }{}}{\fldrslt {\cs37\ul\cf2 package}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFU" }{}}{\fldrslt {\cs37\ul\cf2 comment}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 bar}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFY" }{}}{\fldrslt {\cs37\ul\cf2 move_by_command}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGC" }{}}{\fldrslt {\cs37\ul\cf2 id}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGE" }{}}{\fldrslt {\cs37\ul\cf2 use_curses}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 curses_y}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 curses_x}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 curses_obj}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGA" }{}}{\fldrslt {\cs37\ul\cf2 _move}}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFN" }{}}{\fldrslt {\cs37\ul\cf2 36}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.writing.installing_carousel.__init__ (  {\i self}, str  {\i package}, str   {\i comment} = {\f2 'Installing'}, bool   {\i bar} = {\f2 False}, bool   {\i move_by_command} = {\f2 False}, bool   {\i use_curses} = {\f2 False}, int   {\i curses_y} = {\f2 0}, int   {\i curses_x} = {\f2 0},   {\i curses_obj} = {\f2 None})}}
\par
{\bkmkstart AAAAAAACFQ}
{\bkmkend AAAAAAACFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFP" }{}}{\fldrslt {\cs37\ul\cf2 37}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00037     {\cf17 def }__init__(self, package: str, comment: str = {\cf22 'Installing'}, bar: bool = {\cf17 False}, move_by_command: bool = {\cf17 False}, use_curses: bool = {\cf17 False}, curses_y: int = 0, curses_x: int = 0, curses_obj = {\cf18 None}):\par
00038         self.package = package\par
00039         self.comment = comment\par
00040         self.bar = bar\par
00041         self.move_by_command = move_by_command\par
00042         self._move = 0\par
00043         self.id = get_id()\par
00044         self.use_curses = use_curses\par
00045         self.curses_y = curses_y\par
00046         self.curses_x = curses_x\par
00047         self.curses_obj = curses_obj\par
00048         {\cf19 if} self.use_curses {\cf19 and} self.curses_obj {\cf19 is} {\cf18 None}:\par
00049             {\cf19 raise} curses.error({\cf22 'curses object is not specified; curses_obj'})\par
00050 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v init\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.writing.installing_carousel.init (  {\i self})}}
\par
{\bkmkstart AAAAAAACGS}
{\bkmkend AAAAAAACGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The init function is used to initialize the package installation.\par
It will print a loading bar until it finds an INSTALL_DONE, INSTALL_ERROR or \par
INSTALL_ALINST file in the current directory. If it finds an INSTALL_DONE file, \par
it will print DONE after the package name and if it finds an INSTALL_ERROR file, \par
it will print ERROR after the package name. If it finds an INSTALL_ALINST file, \par
it will print ALREADY INSTALLED after the package name.\par
\par
:param self: Represent the instance of the class\par
:return: Nothing, so the return statement is not needed\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACII" }{}}{\fldrslt {\cs37\ul\cf2 91}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00091     {\cf17 def }init(self):\par
00092         {\cf22 """}\par
00093 {\cf22         The init function }{\cf19 is} used to initialize the package installation.\par
00094         It will {\cf19 print} a loading bar until it finds an INSTALL_DONE, INSTALL_ERROR {\cf19 or} \par
00095         INSTALL_ALINST file {\cf19 in} the current directory. If it finds an INSTALL_DONE file, \par
00096         it will {\cf19 print} DONE after the package name {\cf19 and} {\cf19 if} it finds an INSTALL_ERROR file, \par
00097         it will {\cf19 print} ERROR after the package name. If it finds an INSTALL_ALINST file, \par
00098         it will {\cf19 print} ALREADY INSTALLED after the package name.\par
00099 \par
00100         :param self: Represent the instance of the {\cf17 class}\par
00101         :{\cf19 return}: Nothing, so the {\cf19 return} statement {\cf19 is} {\cf19 not} needed\par
00102         {\cf22 """}\par
00103 {\cf22         error = }{\cf17 False}\par
00104         alinst = {\cf17 False}\par
00105         number = 0\par
00106         char = [{\cf22 '|'}, {\cf22 '/'}, {\cf22 '-'}, {\cf22 '\\\\'}]\par
00107         {\cf19 while} {\cf17 True}:\par
00108             {\cf19 if} os.path.isfile(f{\cf22 'INSTALL_DONE\{self.id\}'}):\par
00109                 {\cf19 break}\par
00110             {\cf19 if} os.path.isfile(f{\cf22 'INSTALL_ERROR\{self.id\}'}):\par
00111                 error = {\cf17 True}\par
00112                 {\cf19 break}\par
00113             {\cf19 if} os.path.isfile(f{\cf22 'INSTALL_ALINST\{self.id\}'}):\par
00114                 alinst = {\cf17 True}\par
00115                 {\cf19 break}\par
00116             {\cf19 if} os.path.isfile(f{\cf22 'INSTALL_PAUSE\{self.id\}'}):\par
00117                 {\cf19 if} {\cf19 not} self.bar:\par
00118                     {\cf19 if} {\cf19 not} self.use_curses:\par
00119                         print(\par
00120                             {\cf22 '                                            '}, end={\cf22 '\\r'})\par
00121                     {\cf19 else}:\par
00122                         self.curses_obj.addstr(\par
00123                             self.curses_y, self.curses_x, {\cf22 '                                            '})\par
00124                         self.curses_obj.refresh()\par
00125                 {\cf19 if} self.bar:\par
00126                     tqdm.write(\par
00127                         {\cf22 '                                            '})\par
00128                 os.remove(f{\cf22 'INSTALL_PAUSE\{self.id\}'})\par
00129                 {\cf19 while} {\cf19 not} os.path.isfile(f{\cf22 'INSTALL_UNPAUSE\{self.id\}'}):\par
00130                     sleep(0.1)\par
00131                 os.remove(f{\cf22 'INSTALL_UNPAUSE\{self.id\}'})\par
00132             {\cf19 if} {\cf19 not} self.bar:\par
00133                 {\cf19 if} {\cf19 not} self.use_curses:\par
00134                     print(\par
00135                         f{\cf22 '\{self.comment\} \{self.package\} \{char[number]\}               '}, end={\cf22 '\\r'})\par
00136                 {\cf19 else}:\par
00137                     self.curses_obj.addstr(\par
00138                         self.curses_y, self.curses_x, f{\cf22 '\{self.comment\} \{self.package\} \{char[number]\}               '})\par
00139                     self.curses_obj.refresh()\par
00140             {\cf19 if} self.bar:\par
00141                 tqdm.write(\par
00142                     f{\cf22 '\{self.comment\} \{self.package\} \{char[number]\}               '})\par
00143             {\cf19 if} {\cf19 not} self.move_by_command {\cf19 or} self._move != 0 {\cf19 and} self.move_by_command:\par
00144                 number += 1\par
00145                 {\cf19 if} self.move_by_command:\par
00146                     self._move -= 1\par
00147             {\cf19 if} number >= len(char):\par
00148                 number = 0\par
00149             sleep(0.1)\par
00150         {\cf19 if} error:\par
00151             {\cf19 if} {\cf19 not} self.bar:\par
00152                 {\cf19 if} {\cf19 not} self.use_curses:\par
00153                     print(f{\cf22 '\{self.comment\} \{self.package\} ERROR             '})\par
00154                 {\cf19 else}:\par
00155                     self.curses_obj.addstr(\par
00156                         self.curses_y, self.curses_x, f{\cf22 '\{self.comment\} \{self.package\} ERROR             '})\par
00157                     self.curses_obj.refresh()\par
00158             {\cf19 if} self.bar:\par
00159                 tqdm.write(f{\cf22 '\{self.comment\} \{self.package\} ERROR             '})\par
00160         {\cf19 elif} alinst:\par
00161             {\cf19 if} {\cf19 not} self.bar:\par
00162                 {\cf19 if} {\cf19 not} self.use_curses:\par
00163                     print(\par
00164                         f{\cf22 '\{self.comment\} \{self.package\} ALREADY INSTALLED             '})\par
00165                 {\cf19 else}:\par
00166                     self.curses_obj.addstr(\par
00167                         self.curses_y, self.curses_x, f{\cf22 '\{self.comment\} \{self.package\} ALREADY INSTALLED             '})\par
00168                     self.curses_obj.refresh()\par
00169             {\cf19 if} self.bar:\par
00170                 tqdm.write(\par
00171                     f{\cf22 '\{self.comment\} \{self.package\} ALREADY INSTALLED             '})\par
00172         {\cf19 else}:\par
00173             {\cf19 if} {\cf19 not} self.bar:\par
00174                 {\cf19 if} {\cf19 not} self.use_curses:\par
00175                     print(f{\cf22 '\{self.comment\} \{self.package\} DONE             '})\par
00176                 {\cf19 else}:\par
00177                     self.curses_obj.addstr(\par
00178                         self.curses_y, self.curses_x, f{\cf22 '\{self.comment\} \{self.package\} DONE             '})\par
00179                     self.curses_obj.refresh()\par
00180             {\cf19 if} self.bar:\par
00181                 tqdm.write(f{\cf22 '\{self.comment\} \{self.package\} DONE             '})\par
00182         {\cf19 try}:\par
00183             os.remove(f{\cf22 'INSTALL_DONE\{self.id\}'})\par
00184         {\cf19 except} Exception:\par
00185             {\cf19 pass}\par
00186         {\cf19 try}:\par
00187             os.remove(f{\cf22 'INSTALL_ERROR\{self.id\}'})\par
00188         {\cf19 except} Exception:\par
00189             {\cf19 pass}\par
00190         {\cf19 try}:\par
00191             os.remove(f{\cf22 'INSTALL_ALINST\{self.id\}'})\par
00192         {\cf19 except} Exception:\par
00193             {\cf19 pass}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df7/classfinal_1_1writing_1_1installing__carousel_a1be88ab2dc7189af345dfbde65444803_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v move\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:move}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.writing.installing_carousel.move (  {\i self})}}
\par
{\bkmkstart AAAAAAACIF}
{\bkmkend AAAAAAACIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIE" }{}}{\fldrslt {\cs37\ul\cf2 88}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00088     {\cf17 def }move(self):\par
00089         self._move += 1\par
00090 \par
}
}
{\xe \v pause\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:pause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.writing.installing_carousel.pause (  {\i self})}}
\par
{\bkmkstart AAAAAAACHB}
{\bkmkend AAAAAAACHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The pause function is used to pause the installation of a package.\par
\par
:param self: Represent the instance of the class\par
:return: Nothing, it just creates a file\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHA" }{}}{\fldrslt {\cs37\ul\cf2 61}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00061     {\cf17 def }pause(self):\par
00062         {\cf22 """}\par
00063 {\cf22         The pause function }{\cf19 is} used to pause the installation of a package.\par
00064 \par
00065         :param self: Represent the instance of the {\cf17 class}\par
00066         :{\cf19 return}: Nothing, it just creates a file\par
00067         {\cf22 """}\par
00068 {\cf22         open(f"INSTALL_PAUSE\{self.id\}"}, {\cf22 'x'})\par
00069 \par
}
}
{\xe \v start\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.writing.installing_carousel.start (  {\i self})}}
\par
{\bkmkstart AAAAAAACGP}
{\bkmkend AAAAAAACGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The start function is the main function of the class. It starts a thread that runs init()\par
\par
:param self: Represent the instance of the class\par
:return: Nothing, so the return statement is never reached\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGO" }{}}{\fldrslt {\cs37\ul\cf2 51}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00051     {\cf17 def }start(self):\par
00052         {\cf22 """}\par
00053 {\cf22         The start function }{\cf19 is} the main function of the {\cf17 class}. It starts a thread that runs init()\par
00054 \par
00055         :param self: Represent the instance of the {\cf17 class}\par
00056         :{\cf19 return}: Nothing, so the {\cf19 return} statement {\cf19 is} never reached\par
00057         {\cf22 """}\par
00058 {\cf22 }\par
00059 {\cf22         Thread(target=self.init).start()}\par
00060 {\cf22 }\par
}
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df7/classfinal_1_1writing_1_1installing__carousel_ad1b3e99a12855c76ffc7c6670e6b8b57_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df7/classfinal_1_1writing_1_1installing__carousel_ad1b3e99a12855c76ffc7c6670e6b8b57_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v stop\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.writing.installing_carousel.stop (  {\i self},   {\i mode} = {\f2 's'})}}
\par
{\bkmkstart AAAAAAACHP}
{\bkmkend AAAAAAACHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The stop function is called when the user wants to stop the installation.\par
\par
:param self: Represent the instance of the class\par
:param mode: Determine what file is created\par
:return: The name of the file that is created\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHO" }{}}{\fldrslt {\cs37\ul\cf2 73}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00073     {\cf17 def }stop(self, mode='s'):\par
00074         {\cf22 """}\par
00075 {\cf22         The stop function }{\cf19 is} called when the user wants to stop the installation.\par
00076 \par
00077         :param self: Represent the instance of the {\cf17 class}\par
00078         :param mode: Determine what file {\cf19 is} created\par
00079         :{\cf19 return}: The name of the file that {\cf19 is} created\par
00080         {\cf22 """}\par
00081 {\cf22         }{\cf19 if} mode == {\cf22 's'}:\par
00082             open(f{\cf22 "INSTALL_DONE\{self.id\}"}, {\cf22 'x'})\par
00083         {\cf19 if} mode == {\cf22 'e'}:\par
00084             open(f{\cf22 "INSTALL_ERROR\{self.id\}"}, {\cf22 'x'})\par
00085         {\cf19 if} mode == {\cf22 'ali'}:\par
00086             open(f{\cf22 "INSTALL_ALINST\{self.id\}"}, {\cf22 'x'})\par
00087 \par
}
}
{\xe \v unpause\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:unpause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.writing.installing_carousel.unpause (  {\i self})}}
\par
{\bkmkstart AAAAAAACHL}
{\bkmkend AAAAAAACHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHK" }{}}{\fldrslt {\cs37\ul\cf2 70}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00070     {\cf17 def }unpause(self):\par
00071         open(f{\cf22 "INSTALL_UNPAUSE\{self.id\}"}, {\cf22 'x'})\par
00072 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _move\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:_move}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.writing.installing_carousel._move{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACGA}
{\bkmkend AAAAAAACGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFZ" }{}}{\fldrslt {\cs37\ul\cf2 42}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
}
{\xe \v bar\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:bar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.writing.installing_carousel.bar}}
\par
{\bkmkstart AAAAAAACFW}
{\bkmkend AAAAAAACFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFV" }{}}{\fldrslt {\cs37\ul\cf2 40}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
}
{\xe \v comment\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:comment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.writing.installing_carousel.comment}}
\par
{\bkmkstart AAAAAAACFU}
{\bkmkend AAAAAAACFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFT" }{}}{\fldrslt {\cs37\ul\cf2 39}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
}
{\xe \v curses_obj\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:curses_obj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.writing.installing_carousel.curses_obj}}
\par
{\bkmkstart AAAAAAACGK}
{\bkmkend AAAAAAACGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGJ" }{}}{\fldrslt {\cs37\ul\cf2 47}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
}
{\xe \v curses_x\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:curses_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.writing.installing_carousel.curses_x}}
\par
{\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGH" }{}}{\fldrslt {\cs37\ul\cf2 46}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
}
{\xe \v curses_y\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:curses_y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.writing.installing_carousel.curses_y}}
\par
{\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGF" }{}}{\fldrslt {\cs37\ul\cf2 45}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
}
{\xe \v id\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.writing.installing_carousel.id}}
\par
{\bkmkstart AAAAAAACGC}
{\bkmkend AAAAAAACGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGB" }{}}{\fldrslt {\cs37\ul\cf2 43}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
}
{\xe \v move_by_command\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:move_by_command}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.writing.installing_carousel.move_by_command}}
\par
{\bkmkstart AAAAAAACFY}
{\bkmkend AAAAAAACFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFX" }{}}{\fldrslt {\cs37\ul\cf2 41}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
}
{\xe \v package\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:package}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.writing.installing_carousel.package}}
\par
{\bkmkstart AAAAAAACFS}
{\bkmkend AAAAAAACFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFR" }{}}{\fldrslt {\cs37\ul\cf2 38}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
}
{\xe \v use_curses\:final.writing.installing_carousel}
{\xe \v final.writing.installing_carousel\:use_curses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.writing.installing_carousel.use_curses}}
\par
{\bkmkstart AAAAAAACGE}
{\bkmkend AAAAAAACGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGD" }{}}{\fldrslt {\cs37\ul\cf2 44}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDY" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDZ" }{}}{\fldrslt {\cs37\ul\cf2 writing.py}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.mathematical.list Class Reference\par \pard\plain 
{\tc\tcl2 \v final.mathematical.list}
{\xe \v final.mathematical.list}
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUJ" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUH" }{}}{\fldrslt {\cs37\ul\cf2 list}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
, bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 show}}}
=False, bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUW" }{}}{\fldrslt {\cs37\ul\cf2 ignore_errors}}}
=False, bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUY" }{}}{\fldrslt {\cs37\ul\cf2 obj_ret}}}
=False, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUH" }{}}{\fldrslt {\cs37\ul\cf2 list}}}
 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUQ" }{}}{\fldrslt {\cs37\ul\cf2 error}}}
=[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVB" }{}}{\fldrslt {\cs37\ul\cf2 get_ratio}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWG" }{}}{\fldrslt {\cs37\ul\cf2 divide}}}
 (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUQ" }{}}{\fldrslt {\cs37\ul\cf2 error}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 show}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUW" }{}}{\fldrslt {\cs37\ul\cf2 ignore_errors}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUY" }{}}{\fldrslt {\cs37\ul\cf2 obj_ret}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUG" }{}}{\fldrslt {\cs37\ul\cf2 7}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATX" }{}}{\fldrslt {\cs37\ul\cf2 mathematical.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:final.mathematical.list}
{\xe \v final.mathematical.list\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.mathematical.list.__init__ (  {\i self}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUH" }{}}{\fldrslt {\cs37\ul\cf2 list}}}
  {\i item}, bool   {\i show} = {\f2 False}, bool   {\i ignore_errors} = {\f2 False}, bool   {\i obj_ret} = {\f2 False}, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUH" }{}}{\fldrslt {\cs37\ul\cf2 list}}}
   {\i error} = {\f2 []})}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUI" }{}}{\fldrslt {\cs37\ul\cf2 8}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATX" }{}}{\fldrslt {\cs37\ul\cf2 mathematical.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00008     {\cf17 def }__init__(self, item: list, show: bool = {\cf17 False}, ignore_errors: bool = {\cf17 False}, obj_ret: bool = {\cf17 False}, error: list = []):\par
00009         {\cf19 if} isinstance(item, list):\par
00010             {\cf19 if} ignore_errors:\par
00011                 {\cf19 pass}\par
00012             {\cf19 else}:\par
00013                 {\cf19 raise} ValueError({\cf22 "item must be a list"})\par
00014         self.error = error\par
00015         self.item = item\par
00016         self.show = show\par
00017         self.ignore_errors = ignore_errors\par
00018         self.obj_ret = obj_ret\par
00019 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v divide\:final.mathematical.list}
{\xe \v final.mathematical.list\:divide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.mathematical.list.divide (  {\i self})}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The divide function divides the first item in a list by all other items in that list.\par
    If there are no items, it returns 0.\par
\par
    Parameters:\par
        self (object): The object being passed to the function.\par
\par
    Returns: \par
        result (int or float): The result of dividing all numbers together.\par
\par
:param self: Refer to the object itself\par
:return: The result of the division\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWF" }{}}{\fldrslt {\cs37\ul\cf2 50}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATX" }{}}{\fldrslt {\cs37\ul\cf2 mathematical.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00050     {\cf17 def }divide(self):\par
00051         {\cf22 """}\par
00052 {\cf22         The divide function divides the first item }{\cf19 in} a list by all other items {\cf19 in} that list.\par
00053             If there are no items, it returns 0.\par
00054 \par
00055             Parameters:\par
00056                 self (object): The object being passed to the function.\par
00057 \par
00058             Returns: \par
00059                 result (int {\cf19 or} float): The result of dividing all numbers together.\par
00060 \par
00061         :param self: Refer to the object itself\par
00062         :{\cf19 return}: The result of the division\par
00063         {\cf22 """}\par
00064 {\cf22         }{\cf19 if} isinstance(self.item, list):\par
00065             {\cf19 if} {\cf19 not} isinstance(self.item, tuple):\par
00066                 {\cf19 pass}\par
00067             {\cf19 elif} self.ignore_errors:\par
00068                 {\cf19 return} {\cf22 "item must be a list"}\par
00069             {\cf19 else}:\par
00070                 {\cf19 raise} ValueError({\cf22 "item must be a list"})\par
00071         {\cf19 if} len(self.item) == 0:\par
00072             self.item = 0\par
00073             {\cf19 if} self.ignore_errors:\par
00074                 self.error.append({\cf22 'No object found; ignoring'})\par
00075             {\cf19 else}:\par
00076                 {\cf19 raise} ValueError({\cf22 "No object found"})\par
00077             {\cf19 if} self.show:\par
00078                 print(0)\par
00079             {\cf19 if} self.obj_ret:\par
00080                 {\cf19 return} self\par
00081             {\cf19 return} 0\par
00082         result = self.item[0]\par
00083         {\cf19 for} i {\cf19 in} range(1, len(self.item)):\par
00084             result = result/self.item[i]\par
00085         self.item = result\par
00086         {\cf19 if} self.show:\par
00087             print(result)\par
00088         {\cf19 if} self.obj_ret:\par
00089             {\cf19 return} self\par
00090         {\cf19 return} result\par
00091 \par
00092 \par
}
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d02/classfinal_1_1mathematical_1_1list_a1e705eeeb87b3b9bf62c33e54fe2f2b5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v get_ratio\:final.mathematical.list}
{\xe \v final.mathematical.list\:get_ratio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.mathematical.list.get_ratio (  {\i self})}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The get_ratio function takes a list of two numbers, multiplies the first number by an increasing integer starting at 1,\par
and compares the difference between that product and the original number to 0.0000001. If this condition is met,\par
the function returns a list with two integers: [original_number * multiplier for multiplier in range(0, 99999), 1].\par
If not met before 99999 iterations (99999^2 = 99999999), then it returns [0, 0].\par
\par
:param self: Refer to the object instance\par
:return: A list of two integers: [original_number * multiplier for multiplier in range(0, 99999), 1]\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVA" }{}}{\fldrslt {\cs37\ul\cf2 20}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATX" }{}}{\fldrslt {\cs37\ul\cf2 mathematical.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00020     {\cf17 def }get_ratio(self):\par
00021         {\cf22 """}\par
00022 {\cf22         The get_ratio function takes a list of two numbers, multiplies the first number by an increasing integer starting at 1,}\par
00023 {\cf22         }{\cf19 and} compares the difference between that product {\cf19 and} the original number to 0.0000001. If this condition {\cf19 is} met,\par
00024         the function returns a list {\cf17 with} two integers: [original_number * multiplier {\cf19 for} multiplier {\cf19 in} range(0, 99999), 1].\par
00025         If {\cf19 not} met before 99999 iterations (99999^2 = 99999999), then it returns [0, 0].\par
00026 \par
00027         :param self: Refer to the object instance\par
00028         :{\cf19 return}: A list of two integers: [original_number * multiplier {\cf19 for} multiplier {\cf19 in} range(0, 99999), 1]\par
00029         {\cf22 """}\par
00030 {\cf22         }{\cf19 if} isinstance(self.item, list):\par
00031             {\cf19 if} self.ignore_errors:\par
00032                 {\cf19 return} {\cf22 "item must be a list"}\par
00033             {\cf19 else}:\par
00034                 {\cf19 raise} ValueError({\cf22 "item must be a list"})\par
00035         {\cf19 for} i {\cf19 in} range(1, 99999):\par
00036             {\cf19 if} float(ceil(float(self.item[0]*i)) - float(self.item[0]*i)) < 0.0000001:\par
00037                 ratio = [int(self.item[0]*i), int(self.item[1]*i)]\par
00038                 {\cf19 break}\par
00039         {\cf19 else}:\par
00040             {\cf19 if} self.show:\par
00041                 print([0, 0])\par
00042             {\cf19 return} [0, 0]\par
00043         {\cf19 if} self.show:\par
00044             print(ratio)\par
00045         self.item = ratio\par
00046         {\cf19 if} self.obj_ret:\par
00047             {\cf19 return} self\par
00048         {\cf19 return} ratio\par
00049 \par
}
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d02/classfinal_1_1mathematical_1_1list_afbe9aa913b67ba2230f8be3aa9586d5a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v error\:final.mathematical.list}
{\xe \v final.mathematical.list\:error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.mathematical.list.error}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUP" }{}}{\fldrslt {\cs37\ul\cf2 14}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATX" }{}}{\fldrslt {\cs37\ul\cf2 mathematical.py}}}
.}\par
}
{\xe \v ignore_errors\:final.mathematical.list}
{\xe \v final.mathematical.list\:ignore_errors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.mathematical.list.ignore_errors}}
\par
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUV" }{}}{\fldrslt {\cs37\ul\cf2 17}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATX" }{}}{\fldrslt {\cs37\ul\cf2 mathematical.py}}}
.}\par
}
{\xe \v item\:final.mathematical.list}
{\xe \v final.mathematical.list\:item}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.mathematical.list.item}}
\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUR" }{}}{\fldrslt {\cs37\ul\cf2 15}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATX" }{}}{\fldrslt {\cs37\ul\cf2 mathematical.py}}}
.}\par
}
{\xe \v obj_ret\:final.mathematical.list}
{\xe \v final.mathematical.list\:obj_ret}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.mathematical.list.obj_ret}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUX" }{}}{\fldrslt {\cs37\ul\cf2 18}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATX" }{}}{\fldrslt {\cs37\ul\cf2 mathematical.py}}}
.}\par
}
{\xe \v show\:final.mathematical.list}
{\xe \v final.mathematical.list\:show}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.mathematical.list.show}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUT" }{}}{\fldrslt {\cs37\ul\cf2 16}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATX" }{}}{\fldrslt {\cs37\ul\cf2 mathematical.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATY" }{}}{\fldrslt {\cs37\ul\cf2 mathematical.py}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.music.music Class Reference\par \pard\plain 
{\tc\tcl2 \v final.music.music}
{\xe \v final.music.music}
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
None {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYQ" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
None {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZN" }{}}{\fldrslt {\cs37\ul\cf2 play}}}
 (self, int loops=-1, int fade=0, float start=0.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
None {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 lplay}}}
 (self, str path, int loops=-1, int fade=0, float start=0.0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
None {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZE" }{}}{\fldrslt {\cs37\ul\cf2 load}}}
 (str path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
None {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAW" }{}}{\fldrslt {\cs37\ul\cf2 pause}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
None {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 unpause}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
None {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBQ" }{}}{\fldrslt {\cs37\ul\cf2 stop}}}
 ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYN" }{}}{\fldrslt {\cs37\ul\cf2 8}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:final.music.music}
{\xe \v final.music.music\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 None final.music.music.__init__ (  {\i self})}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The __init__ function is called when an instance of the class is created.\par
The __init__ function receives a reference to the instance as its first argument,\par
which we call self. The other arguments are provided by the caller.\par
:param self: Refer to the object itself\par
:param path: str: Specify the path of the music file\par
:param fade: int: Set the fade time in milliseconds\par
:return: The object of the class\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYP" }{}}{\fldrslt {\cs37\ul\cf2 9}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00009     {\cf17 def }__init__(self) -> None:\par
00010         {\cf22 """}\par
00011 {\cf22         The __init__ function }{\cf19 is} called when an instance of the {\cf17 class }is created.\par
00012         The __init__ function receives a reference to the instance {\cf17 as} its first argument,\par
00013         which we call self. The other arguments are provided by the caller.\par
00014         :param self: Refer to the object itself\par
00015         :param path: str: Specify the path of the music file\par
00016         :param fade: int: Set the fade time {\cf19 in} milliseconds\par
00017         :{\cf19 return}: The object of the {\cf17 class}\par
00018         {\cf22 """}\par
00019 {\cf22         mixer.init()}\par
00020 {\cf22 }\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v load\:final.music.music}
{\xe \v final.music.music\:load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 None final.music.music.load (str  {\i path}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The load function loads a song into the mixer.\par
:param path: str: Specify the path to the music file\par
:return: None\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZD" }{}}{\fldrslt {\cs37\ul\cf2 22}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00022     {\cf17 def }load(path: str) -> {\cf18 None}:\par
00023         {\cf22 """}\par
00024 {\cf22         The load function loads a song into the mixer.}\par
00025 {\cf22         :param path: str: Specify the path to the music file}\par
00026 {\cf22         :}{\cf19 return}: {\cf18 None}\par
00027         {\cf22 """}\par
00028 {\cf22         }{\cf19 return} mixer.music.load(path)\par
00029 \par
}
}
{\xe \v lplay\:final.music.music}
{\xe \v final.music.music\:lplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 None final.music.music.lplay (  {\i self}, str  {\i path}, int   {\i loops} = {\f2 -1}, int   {\i fade} = {\f2 0}, float   {\i start} = {\f2 0.0})}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The lplay function plays a song from the given path.\par
The lplay function has three parameters:\par
    path - The string containing the filepath of the song to be played.\par
    loops - An integer indicating how many times you would like to hear the song,\par
    default is infinite (- 1).\par
        If set to 0, then it will play once and stop.\par
        If set to 1 or more, then it will loop that many times so that you can keep playing\par
        songs in succession without having\par
to call this function again.\par
        Note: if loops is greater than one and fade is non\par
:param self: Reference the object itself\par
:param path: str: Specify the path of the file to be played\par
:param loops: int: Set the number of times the song is repeated\par
:param fade: int: Fade in and out the music\par
:param start: float: Start the music at a certain time\par
:return: None\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZX" }{}}{\fldrslt {\cs37\ul\cf2 40}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00040     {\cf17 def }lplay(self, path: str, loops: int = -1, fade: int = 0, start: float = 0.0) -> {\cf18 None}:\par
00041         {\cf22 """}\par
00042 {\cf22         The lplay function plays a song }{\cf17 from} the given path.\par
00043         The lplay function has three parameters:\par
00044             path - The string containing the filepath of the song to be played.\par
00045             loops - An integer indicating how many times you would like to hear the song,\par
00046             default {\cf19 is} infinite (- 1).\par
00047                 If set to 0, then it will play once {\cf19 and} stop.\par
00048                 If set to 1 {\cf19 or} more, then it will loop that many times so that you can keep playing\par
00049                 songs {\cf19 in} succession without having\par
00050         to call this function again.\par
00051                 Note: {\cf19 if} loops {\cf19 is} greater than one {\cf19 and} fade {\cf19 is} non\par
00052         :param self: Reference the object itself\par
00053         :param path: str: Specify the path of the file to be played\par
00054         :param loops: int: Set the number of times the song {\cf19 is} repeated\par
00055         :param fade: int: Fade {\cf19 in} {\cf19 and} out the music\par
00056         :param start: float: Start the music at a certain time\par
00057         :{\cf19 return}: {\cf18 None}\par
00058         {\cf22 """}\par
00059 {\cf22         mixer.music.load(path)}\par
00060 {\cf22         }{\cf19 return} mixer.music.play(loops=loops, fade_ms=fade, start=start)\par
00061 \par
}
}
{\xe \v pause\:final.music.music}
{\xe \v final.music.music\:pause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 None final.music.music.pause (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The pause function is used to pause the music.\par
\par
:return: None\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAV" }{}}{\fldrslt {\cs37\ul\cf2 63}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00063     {\cf17 def }pause() -> None:\par
00064         {\cf22 """}\par
00065 {\cf22         The pause function }{\cf19 is} used to pause the music.\par
00066 \par
00067         :{\cf19 return}: {\cf18 None}\par
00068         {\cf22 """}\par
00069 {\cf22         }{\cf19 return} mixer.music.pause()\par
00070 \par
}
}
{\xe \v play\:final.music.music}
{\xe \v final.music.music\:play}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 None final.music.music.play (  {\i self}, int   {\i loops} = {\f2 -1}, int   {\i fade} = {\f2 0}, float   {\i start} = {\f2 0.0})}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The play function plays the sound.\par
\par
:param self: Access the attributes of the class\par
:param loops: int: Specify how many times the sound should be played\par
:return: None\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZM" }{}}{\fldrslt {\cs37\ul\cf2 30}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00030     {\cf17 def }play(self, loops: int = -1, fade: int = 0, start: float = 0.0) -> {\cf18 None}:\par
00031         {\cf22 """}\par
00032 {\cf22         The play function plays the sound.}\par
00033 {\cf22 }\par
00034 {\cf22         :param self: Access the attributes of the }{\cf17 class}\par
00035         :param loops: int: Specify how many times the sound should be played\par
00036         :{\cf19 return}: {\cf18 None}\par
00037         {\cf22 """}\par
00038 {\cf22         }{\cf19 return} mixer.music.play(loops=loops, fade_ms=fade, start=start)\par
00039 \par
}
}
{\xe \v stop\:final.music.music}
{\xe \v final.music.music\:stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 None final.music.music.stop (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The stop function stops the music from playing.\par
\par
:return: None\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBP" }{}}{\fldrslt {\cs37\ul\cf2 81}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00081     {\cf17 def }stop() -> None:\par
00082         {\cf22 """}\par
00083 {\cf22         The stop function stops the music }{\cf17 from} playing.\par
00084 \par
00085         :{\cf19 return}: {\cf18 None}\par
00086         {\cf22 """}\par
00087 {\cf22         }{\cf19 return} mixer.music.stop()\par
00088 \par
00089 \par
}
}
{\xe \v unpause\:final.music.music}
{\xe \v final.music.music\:unpause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 None final.music.music.unpause (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The pause function is used to unpause the music.\par
\par
:return: None\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBF" }{}}{\fldrslt {\cs37\ul\cf2 72}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYD" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00072     {\cf17 def }unpause() -> None:\par
00073         {\cf22 """}\par
00074 {\cf22         The pause function }{\cf19 is} used to unpause the music.\par
00075 \par
00076         :{\cf19 return}: {\cf18 None}\par
00077         {\cf22 """}\par
00078 {\cf22         }{\cf19 return} mixer.music.unpause()\par
00079 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYE" }{}}{\fldrslt {\cs37\ul\cf2 music.py}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.anime_rename.rename Class Reference\par \pard\plain 
{\tc\tcl2 \v final.anime_rename.rename}
{\xe \v final.anime_rename.rename}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 input}}}
)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADU" }{}}{\fldrslt {\cs37\ul\cf2 rename}}}
 (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 input}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 output}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABJ" }{}}{\fldrslt {\cs37\ul\cf2 10}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 anime_rename.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:final.anime_rename.rename}
{\xe \v final.anime_rename.rename\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.anime_rename.rename.__init__ (  {\i self},   {\i input})}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The __init__ function is called when an instance of the class is created.\par
It initializes the attributes of the class , and sets up any variables that are needed to be used by other functions in this class.\par
: param self: Reference the object itself\par
: param input: Pass the path to the folder containing files that need to be renamed\par
: return: The input and output folders\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABL" }{}}{\fldrslt {\cs37\ul\cf2 11}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 anime_rename.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00011     {\cf17 def }__init__(self, input):\par
00012         {\cf22 """}\par
00013 {\cf22         The __init__ function }{\cf19 is} called when an instance of the {\cf17 class }is created.\par
00014         It initializes the attributes of the {\cf17 class }, {\cf19 and} sets up any variables that are needed to be used by other functions {\cf19 in} this {\cf17 class}.\par
00015         : param self: Reference the object itself\par
00016         : param input: Pass the path to the folder containing files that need to be renamed\par
00017         : {\cf19 return}: The input {\cf19 and} output folders\par
00018         {\cf22 """}\par
00019 {\cf22         self.input = input}\par
00020 {\cf22         output_folder = []}\par
00021 {\cf22         output_folder_names = []}\par
00022 {\cf22         output_names = []}\par
00023 {\cf22         }{\cf19 for} item {\cf19 in} (input_folder := glob.glob(self.input + {\cf22 '/*.*'})):\par
00024             anime_name = anitopy.parse(item.split({\cf22 '\\\\'})[-1])[{\cf22 'anime_title'}]\par
00025             output_folder.append(item)\par
00026             output_folder_names.append(os.path.split(item)[-1])\par
00027         print(output_folder)\par
00028         print(output_folder_names)\par
00029         folder_name = os.path.split(os.path.split(output_folder[0])[0])[-1]\par
00030         folder_name_parent = os.path.split(input_folder[0])[0]\par
00031         print(folder_name)\par
00032         print(folder_name_parent)\par
00033         print(anime_name)\par
00034         extensions = []\par
00035         {\cf19 for} item {\cf19 in} input_folder:\par
00036             extensions.append(anitopy.parse(item)[{\cf22 'file_extension'}])\par
00037         resolution = []\par
00038         {\cf19 for} item {\cf19 in} input_folder:\par
00039             {\cf19 try}:\par
00040                 resolution.append(anitopy.parse(item)[{\cf22 'video_resolution'}])\par
00041             {\cf19 except} KeyError:\par
00042                 resolution.append({\cf22 ''})\par
00043         season = []\par
00044         {\cf19 for} item {\cf19 in} input_folder:\par
00045             {\cf19 try}:\par
00046                 season.append(anitopy.parse(item)[{\cf22 'anime_season'}])\par
00047             {\cf19 except} KeyError:\par
00048                 season.append({\cf22 '1'})\par
00049         anime_title = []\par
00050         {\cf19 for} item {\cf19 in} input_folder:\par
00051             {\cf19 try}:\par
00052                 anime_title.append({\cf22 ' - '} + anitopy.parse(item)[{\cf22 'episode_title'}])\par
00053             {\cf19 except} KeyError:\par
00054                 anime_title.append({\cf22 ''})\par
00055         {\cf19 for} times, item {\cf19 in} enumerate(output_folder_names):\par
00056             print(episode_name := anitopy.parse(item)[{\cf22 'episode_number'}])\par
00057             output_names.append([anime_name, episode_name, f{\cf22 " (Season \{season[times]\})"}])\par
00058         output_final = []\par
00059         {\cf19 for} times, item {\cf19 in} enumerate(output_names):\par
00060             output_final.append(folder_name_parent + {\cf22 '/'} + anime_name + str(item[2]) +\par
00061                                 {\cf22 ' - '} + str(item[1]) + anime_title[times] +  {\cf22 '.'} + extensions[times])\par
00062         print(output_final)\par
00063         {\cf19 for} number {\cf19 in} range(0, len(output_final)):\par
00064             print(input_folder[number] + {\cf22 ' => '} + output_final[number])\par
00065         self.input = input_folder\par
00066         self.output = output_final\par
00067 \par
}
}
{\xe \v rename\:final.anime_rename.rename}
{\xe \v final.anime_rename.rename\:rename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.anime_rename.rename.rename (  {\i self})}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The rename function takes a list of files and renames them.\par
The function accepts two lists as arguments: the input list and output list.\par
The input file names are used to rename the output files.\par
: param self: Access the attributes and methods of the class in python\par
: return: None\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADT" }{}}{\fldrslt {\cs37\ul\cf2 68}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 anime_rename.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00068     {\cf17 def }rename(self):\par
00069         {\cf22 """}\par
00070 {\cf22         The rename function takes a list of files }{\cf19 and} renames them.\par
00071         The function accepts two lists {\cf17 as} arguments: the input list {\cf19 and} output list.\par
00072         The input file names are used to rename the output files.\par
00073         : param self: Access the attributes {\cf19 and} methods of the {\cf17 class }in python\par
00074         : {\cf19 return}: {\cf18 None}\par
00075         {\cf22 """}\par
00076 {\cf22         }{\cf19 for} number {\cf19 in} range(0, len(self.output)):\par
00077             os.rename(self.input[number], self.output[number])\par
00078 \par
00079 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v input\:final.anime_rename.rename}
{\xe \v final.anime_rename.rename\:input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.anime_rename.rename.input}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 19}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 anime_rename.py}}}
.}\par
}
{\xe \v output\:final.anime_rename.rename}
{\xe \v final.anime_rename.rename\:output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.anime_rename.rename.output}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADQ" }{}}{\fldrslt {\cs37\ul\cf2 66}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAX" }{}}{\fldrslt {\cs37\ul\cf2 anime_rename.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 anime_rename.py}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.completer.SimpleCompleter Class Reference\par \pard\plain 
{\tc\tcl2 \v final.completer.SimpleCompleter}
{\xe \v final.completer.SimpleCompleter}
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
Inheritance diagram for final.completer.SimpleCompleter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/de4/classfinal_1_1completer_1_1_simple_completer__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for final.completer.SimpleCompleter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc4/classfinal_1_1completer_1_1_simple_completer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHY" }{}}{\fldrslt {\cs37\ul\cf2 options}}}
)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 complete}}}
 (self, text, state)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHY" }{}}{\fldrslt {\cs37\ul\cf2 options}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 matches}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHS" }{}}{\fldrslt {\cs37\ul\cf2 4}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHM" }{}}{\fldrslt {\cs37\ul\cf2 completer.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:final.completer.SimpleCompleter}
{\xe \v final.completer.SimpleCompleter\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.completer.SimpleCompleter.__init__ (  {\i self},   {\i options})}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHV" }{}}{\fldrslt {\cs37\ul\cf2 6}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHM" }{}}{\fldrslt {\cs37\ul\cf2 completer.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00006     {\cf17 def }__init__(self, options):\par
00007         self.options = sorted(options)\par
00008         {\cf19 return}\par
00009 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v complete\:final.completer.SimpleCompleter}
{\xe \v final.completer.SimpleCompleter\:complete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.completer.SimpleCompleter.complete (  {\i self},   {\i text},   {\i state})}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The complete function is called as complete(text, state), for state in 0, 1, 2, ...\par
until it returns a non-string value. It should return the next possible completion starting with 'text'.\par
\par
:param self: Represent the instance of the class\par
:param text: Filter the list of options\par
:param state: Keep track of the index in the matches list\par
:return: The state'th item from the match list, if we have that many\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIB" }{}}{\fldrslt {\cs37\ul\cf2 10}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHM" }{}}{\fldrslt {\cs37\ul\cf2 completer.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00010     {\cf17 def }complete(self, text, state):\par
00011         {\cf22 """}\par
00012 {\cf22         The complete function }{\cf19 is} called {\cf17 as} complete(text, state), {\cf19 for} state {\cf19 in} 0, 1, 2, ...\par
00013         until it returns a non-string value. It should {\cf19 return} the next possible completion starting {\cf17 with} {\cf22 'text'}.\par
00014 \par
00015         :param self: Represent the instance of the {\cf17 class}\par
00016         :param text: Filter the list of options\par
00017         :param state: Keep track of the index {\cf19 in} the matches list\par
00018         :{\cf19 return}: The state{\cf22 'th item from the match list, if we have that many}\par
00019 {\cf22         """}\par
00020 {\cf22         response = }{\cf18 None}\par
00021         {\cf19 if} state == 0:\par
00022             {\cf19 if} text:\par
00023                 self.matches = [s\par
00024                                 {\cf19 for} s {\cf19 in} self.options\par
00025                                 {\cf19 if} s {\cf19 and} s.startswith(text)]\par
00026                 logging.debug({\cf22 '%s matches: %s'}, repr(text), self.matches)\par
00027             {\cf19 else}:\par
00028                 self.matches = self.options[:]\par
00029                 logging.debug({\cf22 '(empty input) matches: %s'}, self.matches)\par
00030 \par
00031         {\cf20 # Return the state'th item from the match list,}\par
00032         {\cf20 # if we have that many.}\par
00033         {\cf19 try}:\par
00034             response = self.matches[state]\par
00035         {\cf19 except} IndexError:\par
00036             response = {\cf18 None}\par
00037         logging.debug({\cf22 'complete(%s, %s) => %s'},\par
00038                       repr(text), state, repr(response))\par
00039         {\cf19 return} response\par
00040 \par
00041 \par
00042 {\cf20 # ----------------------------------------------------------------}\par
00043 {\cf20 # }\par
00044 {\cf20 # Example usage}\par
00045 {\cf20 #}\par
00046 {\cf20 # import readline}\par
00047 {\cf20 # readline.set_completer(}\par
00048 {\cf20 #     SimpleCompleter(['example1', 'example2']).complete)}\par
00049 {\cf20 # readline.parse_and_bind('tab: complete')}\par
}
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d71/classfinal_1_1completer_1_1_simple_completer_a85a6652b3513306a542bbf1e4e0f42cf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d71/classfinal_1_1completer_1_1_simple_completer_a85a6652b3513306a542bbf1e4e0f42cf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v matches\:final.completer.SimpleCompleter}
{\xe \v final.completer.SimpleCompleter\:matches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.completer.SimpleCompleter.matches}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIP" }{}}{\fldrslt {\cs37\ul\cf2 23}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHM" }{}}{\fldrslt {\cs37\ul\cf2 completer.py}}}
.}\par
}
{\xe \v options\:final.completer.SimpleCompleter}
{\xe \v final.completer.SimpleCompleter\:options}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.completer.SimpleCompleter.options}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHX" }{}}{\fldrslt {\cs37\ul\cf2 7}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHM" }{}}{\fldrslt {\cs37\ul\cf2 completer.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHN" }{}}{\fldrslt {\cs37\ul\cf2 completer.py}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.sql.SQLServer Class Reference\par \pard\plain 
{\tc\tcl2 \v final.sql.SQLServer}
{\xe \v final.sql.SQLServer}
{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXW" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self, str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXY" }{}}{\fldrslt {\cs37\ul\cf2 host}}}
, int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYA" }{}}{\fldrslt {\cs37\ul\cf2 port}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYC" }{}}{\fldrslt {\cs37\ul\cf2 user}}}
=None, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYE" }{}}{\fldrslt {\cs37\ul\cf2 passwd}}}
=None, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYG" }{}}{\fldrslt {\cs37\ul\cf2 database}}}
=None, bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYI" }{}}{\fldrslt {\cs37\ul\cf2 log}}}
=False)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYL" }{}}{\fldrslt {\cs37\ul\cf2 connect}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZY" }{}}{\fldrslt {\cs37\ul\cf2 execute}}}
 (self, str command, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYI" }{}}{\fldrslt {\cs37\ul\cf2 log}}}
=None, info=True)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBW" }{}}{\fldrslt {\cs37\ul\cf2 to_str}}}
 (thing, int mode=0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXY" }{}}{\fldrslt {\cs37\ul\cf2 host}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYA" }{}}{\fldrslt {\cs37\ul\cf2 port}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYC" }{}}{\fldrslt {\cs37\ul\cf2 user}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYE" }{}}{\fldrslt {\cs37\ul\cf2 passwd}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYG" }{}}{\fldrslt {\cs37\ul\cf2 database}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYI" }{}}{\fldrslt {\cs37\ul\cf2 log}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZG" }{}}{\fldrslt {\cs37\ul\cf2 db}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZS" }{}}{\fldrslt {\cs37\ul\cf2 mycursor}}}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXT" }{}}{\fldrslt {\cs37\ul\cf2 11}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:final.sql.SQLServer}
{\xe \v final.sql.SQLServer\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.sql.SQLServer.__init__ (  {\i self}, str  {\i host}, int  {\i port},   {\i user} = {\f2 None},   {\i passwd} = {\f2 None},   {\i database} = {\f2 None}, bool   {\i log} = {\f2 False})}}
\par
{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXV" }{}}{\fldrslt {\cs37\ul\cf2 12}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00012     {\cf17 def }__init__(self, host: str, port: int, user={\cf18 None}, passwd={\cf18 None}, database={\cf18 None}, log: bool = {\cf17 False}):\par
00013         self.host = host\par
00014         self.port = port\par
00015         self.user = user\par
00016         self.passwd = passwd\par
00017         self.database = database\par
00018         self.log = log\par
00019 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v connect\:final.sql.SQLServer}
{\xe \v final.sql.SQLServer\:connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.sql.SQLServer.connect (  {\i self})}}
\par
{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The connect function connects to the database and returns a connection object.\par
\par
:param self: Reference the class object\par
:return: The connection object\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYK" }{}}{\fldrslt {\cs37\ul\cf2 20}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00020     {\cf17 def }connect(self):\par
00021         {\cf22 """}\par
00022 {\cf22         The connect function connects to the database }{\cf19 and} returns a connection object.\par
00023 \par
00024         :param self: Reference the {\cf17 class }object\par
00025         :{\cf19 return}: The connection object\par
00026         {\cf22 """}\par
00027 {\cf22 }\par
00028 {\cf22         }{\cf19 if} self.log:\par
00029             print({\cf22 'CONNECTING ...'}, end={\cf22 '\\r'})\par
00030         {\cf19 if} self.user != {\cf18 None}:\par
00031             {\cf19 if} {\cf19 not} isinstance(self.user, str):\par
00032                 {\cf19 raise} ValueError({\cf22 "user must be a string"})\par
00033         {\cf19 if} self.passwd {\cf19 is} {\cf19 not} {\cf18 None}:\par
00034             {\cf19 if} {\cf19 not} isinstance(self.passwd, str):\par
00035                 {\cf19 raise} ValueError({\cf22 "passwd must be a string"})\par
00036         {\cf19 if} self.database {\cf19 is} {\cf19 not} {\cf18 None}:\par
00037             {\cf19 if} {\cf19 not} isinstance(self.database, str):\par
00038                 {\cf19 raise} ValueError({\cf22 "database must be a string"})\par
00039 \par
00040         self.db = mysql.connector.connect(\par
00041             host=self.host,\par
00042             port=self.port,\par
00043             user=self.user,\par
00044             passwd=self.passwd,\par
00045             database=self.database\par
00046         )\par
00047 \par
00048         {\cf19 if} self.log:\par
00049             print({\cf22 'Connecting DONE'})\par
00050             print({\cf22 'APPOINTING CURSOR ...'}, end={\cf22 '\\r'})\par
00051         self.mycursor = self.db.cursor()\par
00052         {\cf19 if} self.log:\par
00053             print({\cf22 'APPOINTING CURSOR DONE'})\par
00054         {\cf19 return} self.db\par
00055 \par
}
}
{\xe \v execute\:final.sql.SQLServer}
{\xe \v final.sql.SQLServer\:execute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.sql.SQLServer.execute (  {\i self}, str  {\i command},   {\i log} = {\f2 None},   {\i info} = {\f2 True})}}
\par
{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The execute function executes a command and prints out the result.\par
It also returns the result as a pandas dataframe.\par
\par
:param self: Refer to the object instance\par
:param command: str: Pass the sql command to be executed\par
:param log: Enable logging\par
:param info: Print out the time it took to execute the command\par
:return: A pandas dataframe\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZX" }{}}{\fldrslt {\cs37\ul\cf2 56}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00056     {\cf17 def }execute(self, command: str, log={\cf18 None}, info={\cf17 True}):\par
00057         {\cf22 """}\par
00058 {\cf22         The execute function executes a command }{\cf19 and} prints out the result.\par
00059         It also returns the result {\cf17 as} a pandas dataframe.\par
00060 \par
00061         :param self: Refer to the object instance\par
00062         :param command: str: Pass the sql command to be executed\par
00063         :param log: Enable logging\par
00064         :param info: Print out the time it took to execute the command\par
00065         :{\cf19 return}: A pandas dataframe\par
00066         {\cf22 """}\par
00067 {\cf22         }{\cf19 while} os.path.exists({\cf22 'RUNNING'}):\par
00068             time.sleep(uniform(0.5, 1.5))\par
00069         {\cf19 try}:\par
00070             {\cf20 # deepcode ignore MissingClose: <create file>}\par
00071             open({\cf22 'RUNNING'}, {\cf22 'x'})\par
00072         {\cf19 except} FileExistsError:\par
00073             SQLServer.execute(self, command=command, log=log, info=info)\par
00074             {\cf19 return} {\cf18 None}\par
00075         {\cf19 if} log != {\cf18 None}:\par
00076             {\cf19 if} isinstance(log, bool):\par
00077                 self.log = log\par
00078         {\cf19 if} self.log {\cf19 or} info:\par
00079             print(f{\cf22 'Executing command \{command\}'})\par
00080         start = time.time()\par
00081         {\cf19 try}:\par
00082             self.mycursor.execute(command)\par
00083         {\cf19 except} mysql.connector.errors.ProgrammingError:\par
00084             os.remove({\cf22 'RUNNING'})\par
00085             {\cf19 return} {\cf18 None}\par
00086         end = time.time()\par
00087         commandtime = end - start\par
00088         start = time.time()\par
00089         data = self.mycursor.fetchall()\par
00090         {\cf19 if} self.log:\par
00091             {\cf19 if} data {\cf19 is} {\cf19 not} {\cf18 None}:\par
00092                 {\cf19 for} row {\cf19 in} tqdm(iterable=data, total=len(data)):\par
00093                     tqdm.write(str(row))\par
00094         end = time.time()\par
00095         endtime = end-start\par
00096         {\cf19 if} self.log {\cf19 or} info:\par
00097             print(f{\cf22 'DONE in \{commandtime\} seconds'})\par
00098             print(f{\cf22 'Printing DONE in \{endtime\} seconds'})\par
00099 \par
00100         self.db.commit()\par
00101         os.remove({\cf22 'RUNNING'})\par
00102         {\cf19 return} data\par
00103 \par
}
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d6b/classfinal_1_1sql_1_1_s_q_l_server_a1c2995695563a25caa98babc8dc3ab67_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d6b/classfinal_1_1sql_1_1_s_q_l_server_a1c2995695563a25caa98babc8dc3ab67_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v to_str\:final.sql.SQLServer}
{\xe \v final.sql.SQLServer\:to_str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
 str final.sql.SQLServer.to_str (  {\i thing}, int   {\i mode} = {\f2 0}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The to_str function takes a list of lists and converts it into a string.\par
The function is used to convert the data from the csv file into something that\par
can be written to an SQL database. The function also removes any apostrophes or \par
quotation marks in order to prevent SQL injection attacks.\par
\par
:param thing: Pass in a list of lists\par
:return: A string that is formatted for the insert statement\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBV" }{}}{\fldrslt {\cs37\ul\cf2 105}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00105     {\cf17 def }to_str(thing, mode: int = 0) -> str:\par
00106         {\cf22 """}\par
00107 {\cf22         The to_str function takes a list of lists }{\cf19 and} converts it into a string.\par
00108         The function {\cf19 is} used to convert the data {\cf17 from} the csv file into something that\par
00109         can be written to an SQL database. The function also removes any apostrophes {\cf19 or} \par
00110         quotation marks {\cf19 in} order to prevent SQL injection attacks.\par
00111 \par
00112         :param thing: Pass {\cf19 in} a list of lists\par
00113         :{\cf19 return}: A string that {\cf19 is} formatted {\cf19 for} the insert statement\par
00114         {\cf22 """}\par
00115 {\cf22         name: str = ''}\par
00116         {\cf19 if} thing == {\cf18 None}:\par
00117             {\cf19 return} {\cf22 'NULL'}\par
00118         {\cf19 if} len(thing) == 0:\par
00119             name: str = {\cf22 'None'}\par
00120             {\cf19 return} name\par
00121         {\cf19 if} mode == 0:\par
00122             {\cf19 for} i {\cf19 in} tqdm(range(len(thing)), leave={\cf17 False}):\par
00123                 temp: str = {\cf22 ''}\par
00124                 was_edited: bool = {\cf17 False}\par
00125                 {\cf19 for} j {\cf19 in} tqdm(range(len(thing[i])), leave={\cf17 False}):\par
00126                     was_edited: bool = {\cf17 False}\par
00127                     {\cf19 if} thing[i][j] == {\cf22 "'"}:\par
00128                         temp += {\cf22 "\\\\'"}\par
00129                         was_edited: bool = {\cf17 True}\par
00130                     {\cf19 elif} thing[i][j] == {\cf22 '\\"'}:\par
00131                         temp += {\cf22 '\\\\"'}\par
00132                         was_edited: bool = {\cf17 True}\par
00133                     {\cf19 else}:\par
00134                         was_edited: bool = {\cf17 False}\par
00135                         temp += str(thing[i][j])\par
00136                 {\cf19 if} {\cf19 not} was_edited:\par
00137                     name += str(thing[i]+{\cf22 ', '})\par
00138                 {\cf19 elif} was_edited:\par
00139                     name += str(temp+{\cf22 ', '})\par
00140             name: str = name[0:-2]\par
00141         {\cf19 if} mode == 1:\par
00142             temp: str = {\cf22 ''}\par
00143             was_edited: bool = {\cf17 False}\par
00144             {\cf19 for} i {\cf19 in} tqdm(range(len(thing)), leave={\cf17 False}):\par
00145                 {\cf19 if} thing[i] == {\cf22 "'"}:\par
00146                     temp += {\cf22 "\\\\'"}\par
00147                     was_edited: bool = {\cf17 True}\par
00148                 {\cf19 elif} thing[i] == {\cf22 '\\"'}:\par
00149                     temp += {\cf22 '\\\\"'}\par
00150                     was_edited: bool = {\cf17 True}\par
00151                 {\cf19 else}:\par
00152                     was_edited: bool = {\cf17 False}\par
00153                     temp += str(thing[i])\par
00154                 {\cf19 if} {\cf19 not} was_edited:\par
00155                     name += str(thing[i])\par
00156                 {\cf19 elif} was_edited:\par
00157                     name += str(temp)\par
00158         {\cf19 return} name\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v database\:final.sql.SQLServer}
{\xe \v final.sql.SQLServer\:database}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.sql.SQLServer.database}}
\par
{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYF" }{}}{\fldrslt {\cs37\ul\cf2 17}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
.}\par
}
{\xe \v db\:final.sql.SQLServer}
{\xe \v final.sql.SQLServer\:db}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.sql.SQLServer.db}}
\par
{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZF" }{}}{\fldrslt {\cs37\ul\cf2 40}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
.}\par
}
{\xe \v host\:final.sql.SQLServer}
{\xe \v final.sql.SQLServer\:host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.sql.SQLServer.host}}
\par
{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXX" }{}}{\fldrslt {\cs37\ul\cf2 13}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
.}\par
}
{\xe \v log\:final.sql.SQLServer}
{\xe \v final.sql.SQLServer\:log}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.sql.SQLServer.log}}
\par
{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYH" }{}}{\fldrslt {\cs37\ul\cf2 18}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
.}\par
}
{\xe \v mycursor\:final.sql.SQLServer}
{\xe \v final.sql.SQLServer\:mycursor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.sql.SQLServer.mycursor}}
\par
{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZR" }{}}{\fldrslt {\cs37\ul\cf2 51}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
.}\par
}
{\xe \v passwd\:final.sql.SQLServer}
{\xe \v final.sql.SQLServer\:passwd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.sql.SQLServer.passwd}}
\par
{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYD" }{}}{\fldrslt {\cs37\ul\cf2 16}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
.}\par
}
{\xe \v port\:final.sql.SQLServer}
{\xe \v final.sql.SQLServer\:port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.sql.SQLServer.port}}
\par
{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXZ" }{}}{\fldrslt {\cs37\ul\cf2 14}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
.}\par
}
{\xe \v user\:final.sql.SQLServer}
{\xe \v final.sql.SQLServer\:user}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.sql.SQLServer.user}}
\par
{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYB" }{}}{\fldrslt {\cs37\ul\cf2 15}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXG" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXH" }{}}{\fldrslt {\cs37\ul\cf2 sql.py}}}
\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final.pymp4.video Class Reference\par \pard\plain 
{\tc\tcl2 \v final.pymp4.video}
{\xe \v final.pymp4.video}
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGE" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self, str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGG" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGJ" }{}}{\fldrslt {\cs37\ul\cf2 g2v}}}
 (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGG" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGB" }{}}{\fldrslt {\cs37\ul\cf2 8}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFR" }{}}{\fldrslt {\cs37\ul\cf2 pymp4.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:final.pymp4.video}
{\xe \v final.pymp4.video\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.pymp4.video.__init__ (  {\i self}, str  {\i filename})}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGD" }{}}{\fldrslt {\cs37\ul\cf2 9}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFR" }{}}{\fldrslt {\cs37\ul\cf2 pymp4.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00009     {\cf17 def }__init__(self, filename: str,):\par
00010         self.filename = filename\par
00011 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v g2v\:final.pymp4.video}
{\xe \v final.pymp4.video\:g2v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def final.pymp4.video.g2v (  {\i self})}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid The g2v function takes a .gif file and converts it to an mp4 video.\par
    The function uses the moviepy library, which is built on top of FFmpeg.\par
    It requires that you have FFmpeg installed on your computer.\par
\par
:param self: Represent the instance of the class\par
:return: A video file\par
:doc-author: Trelent\par
}
 \par
}{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGI" }{}}{\fldrslt {\cs37\ul\cf2 12}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFR" }{}}{\fldrslt {\cs37\ul\cf2 pymp4.py}}}
.}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00012     {\cf17 def }g2v(self):\par
00013         {\cf22 """}\par
00014 {\cf22         The g2v function takes a .gif file }{\cf19 and} converts it to an mp4 video.\par
00015             The function uses the moviepy library, which {\cf19 is} built on top of FFmpeg.\par
00016             It requires that you have FFmpeg installed on your computer.\par
00017 \par
00018         :param self: Represent the instance of the {\cf17 class}\par
00019         :{\cf19 return}: A video file\par
00020         :doc-author: Trelent\par
00021         {\cf22 """}\par
00022 {\cf22 }\par
00023 {\cf22         clip = mp.VideoFileClip(self.filename)}\par
00024 {\cf22         clip.write_videofile(}\par
00025 {\cf22             '.'} + self.filename.split({\cf22 '.'})[0:-1][1] + {\cf22 '.mp4'})\par
00026         clip.reader.close()  {\cf20 # type: ignore}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v filename\:final.pymp4.video}
{\xe \v final.pymp4.video\:filename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
final.pymp4.video.filename}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGF" }{}}{\fldrslt {\cs37\ul\cf2 10}}}
 of file {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFR" }{}}{\fldrslt {\cs37\ul\cf2 pymp4.py}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
final/{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFS" }{}}{\fldrslt {\cs37\ul\cf2 pymp4.py}}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/__init__.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/__init__.py}
{\xe \v final/__init__.py}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 final.VERSION}}}
 = '1.0.7'\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 final.AUTHOR}}}
 = 'GrenManSK'\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
__init__.py\par \pard\plain 
{\tc\tcl2 \v final/__init__.py}
{\xe \v final/__init__.py}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAB" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAAC}{\bkmkend AAAAAAAAAC}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf20 # import final.anime_rename}\par
{\bkmkstart AAAAAAAAAE}{\bkmkend AAAAAAAAAE}
00002 {\cf20 # import final.code2string}\par
{\bkmkstart AAAAAAAAAF}{\bkmkend AAAAAAAAAF}
00003 {\cf20 # import final.completer}\par
{\bkmkstart AAAAAAAAAG}{\bkmkend AAAAAAAAAG}
00004 {\cf20 # import final.downloadmusic}\par
{\bkmkstart AAAAAAAAAH}{\bkmkend AAAAAAAAAH}
00005 {\cf20 # import final.git}\par
{\bkmkstart AAAAAAAAAI}{\bkmkend AAAAAAAAAI}
00006 {\cf20 # import final.mathematical}\par
{\bkmkstart AAAAAAAAAJ}{\bkmkend AAAAAAAAAJ}
00007 {\cf20 # import final.music}\par
{\bkmkstart AAAAAAAAAK}{\bkmkend AAAAAAAAAK}
00008 {\cf20 # import final.pack}\par
{\bkmkstart AAAAAAAAAL}{\bkmkend AAAAAAAAAL}
00009 {\cf20 # import final.profiler}\par
{\bkmkstart AAAAAAAAAM}{\bkmkend AAAAAAAAAM}
00010 {\cf20 # import final.pymp4}\par
{\bkmkstart AAAAAAAAAN}{\bkmkend AAAAAAAAAN}
00011 {\cf20 # import final.pywinmove}\par
{\bkmkstart AAAAAAAAAO}{\bkmkend AAAAAAAAAO}
00012 {\cf20 # import final.rapi}\par
{\bkmkstart AAAAAAAAAP}{\bkmkend AAAAAAAAAP}
00013 {\cf20 # import final.sql}\par
{\bkmkstart AAAAAAAAAQ}{\bkmkend AAAAAAAAAQ}
00014 {\cf20 # import final.unpack}\par
{\bkmkstart AAAAAAAAAR}{\bkmkend AAAAAAAAAR}
00015 {\cf20 # import final.writing}\par
{\bkmkstart AAAAAAAAAS}{\bkmkend AAAAAAAAAS}
00016 \par
{\bkmkstart AAAAAAAAAT}{\bkmkend AAAAAAAAAT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAU" }{}}{\fldrslt {\cs37\ul\cf2 00017}}}
 VERSION = {\cf22 '1.0.7'}\par
{\bkmkstart AAAAAAAAAV}{\bkmkend AAAAAAAAAV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAW" }{}}{\fldrslt {\cs37\ul\cf2 00018}}}
 AUTHOR = {\cf22 'GrenManSK'}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/anime_rename.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/anime_rename.py}
{\xe \v final/anime_rename.py}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 final.anime_rename.rename}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 final.anime_rename}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEH" }{}}{\fldrslt {\cs37\ul\cf2 final.anime_rename.main}}}
 ()\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
anime_rename.py\par \pard\plain 
{\tc\tcl2 \v final/anime_rename.py}
{\xe \v final/anime_rename.py}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAY" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAAZ}{\bkmkend AAAAAAAAAZ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABA" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf17 from} tkinter {\cf17 import} filedialog\par
{\bkmkstart AAAAAAAABB}{\bkmkend AAAAAAAABB}
00002 {\cf17 import} glob\par
{\bkmkstart AAAAAAAABC}{\bkmkend AAAAAAAABC}
00003 {\cf17 import} re\par
{\bkmkstart AAAAAAAABD}{\bkmkend AAAAAAAABD}
00004 {\cf17 import} os\par
{\bkmkstart AAAAAAAABE}{\bkmkend AAAAAAAABE}
00005 {\cf17 import} mal\par
{\bkmkstart AAAAAAAABF}{\bkmkend AAAAAAAABF}
00006 {\cf17 import} anitopy\par
{\bkmkstart AAAAAAAABG}{\bkmkend AAAAAAAABG}
00007 \par
{\bkmkstart AAAAAAAABH}{\bkmkend AAAAAAAABH}
00008 \par
{\bkmkstart AAAAAAAABI}{\bkmkend AAAAAAAABI}
00009 \par
{\bkmkstart AAAAAAAABJ}{\bkmkend AAAAAAAABJ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 00010}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 rename}}}
:\par
{\bkmkstart AAAAAAAABL}{\bkmkend AAAAAAAABL}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 00011}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABM" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
(self, input):\par
{\bkmkstart AAAAAAAABN}{\bkmkend AAAAAAAABN}
00012         {\cf22 """}\par
{\bkmkstart AAAAAAAABO}{\bkmkend AAAAAAAABO}
00013 {\cf22         The __init__ function }{\cf19 is} called when an instance of the {\cf17 class }is created.\par
{\bkmkstart AAAAAAAABP}{\bkmkend AAAAAAAABP}
00014         It initializes the attributes of the {\cf17 class }, {\cf19 and} sets up any variables that are needed to be used by other functions {\cf19 in} this {\cf17 class}.\par
{\bkmkstart AAAAAAAABQ}{\bkmkend AAAAAAAABQ}
00015         : param self: Reference the object itself\par
{\bkmkstart AAAAAAAABR}{\bkmkend AAAAAAAABR}
00016         : param input: Pass the path to the folder containing files that need to be renamed\par
{\bkmkstart AAAAAAAABS}{\bkmkend AAAAAAAABS}
00017         : {\cf19 return}: The input {\cf19 and} output folders\par
{\bkmkstart AAAAAAAABT}{\bkmkend AAAAAAAABT}
00018         {\cf22 """}\par
{\bkmkstart AAAAAAAABU}{\bkmkend AAAAAAAABU}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 00019}}}
 {\cf22         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 input}}}
 = input}\par
{\bkmkstart AAAAAAAABW}{\bkmkend AAAAAAAABW}
00020 {\cf22         output_folder = []}\par
{\bkmkstart AAAAAAAABX}{\bkmkend AAAAAAAABX}
00021 {\cf22         output_folder_names = []}\par
{\bkmkstart AAAAAAAABY}{\bkmkend AAAAAAAABY}
00022 {\cf22         output_names = []}\par
{\bkmkstart AAAAAAAABZ}{\bkmkend AAAAAAAABZ}
00023 {\cf22         }{\cf19 for} item {\cf19 in} (input_folder := glob.glob(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 input}}}
 + {\cf22 '/*.*'})):\par
{\bkmkstart AAAAAAAACA}{\bkmkend AAAAAAAACA}
00024             anime_name = anitopy.parse(item.split({\cf22 '\\\\'})[-1])[{\cf22 'anime_title'}]\par
{\bkmkstart AAAAAAAACB}{\bkmkend AAAAAAAACB}
00025             output_folder.append(item)\par
{\bkmkstart AAAAAAAACC}{\bkmkend AAAAAAAACC}
00026             output_folder_names.append(os.path.split(item)[-1])\par
{\bkmkstart AAAAAAAACD}{\bkmkend AAAAAAAACD}
00027         print(output_folder)\par
{\bkmkstart AAAAAAAACE}{\bkmkend AAAAAAAACE}
00028         print(output_folder_names)\par
{\bkmkstart AAAAAAAACF}{\bkmkend AAAAAAAACF}
00029         folder_name = os.path.split(os.path.split(output_folder[0])[0])[-1]\par
{\bkmkstart AAAAAAAACG}{\bkmkend AAAAAAAACG}
00030         folder_name_parent = os.path.split(input_folder[0])[0]\par
{\bkmkstart AAAAAAAACH}{\bkmkend AAAAAAAACH}
00031         print(folder_name)\par
{\bkmkstart AAAAAAAACI}{\bkmkend AAAAAAAACI}
00032         print(folder_name_parent)\par
{\bkmkstart AAAAAAAACJ}{\bkmkend AAAAAAAACJ}
00033         print(anime_name)\par
{\bkmkstart AAAAAAAACK}{\bkmkend AAAAAAAACK}
00034         extensions = []\par
{\bkmkstart AAAAAAAACL}{\bkmkend AAAAAAAACL}
00035         {\cf19 for} item {\cf19 in} input_folder:\par
{\bkmkstart AAAAAAAACM}{\bkmkend AAAAAAAACM}
00036             extensions.append(anitopy.parse(item)[{\cf22 'file_extension'}])\par
{\bkmkstart AAAAAAAACN}{\bkmkend AAAAAAAACN}
00037         resolution = []\par
{\bkmkstart AAAAAAAACO}{\bkmkend AAAAAAAACO}
00038         {\cf19 for} item {\cf19 in} input_folder:\par
{\bkmkstart AAAAAAAACP}{\bkmkend AAAAAAAACP}
00039             {\cf19 try}:\par
{\bkmkstart AAAAAAAACQ}{\bkmkend AAAAAAAACQ}
00040                 resolution.append(anitopy.parse(item)[{\cf22 'video_resolution'}])\par
{\bkmkstart AAAAAAAACR}{\bkmkend AAAAAAAACR}
00041             {\cf19 except} KeyError:\par
{\bkmkstart AAAAAAAACS}{\bkmkend AAAAAAAACS}
00042                 resolution.append({\cf22 ''})\par
{\bkmkstart AAAAAAAACT}{\bkmkend AAAAAAAACT}
00043         season = []\par
{\bkmkstart AAAAAAAACU}{\bkmkend AAAAAAAACU}
00044         {\cf19 for} item {\cf19 in} input_folder:\par
{\bkmkstart AAAAAAAACV}{\bkmkend AAAAAAAACV}
00045             {\cf19 try}:\par
{\bkmkstart AAAAAAAACW}{\bkmkend AAAAAAAACW}
00046                 season.append(anitopy.parse(item)[{\cf22 'anime_season'}])\par
{\bkmkstart AAAAAAAACX}{\bkmkend AAAAAAAACX}
00047             {\cf19 except} KeyError:\par
{\bkmkstart AAAAAAAACY}{\bkmkend AAAAAAAACY}
00048                 season.append({\cf22 '1'})\par
{\bkmkstart AAAAAAAACZ}{\bkmkend AAAAAAAACZ}
00049         anime_title = []\par
{\bkmkstart AAAAAAAADA}{\bkmkend AAAAAAAADA}
00050         {\cf19 for} item {\cf19 in} input_folder:\par
{\bkmkstart AAAAAAAADB}{\bkmkend AAAAAAAADB}
00051             {\cf19 try}:\par
{\bkmkstart AAAAAAAADC}{\bkmkend AAAAAAAADC}
00052                 anime_title.append({\cf22 ' - '} + anitopy.parse(item)[{\cf22 'episode_title'}])\par
{\bkmkstart AAAAAAAADD}{\bkmkend AAAAAAAADD}
00053             {\cf19 except} KeyError:\par
{\bkmkstart AAAAAAAADE}{\bkmkend AAAAAAAADE}
00054                 anime_title.append({\cf22 ''})\par
{\bkmkstart AAAAAAAADF}{\bkmkend AAAAAAAADF}
00055         {\cf19 for} times, item {\cf19 in} enumerate(output_folder_names):\par
{\bkmkstart AAAAAAAADG}{\bkmkend AAAAAAAADG}
00056             print(episode_name := anitopy.parse(item)[{\cf22 'episode_number'}])\par
{\bkmkstart AAAAAAAADH}{\bkmkend AAAAAAAADH}
00057             output_names.append([anime_name, episode_name, f{\cf22 " (Season \{season[times]\})"}])\par
{\bkmkstart AAAAAAAADI}{\bkmkend AAAAAAAADI}
00058         output_final = []\par
{\bkmkstart AAAAAAAADJ}{\bkmkend AAAAAAAADJ}
00059         {\cf19 for} times, item {\cf19 in} enumerate(output_names):\par
{\bkmkstart AAAAAAAADK}{\bkmkend AAAAAAAADK}
00060             output_final.append(folder_name_parent + {\cf22 '/'} + anime_name + str(item[2]) +\par
{\bkmkstart AAAAAAAADL}{\bkmkend AAAAAAAADL}
00061                                 {\cf22 ' - '} + str(item[1]) + anime_title[times] +  {\cf22 '.'} + extensions[times])\par
{\bkmkstart AAAAAAAADM}{\bkmkend AAAAAAAADM}
00062         print(output_final)\par
{\bkmkstart AAAAAAAADN}{\bkmkend AAAAAAAADN}
00063         {\cf19 for} number {\cf19 in} range(0, len(output_final)):\par
{\bkmkstart AAAAAAAADO}{\bkmkend AAAAAAAADO}
00064             print(input_folder[number] + {\cf22 ' => '} + output_final[number])\par
{\bkmkstart AAAAAAAADP}{\bkmkend AAAAAAAADP}
00065         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 input}}}
 = input_folder\par
{\bkmkstart AAAAAAAADQ}{\bkmkend AAAAAAAADQ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 00066}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 output}}}
 = output_final\par
{\bkmkstart AAAAAAAADS}{\bkmkend AAAAAAAADS}
00067 \par
{\bkmkstart AAAAAAAADT}{\bkmkend AAAAAAAADT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADU" }{}}{\fldrslt {\cs37\ul\cf2 00068}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 rename}}}
(self):\par
{\bkmkstart AAAAAAAADV}{\bkmkend AAAAAAAADV}
00069         {\cf22 """}\par
{\bkmkstart AAAAAAAADW}{\bkmkend AAAAAAAADW}
00070 {\cf22         The rename function takes a list of files }{\cf19 and} renames them.\par
{\bkmkstart AAAAAAAADX}{\bkmkend AAAAAAAADX}
00071         The function accepts two lists {\cf17 as} arguments: the input list {\cf19 and} output list.\par
{\bkmkstart AAAAAAAADY}{\bkmkend AAAAAAAADY}
00072         The input file names are used to rename the output files.\par
{\bkmkstart AAAAAAAADZ}{\bkmkend AAAAAAAADZ}
00073         : param self: Access the attributes {\cf19 and} methods of the {\cf17 class }in python\par
{\bkmkstart AAAAAAAAEA}{\bkmkend AAAAAAAAEA}
00074         : {\cf19 return}: {\cf18 None}\par
{\bkmkstart AAAAAAAAEB}{\bkmkend AAAAAAAAEB}
00075         {\cf22 """}\par
{\bkmkstart AAAAAAAAEC}{\bkmkend AAAAAAAAEC}
00076 {\cf22         }{\cf19 for} number {\cf19 in} range(0, len(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 output}}}
)):\par
{\bkmkstart AAAAAAAAED}{\bkmkend AAAAAAAAED}
00077             os.rename(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 input}}}
[number], self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADR" }{}}{\fldrslt {\cs37\ul\cf2 output}}}
[number])\par
{\bkmkstart AAAAAAAAEE}{\bkmkend AAAAAAAAEE}
00078 \par
{\bkmkstart AAAAAAAAEF}{\bkmkend AAAAAAAAEF}
00079 \par
{\bkmkstart AAAAAAAAEG}{\bkmkend AAAAAAAAEG}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEH" }{}}{\fldrslt {\cs37\ul\cf2 00080}}}
 {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEH" }{}}{\fldrslt {\cs37\ul\cf2 main}}}
():\par
{\bkmkstart AAAAAAAAEI}{\bkmkend AAAAAAAAEI}
00081     {\cf22 """}\par
{\bkmkstart AAAAAAAAEJ}{\bkmkend AAAAAAAAEJ}
00082 {\cf22     The main function of the program.}\par
{\bkmkstart AAAAAAAAEK}{\bkmkend AAAAAAAAEK}
00083 {\cf22     : }{\cf19 return}: The anime object\par
{\bkmkstart AAAAAAAAEL}{\bkmkend AAAAAAAAEL}
00084     {\cf22 """}\par
{\bkmkstart AAAAAAAAEM}{\bkmkend AAAAAAAAEM}
00085 {\cf22     input_folder = filedialog.askdirectory()}\par
{\bkmkstart AAAAAAAAEN}{\bkmkend AAAAAAAAEN}
00086 {\cf22     anime = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABK" }{}}{\fldrslt {\cs37\ul\cf2 rename}}}
(input_folder)}\par
{\bkmkstart AAAAAAAAEO}{\bkmkend AAAAAAAAEO}
00087 {\cf22     }{\cf19 while} {\cf17 True}:\par
{\bkmkstart AAAAAAAAEP}{\bkmkend AAAAAAAAEP}
00088         vstup = input({\cf22 'Rename (Y/n) > '})\par
{\bkmkstart AAAAAAAAEQ}{\bkmkend AAAAAAAAEQ}
00089         {\cf19 if} vstup {\cf19 in} [{\cf22 ''}, {\cf22 'y'}, {\cf22 'Y'}]:\par
{\bkmkstart AAAAAAAAER}{\bkmkend AAAAAAAAER}
00090             anime.rename()\par
{\bkmkstart AAAAAAAAES}{\bkmkend AAAAAAAAES}
00091             {\cf19 break}\par
{\bkmkstart AAAAAAAAET}{\bkmkend AAAAAAAAET}
00092         {\cf19 if} vstup {\cf19 in} [{\cf22 'n'}, {\cf22 'N'}]:\par
{\bkmkstart AAAAAAAAEU}{\bkmkend AAAAAAAAEU}
00093             {\cf19 break}\par
{\bkmkstart AAAAAAAAEV}{\bkmkend AAAAAAAAEV}
00094         {\cf19 else}:\par
{\bkmkstart AAAAAAAAEW}{\bkmkend AAAAAAAAEW}
00095             {\cf19 continue}\par
{\bkmkstart AAAAAAAAEX}{\bkmkend AAAAAAAAEX}
00096 \par
{\bkmkstart AAAAAAAAEY}{\bkmkend AAAAAAAAEY}
00097 \par
{\bkmkstart AAAAAAAAEZ}{\bkmkend AAAAAAAAEZ}
00098 {\cf19 if} __name__ == {\cf22 '__main__'}:\par
{\bkmkstart AAAAAAAAFA}{\bkmkend AAAAAAAAFA}
00099     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAEH" }{}}{\fldrslt {\cs37\ul\cf2 main}}}
()\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/code2string.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/code2string.py}
{\xe \v final/code2string.py}
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 final.code2string.c2s}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFE" }{}}{\fldrslt {\cs37\ul\cf2 final.code2string}}}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
code2string.py\par \pard\plain 
{\tc\tcl2 \v final/code2string.py}
{\xe \v final/code2string.py}
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFC" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAFD}{\bkmkend AAAAAAAAFD}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFE" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf22 """Code to string"""}\par
{\bkmkstart AAAAAAAAFF}{\bkmkend AAAAAAAAFF}
00002 \par
{\bkmkstart AAAAAAAAFG}{\bkmkend AAAAAAAAFG}
00003 {\cf17 from} tqdm {\cf17 import} tqdm\par
{\bkmkstart AAAAAAAAFH}{\bkmkend AAAAAAAAFH}
00004 \par
{\bkmkstart AAAAAAAAFI}{\bkmkend AAAAAAAAFI}
00005 \par
{\bkmkstart AAAAAAAAFJ}{\bkmkend AAAAAAAAFJ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 00006}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFK" }{}}{\fldrslt {\cs37\ul\cf2 c2s}}}
:\par
{\bkmkstart AAAAAAAAFL}{\bkmkend AAAAAAAAFL}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFM" }{}}{\fldrslt {\cs37\ul\cf2 00007}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFM" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
(self, code_file: str, string_file: str):\par
{\bkmkstart AAAAAAAAFN}{\bkmkend AAAAAAAAFN}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFO" }{}}{\fldrslt {\cs37\ul\cf2 00008}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFO" }{}}{\fldrslt {\cs37\ul\cf2 string_file}}}
 = string_file\par
{\bkmkstart AAAAAAAAFP}{\bkmkend AAAAAAAAFP}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 00009}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 code_file}}}
 = code_file\par
{\bkmkstart AAAAAAAAFR}{\bkmkend AAAAAAAAFR}
00010 \par
{\bkmkstart AAAAAAAAFS}{\bkmkend AAAAAAAAFS}
00011     {\cf21 @staticmethod}\par
{\bkmkstart AAAAAAAAFT}{\bkmkend AAAAAAAAFT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 00012}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFU" }{}}{\fldrslt {\cs37\ul\cf2 to_str}}}
(thing) -> str:\par
{\bkmkstart AAAAAAAAFV}{\bkmkend AAAAAAAAFV}
00013         {\cf22 """}\par
{\bkmkstart AAAAAAAAFW}{\bkmkend AAAAAAAAFW}
00014 {\cf22         The to_str function takes a list of lists }{\cf19 and} converts it into a string.\par
{\bkmkstart AAAAAAAAFX}{\bkmkend AAAAAAAAFX}
00015         The function {\cf19 is} used to convert the data {\cf17 from} the csv file into something that\par
{\bkmkstart AAAAAAAAFY}{\bkmkend AAAAAAAAFY}
00016         can be written to an SQL database. The function also removes any apostrophes {\cf19 or} \par
{\bkmkstart AAAAAAAAFZ}{\bkmkend AAAAAAAAFZ}
00017         quotation marks {\cf19 in} order to prevent SQL injection attacks.\par
{\bkmkstart AAAAAAAAGA}{\bkmkend AAAAAAAAGA}
00018 \par
{\bkmkstart AAAAAAAAGB}{\bkmkend AAAAAAAAGB}
00019         :param thing: Pass {\cf19 in} a list of lists\par
{\bkmkstart AAAAAAAAGC}{\bkmkend AAAAAAAAGC}
00020         :{\cf19 return}: A string that {\cf19 is} formatted {\cf19 for} the insert statement\par
{\bkmkstart AAAAAAAAGD}{\bkmkend AAAAAAAAGD}
00021         {\cf22 """}\par
{\bkmkstart AAAAAAAAGE}{\bkmkend AAAAAAAAGE}
00022 {\cf22         name: str = ''}\par
{\bkmkstart AAAAAAAAGF}{\bkmkend AAAAAAAAGF}
00023         {\cf19 if} thing {\cf19 is} {\cf18 None}:\par
{\bkmkstart AAAAAAAAGG}{\bkmkend AAAAAAAAGG}
00024             {\cf19 return} {\cf22 'NULL'}\par
{\bkmkstart AAAAAAAAGH}{\bkmkend AAAAAAAAGH}
00025         {\cf19 if} len(thing) == 0:\par
{\bkmkstart AAAAAAAAGI}{\bkmkend AAAAAAAAGI}
00026             name: str = {\cf22 'None'}\par
{\bkmkstart AAAAAAAAGJ}{\bkmkend AAAAAAAAGJ}
00027             {\cf19 return} name\par
{\bkmkstart AAAAAAAAGK}{\bkmkend AAAAAAAAGK}
00028         temp: str = {\cf22 ''}\par
{\bkmkstart AAAAAAAAGL}{\bkmkend AAAAAAAAGL}
00029         {\cf19 for} i {\cf19 in} tqdm(range(len(thing)), leave={\cf17 False}):\par
{\bkmkstart AAAAAAAAGM}{\bkmkend AAAAAAAAGM}
00030             {\cf19 if} thing[i] == {\cf22 "'"}:\par
{\bkmkstart AAAAAAAAGN}{\bkmkend AAAAAAAAGN}
00031                 temp += {\cf22 "\\\\'"}\par
{\bkmkstart AAAAAAAAGO}{\bkmkend AAAAAAAAGO}
00032             {\cf19 elif} thing[i] == {\cf22 '\\"'}:\par
{\bkmkstart AAAAAAAAGP}{\bkmkend AAAAAAAAGP}
00033                 temp += {\cf22 '\\\\"'}\par
{\bkmkstart AAAAAAAAGQ}{\bkmkend AAAAAAAAGQ}
00034             {\cf19 elif} thing[i] == {\cf22 '\\n'}:\par
{\bkmkstart AAAAAAAAGR}{\bkmkend AAAAAAAAGR}
00035                 temp += {\cf22 '\\\\n'}\par
{\bkmkstart AAAAAAAAGS}{\bkmkend AAAAAAAAGS}
00036             {\cf19 else}:\par
{\bkmkstart AAAAAAAAGT}{\bkmkend AAAAAAAAGT}
00037                 temp += str(thing[i])\par
{\bkmkstart AAAAAAAAGU}{\bkmkend AAAAAAAAGU}
00038         name += str(temp)\par
{\bkmkstart AAAAAAAAGV}{\bkmkend AAAAAAAAGV}
00039         {\cf19 return} name\par
{\bkmkstart AAAAAAAAGW}{\bkmkend AAAAAAAAGW}
00040 \par
{\bkmkstart AAAAAAAAGX}{\bkmkend AAAAAAAAGX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGY" }{}}{\fldrslt {\cs37\ul\cf2 00041}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGY" }{}}{\fldrslt {\cs37\ul\cf2 start}}}
(self) -> str:\par
{\bkmkstart AAAAAAAAGZ}{\bkmkend AAAAAAAAGZ}
00042         full = {\cf22 ""}\par
{\bkmkstart AAAAAAAAHA}{\bkmkend AAAAAAAAHA}
00043         {\cf17 with} open(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFQ" }{}}{\fldrslt {\cs37\ul\cf2 code_file}}}
, {\cf22 'r'}) {\cf17 as} code:\par
{\bkmkstart AAAAAAAAHB}{\bkmkend AAAAAAAAHB}
00044             {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFO" }{}}{\fldrslt {\cs37\ul\cf2 string_file}}}
 {\cf19 is} {\cf19 not} {\cf18 None} {\cf19 or} {\cf19 not} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFO" }{}}{\fldrslt {\cs37\ul\cf2 string_file}}}
 {\cf19 in} [{\cf22 ''}]:\par
{\bkmkstart AAAAAAAAHC}{\bkmkend AAAAAAAAHC}
00045                 {\cf17 with} open(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAFO" }{}}{\fldrslt {\cs37\ul\cf2 string_file}}}
, {\cf22 'w'}) {\cf17 as} file:\par
{\bkmkstart AAAAAAAAHD}{\bkmkend AAAAAAAAHD}
00046                     {\cf19 for} i {\cf19 in} tqdm(fr := code.readlines()):\par
{\bkmkstart AAAAAAAAHE}{\bkmkend AAAAAAAAHE}
00047                         oneline = c2s.to_str(i)\par
{\bkmkstart AAAAAAAAHF}{\bkmkend AAAAAAAAHF}
00048                         file.write(oneline)\par
{\bkmkstart AAAAAAAAHG}{\bkmkend AAAAAAAAHG}
00049                         full += oneline\par
{\bkmkstart AAAAAAAAHH}{\bkmkend AAAAAAAAHH}
00050             {\cf19 else}:\par
{\bkmkstart AAAAAAAAHI}{\bkmkend AAAAAAAAHI}
00051                 {\cf19 for} i {\cf19 in} tqdm(fr := code.readlines()):\par
{\bkmkstart AAAAAAAAHJ}{\bkmkend AAAAAAAAHJ}
00052                     oneline = c2s.to_str(i)\par
{\bkmkstart AAAAAAAAHK}{\bkmkend AAAAAAAAHK}
00053                     full += oneline\par
{\bkmkstart AAAAAAAAHL}{\bkmkend AAAAAAAAHL}
00054         {\cf19 return} full\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/completer.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/completer.py}
{\xe \v final/completer.py}
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 final.completer.SimpleCompleter}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 final.completer}}}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
completer.py\par \pard\plain 
{\tc\tcl2 \v final/completer.py}
{\xe \v final/completer.py}
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHN" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAHO}{\bkmkend AAAAAAAAHO}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHP" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf17 import} logging\par
{\bkmkstart AAAAAAAAHQ}{\bkmkend AAAAAAAAHQ}
00002 \par
{\bkmkstart AAAAAAAAHR}{\bkmkend AAAAAAAAHR}
00003 \par
{\bkmkstart AAAAAAAAHS}{\bkmkend AAAAAAAAHS}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 00004}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHT" }{}}{\fldrslt {\cs37\ul\cf2 SimpleCompleter}}}
(object):\par
{\bkmkstart AAAAAAAAHU}{\bkmkend AAAAAAAAHU}
00005 \par
{\bkmkstart AAAAAAAAHV}{\bkmkend AAAAAAAAHV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 00006}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHW" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
(self, options):\par
{\bkmkstart AAAAAAAAHX}{\bkmkend AAAAAAAAHX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHY" }{}}{\fldrslt {\cs37\ul\cf2 00007}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHY" }{}}{\fldrslt {\cs37\ul\cf2 options}}}
 = sorted(options)\par
{\bkmkstart AAAAAAAAHZ}{\bkmkend AAAAAAAAHZ}
00008         {\cf19 return}\par
{\bkmkstart AAAAAAAAIA}{\bkmkend AAAAAAAAIA}
00009 \par
{\bkmkstart AAAAAAAAIB}{\bkmkend AAAAAAAAIB}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 00010}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 complete}}}
(self, text, state):\par
{\bkmkstart AAAAAAAAID}{\bkmkend AAAAAAAAID}
00011         {\cf22 """}\par
{\bkmkstart AAAAAAAAIE}{\bkmkend AAAAAAAAIE}
00012 {\cf22         The complete function }{\cf19 is} called {\cf17 as} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIC" }{}}{\fldrslt {\cs37\ul\cf2 complete}}}
(text, state), {\cf19 for} state {\cf19 in} 0, 1, 2, ...\par
{\bkmkstart AAAAAAAAIF}{\bkmkend AAAAAAAAIF}
00013         until it returns a non-string value. It should {\cf19 return} the next possible completion starting {\cf17 with} {\cf22 'text'}.\par
{\bkmkstart AAAAAAAAIG}{\bkmkend AAAAAAAAIG}
00014 \par
{\bkmkstart AAAAAAAAIH}{\bkmkend AAAAAAAAIH}
00015         :param self: Represent the instance of the {\cf17 class}\par
{\bkmkstart AAAAAAAAII}{\bkmkend AAAAAAAAII}
00016         :param text: Filter the list of options\par
{\bkmkstart AAAAAAAAIJ}{\bkmkend AAAAAAAAIJ}
00017         :param state: Keep track of the index {\cf19 in} the matches list\par
{\bkmkstart AAAAAAAAIK}{\bkmkend AAAAAAAAIK}
00018         :{\cf19 return}: The state{\cf22 'th item from the match list, if we have that many}\par
{\bkmkstart AAAAAAAAIL}{\bkmkend AAAAAAAAIL}
00019 {\cf22         """}\par
{\bkmkstart AAAAAAAAIM}{\bkmkend AAAAAAAAIM}
00020 {\cf22         response = }{\cf18 None}\par
{\bkmkstart AAAAAAAAIN}{\bkmkend AAAAAAAAIN}
00021         {\cf19 if} state == 0:\par
{\bkmkstart AAAAAAAAIO}{\bkmkend AAAAAAAAIO}
00022             {\cf19 if} text:\par
{\bkmkstart AAAAAAAAIP}{\bkmkend AAAAAAAAIP}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 00023}}}
                 self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 matches}}}
 = [s\par
{\bkmkstart AAAAAAAAIR}{\bkmkend AAAAAAAAIR}
00024                                 {\cf19 for} s {\cf19 in} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHY" }{}}{\fldrslt {\cs37\ul\cf2 options}}}
\par
{\bkmkstart AAAAAAAAIS}{\bkmkend AAAAAAAAIS}
00025                                 {\cf19 if} s {\cf19 and} s.startswith(text)]\par
{\bkmkstart AAAAAAAAIT}{\bkmkend AAAAAAAAIT}
00026                 logging.debug({\cf22 '%s matches: %s'}, repr(text), self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 matches}}}
)\par
{\bkmkstart AAAAAAAAIU}{\bkmkend AAAAAAAAIU}
00027             {\cf19 else}:\par
{\bkmkstart AAAAAAAAIV}{\bkmkend AAAAAAAAIV}
00028                 self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 matches}}}
 = self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHY" }{}}{\fldrslt {\cs37\ul\cf2 options}}}
[:]\par
{\bkmkstart AAAAAAAAIW}{\bkmkend AAAAAAAAIW}
00029                 logging.debug({\cf22 '(empty input) matches: %s'}, self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 matches}}}
)\par
{\bkmkstart AAAAAAAAIX}{\bkmkend AAAAAAAAIX}
00030 \par
{\bkmkstart AAAAAAAAIY}{\bkmkend AAAAAAAAIY}
00031         {\cf20 # Return the state'th item from the match list,}\par
{\bkmkstart AAAAAAAAIZ}{\bkmkend AAAAAAAAIZ}
00032         {\cf20 # if we have that many.}\par
{\bkmkstart AAAAAAAAJA}{\bkmkend AAAAAAAAJA}
00033         {\cf19 try}:\par
{\bkmkstart AAAAAAAAJB}{\bkmkend AAAAAAAAJB}
00034             response = self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAIQ" }{}}{\fldrslt {\cs37\ul\cf2 matches}}}
[state]\par
{\bkmkstart AAAAAAAAJC}{\bkmkend AAAAAAAAJC}
00035         {\cf19 except} IndexError:\par
{\bkmkstart AAAAAAAAJD}{\bkmkend AAAAAAAAJD}
00036             response = {\cf18 None}\par
{\bkmkstart AAAAAAAAJE}{\bkmkend AAAAAAAAJE}
00037         logging.debug({\cf22 'complete(%s, %s) => %s'},\par
{\bkmkstart AAAAAAAAJF}{\bkmkend AAAAAAAAJF}
00038                       repr(text), state, repr(response))\par
{\bkmkstart AAAAAAAAJG}{\bkmkend AAAAAAAAJG}
00039         {\cf19 return} response\par
{\bkmkstart AAAAAAAAJH}{\bkmkend AAAAAAAAJH}
00040 \par
{\bkmkstart AAAAAAAAJI}{\bkmkend AAAAAAAAJI}
00041 \par
{\bkmkstart AAAAAAAAJJ}{\bkmkend AAAAAAAAJJ}
00042 {\cf20 # ----------------------------------------------------------------}\par
{\bkmkstart AAAAAAAAJK}{\bkmkend AAAAAAAAJK}
00043 {\cf20 # }\par
{\bkmkstart AAAAAAAAJL}{\bkmkend AAAAAAAAJL}
00044 {\cf20 # Example usage}\par
{\bkmkstart AAAAAAAAJM}{\bkmkend AAAAAAAAJM}
00045 {\cf20 #}\par
{\bkmkstart AAAAAAAAJN}{\bkmkend AAAAAAAAJN}
00046 {\cf20 # import readline}\par
{\bkmkstart AAAAAAAAJO}{\bkmkend AAAAAAAAJO}
00047 {\cf20 # readline.set_completer(}\par
{\bkmkstart AAAAAAAAJP}{\bkmkend AAAAAAAAJP}
00048 {\cf20 #     SimpleCompleter(['example1', 'example2']).complete)}\par
{\bkmkstart AAAAAAAAJQ}{\bkmkend AAAAAAAAJQ}
00049 {\cf20 # readline.parse_and_bind('tab: complete')}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/downloadmusic.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/downloadmusic.py}
{\xe \v final/downloadmusic.py}
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 final.downloadmusic}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 final.downloadmusic.DownloadMusic}}}
 (music_name, directory)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
downloadmusic.py\par \pard\plain 
{\tc\tcl2 \v final/downloadmusic.py}
{\xe \v final/downloadmusic.py}
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJS" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAJT}{\bkmkend AAAAAAAAJT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAJU" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf17 import} urllib.parse\par
{\bkmkstart AAAAAAAAJV}{\bkmkend AAAAAAAAJV}
00002 {\cf17 import} urllib.request\par
{\bkmkstart AAAAAAAAJW}{\bkmkend AAAAAAAAJW}
00003 {\cf17 from} bs4 {\cf17 import} BeautifulSoup\par
{\bkmkstart AAAAAAAAJX}{\bkmkend AAAAAAAAJX}
00004 {\cf17 import} re\par
{\bkmkstart AAAAAAAAJY}{\bkmkend AAAAAAAAJY}
00005 {\cf17 import} os\par
{\bkmkstart AAAAAAAAJZ}{\bkmkend AAAAAAAAJZ}
00006 {\cf17 import} requests\par
{\bkmkstart AAAAAAAAKA}{\bkmkend AAAAAAAAKA}
00007 {\cf17 from} pytube {\cf17 import} YouTube\par
{\bkmkstart AAAAAAAAKB}{\bkmkend AAAAAAAAKB}
00008 {\cf17 from} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 moviepy.editor}}}
 {\cf17 import} *\par
{\bkmkstart AAAAAAAAKD}{\bkmkend AAAAAAAAKD}
00009 {\cf17 import} logging\par
{\bkmkstart AAAAAAAAKE}{\bkmkend AAAAAAAAKE}
00010 \par
{\bkmkstart AAAAAAAAKF}{\bkmkend AAAAAAAAKF}
00011 \par
{\bkmkstart AAAAAAAAKG}{\bkmkend AAAAAAAAKG}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 00012}}}
 {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 DownloadMusic}}}
(music_name, directory):\par
{\bkmkstart AAAAAAAAKI}{\bkmkend AAAAAAAAKI}
00013     {\cf22 """}\par
{\bkmkstart AAAAAAAAKJ}{\bkmkend AAAAAAAAKJ}
00014 {\cf22     The DownloadMusic function takes }{\cf19 in} a string of the name of the song you want to download.\par
{\bkmkstart AAAAAAAAKK}{\bkmkend AAAAAAAAKK}
00015     It then searches {\cf19 for} that song on YouTube {\cf19 and} downloads it {\cf17 as} an mp3 file into your assets folder.\par
{\bkmkstart AAAAAAAAKL}{\bkmkend AAAAAAAAKL}
00016     The function returns a string containing the name of the downloaded file.\par
{\bkmkstart AAAAAAAAKM}{\bkmkend AAAAAAAAKM}
00017 \par
{\bkmkstart AAAAAAAAKN}{\bkmkend AAAAAAAAKN}
00018     :param music_name: Search {\cf19 for} the music {\cf19 in} youtube\par
{\bkmkstart AAAAAAAAKO}{\bkmkend AAAAAAAAKO}
00019     :{\cf19 return}: The name of the downloaded music\par
{\bkmkstart AAAAAAAAKP}{\bkmkend AAAAAAAAKP}
00020     {\cf22 """}\par
{\bkmkstart AAAAAAAAKQ}{\bkmkend AAAAAAAAKQ}
00021 {\cf22     query_string = urllib.parse.urlencode(\{"search_query"}: music_name\})\par
{\bkmkstart AAAAAAAAKR}{\bkmkend AAAAAAAAKR}
00022     formatUrl = urllib.request.urlopen(\par
{\bkmkstart AAAAAAAAKS}{\bkmkend AAAAAAAAKS}
00023         {\cf22 "https://www.youtube.com/results?"} + query_string)\par
{\bkmkstart AAAAAAAAKT}{\bkmkend AAAAAAAAKT}
00024     logging.debug(\par
{\bkmkstart AAAAAAAAKU}{\bkmkend AAAAAAAAKU}
00025         {\cf22 "Searched in: https://www.youtube.com/results?"} + query_string)\par
{\bkmkstart AAAAAAAAKV}{\bkmkend AAAAAAAAKV}
00026     search_results = re.findall(\par
{\bkmkstart AAAAAAAAKW}{\bkmkend AAAAAAAAKW}
00027         {\cf22 r"watch\\?v=(\\S\{11\})"}, formatUrl.read().decode())\par
{\bkmkstart AAAAAAAAKX}{\bkmkend AAAAAAAAKX}
00028     clip = requests.get({\cf22 "https://www.youtube.com/watch?v="} +\par
{\bkmkstart AAAAAAAAKY}{\bkmkend AAAAAAAAKY}
00029                         {\cf22 "\{\}"}.format(search_results[0]))\par
{\bkmkstart AAAAAAAAKZ}{\bkmkend AAAAAAAAKZ}
00030     clip2 = {\cf22 "https://www.youtube.com/watch?v="} + {\cf22 "\{\}"}.format(search_results[0])\par
{\bkmkstart AAAAAAAALA}{\bkmkend AAAAAAAALA}
00031     logging.debug({\cf22 "Found: https://www.youtube.com/watch?v="} +\par
{\bkmkstart AAAAAAAALB}{\bkmkend AAAAAAAALB}
00032                   {\cf22 "\{\}"}.format(search_results[0]))\par
{\bkmkstart AAAAAAAALC}{\bkmkend AAAAAAAALC}
00033     inspect = BeautifulSoup(clip.content, {\cf22 "html.parser"})\par
{\bkmkstart AAAAAAAALD}{\bkmkend AAAAAAAALD}
00034     yt_title = inspect.find_all({\cf22 "meta"}, property={\cf22 "og:title"})\par
{\bkmkstart AAAAAAAALE}{\bkmkend AAAAAAAALE}
00035     {\cf19 for} concatMusic1 {\cf19 in} yt_title:\par
{\bkmkstart AAAAAAAALF}{\bkmkend AAAAAAAALF}
00036         {\cf19 pass}\par
{\bkmkstart AAAAAAAALG}{\bkmkend AAAAAAAALG}
00037     print({\cf22 '\\nStarting download'})\par
{\bkmkstart AAAAAAAALH}{\bkmkend AAAAAAAALH}
00038     print(clip2)\par
{\bkmkstart AAAAAAAALI}{\bkmkend AAAAAAAALI}
00039     print(concatMusic1[{\cf22 'content'}])\par
{\bkmkstart AAAAAAAALJ}{\bkmkend AAAAAAAALJ}
00040 \par
{\bkmkstart AAAAAAAALK}{\bkmkend AAAAAAAALK}
00041     {\cf17 def }run(clip2):\par
{\bkmkstart AAAAAAAALL}{\bkmkend AAAAAAAALL}
00042         {\cf22 """}\par
{\bkmkstart AAAAAAAALM}{\bkmkend AAAAAAAALM}
00043 {\cf22         The run function takes a YouTube link }{\cf17 as} an argument {\cf19 and} downloads the highest resolution video file.\par
{\bkmkstart AAAAAAAALN}{\bkmkend AAAAAAAALN}
00044         It then extracts the audio {\cf17 from} that video file, saves it to a new mp3 file, {\cf19 and} deletes the original video.\par
{\bkmkstart AAAAAAAALO}{\bkmkend AAAAAAAALO}
00045         The function returns the name of this new mp3 file.\par
{\bkmkstart AAAAAAAALP}{\bkmkend AAAAAAAALP}
00046 \par
{\bkmkstart AAAAAAAALQ}{\bkmkend AAAAAAAALQ}
00047         :param clip2: Pass the youtube link to the run function\par
{\bkmkstart AAAAAAAALR}{\bkmkend AAAAAAAALR}
00048         :{\cf19 return}: The name of the song\par
{\bkmkstart AAAAAAAALS}{\bkmkend AAAAAAAALS}
00049         {\cf22 """}\par
{\bkmkstart AAAAAAAALT}{\bkmkend AAAAAAAALT}
00050 {\cf22         out_file = YouTube(}\par
{\bkmkstart AAAAAAAALU}{\bkmkend AAAAAAAALU}
00051 {\cf22             str(clip2)).streams.get_highest_resolution().download()}\par
{\bkmkstart AAAAAAAALV}{\bkmkend AAAAAAAALV}
00052 {\cf22         base, ext = os.path.splitext(out_file)}\par
{\bkmkstart AAAAAAAALW}{\bkmkend AAAAAAAALW}
00053 {\cf22         base = os.path.basename(base)}\par
{\bkmkstart AAAAAAAALX}{\bkmkend AAAAAAAALX}
00054 {\cf22         base.replace("["}, {\cf22 "("})\par
{\bkmkstart AAAAAAAALY}{\bkmkend AAAAAAAALY}
00055         base.replace({\cf22 "]"}, {\cf22 ")"})\par
{\bkmkstart AAAAAAAALZ}{\bkmkend AAAAAAAALZ}
00056         base.replace({\cf22 "'"}, {\cf22 ""})\par
{\bkmkstart AAAAAAAAMA}{\bkmkend AAAAAAAAMA}
00057         base.replace({\cf22 "\\""}, {\cf22 ""})\par
{\bkmkstart AAAAAAAAMB}{\bkmkend AAAAAAAAMB}
00058         new_file = base + {\cf22 '.mp3'}\par
{\bkmkstart AAAAAAAAMC}{\bkmkend AAAAAAAAMC}
00059         print(os.path.join(out_file))\par
{\bkmkstart AAAAAAAAMD}{\bkmkend AAAAAAAAMD}
00060         print(os.path.join(directory + {\cf22 '\\\\'} + new_file))\par
{\bkmkstart AAAAAAAAME}{\bkmkend AAAAAAAAME}
00061         video = VideoFileClip(os.path.join(out_file))\par
{\bkmkstart AAAAAAAAMF}{\bkmkend AAAAAAAAMF}
00062         video.audio.write_audiofile(os.path.join(directory + {\cf22 '\\\\'} + new_file))\par
{\bkmkstart AAAAAAAAMG}{\bkmkend AAAAAAAAMG}
00063         video.close()\par
{\bkmkstart AAAAAAAAMH}{\bkmkend AAAAAAAAMH}
00064         os.remove(out_file)\par
{\bkmkstart AAAAAAAAMI}{\bkmkend AAAAAAAAMI}
00065         print({\cf22 'Done\\n'})\par
{\bkmkstart AAAAAAAAMJ}{\bkmkend AAAAAAAAMJ}
00066         {\cf19 return} base\par
{\bkmkstart AAAAAAAAMK}{\bkmkend AAAAAAAAMK}
00067     a = run(clip2)\par
{\bkmkstart AAAAAAAAML}{\bkmkend AAAAAAAAML}
00068     {\cf19 return} a\par
{\bkmkstart AAAAAAAAMM}{\bkmkend AAAAAAAAMM}
00069 \par
{\bkmkstart AAAAAAAAMN}{\bkmkend AAAAAAAAMN}
00070 \par
{\bkmkstart AAAAAAAAMO}{\bkmkend AAAAAAAAMO}
00071 {\cf19 if} __name__ == {\cf22 '__main__'}:\par
{\bkmkstart AAAAAAAAMP}{\bkmkend AAAAAAAAMP}
00072     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKH" }{}}{\fldrslt {\cs37\ul\cf2 DownloadMusic}}}
(input())\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/git.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/git.py}
{\xe \v final/git.py}
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 final.git.download}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 final.git}}}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
git.py\par \pard\plain 
{\tc\tcl2 \v final/git.py}
{\xe \v final/git.py}
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMR" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAMS}{\bkmkend AAAAAAAAMS}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAMT" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf17 import} sys\par
{\bkmkstart AAAAAAAAMU}{\bkmkend AAAAAAAAMU}
00002 {\cf17 import} os\par
{\bkmkstart AAAAAAAAMV}{\bkmkend AAAAAAAAMV}
00003 {\cf17 import} shutil\par
{\bkmkstart AAAAAAAAMW}{\bkmkend AAAAAAAAMW}
00004 {\cf17 import} glob\par
{\bkmkstart AAAAAAAAMX}{\bkmkend AAAAAAAAMX}
00005 \par
{\bkmkstart AAAAAAAAMY}{\bkmkend AAAAAAAAMY}
00006 \par
{\bkmkstart AAAAAAAAMZ}{\bkmkend AAAAAAAAMZ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 00007}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
:\par
{\bkmkstart AAAAAAAANB}{\bkmkend AAAAAAAANB}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 00008}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANC" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
(self, url: str):\par
{\bkmkstart AAAAAAAAND}{\bkmkend AAAAAAAAND}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 00009}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 url}}}
 = url\par
{\bkmkstart AAAAAAAANF}{\bkmkend AAAAAAAANF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 00010}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 caller}}}
 = os.getcwd() + {\cf22 '/'} + self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 url}}}
.split({\cf22 '/'})[-1].split({\cf22 '.'})[0]\par
{\bkmkstart AAAAAAAANH}{\bkmkend AAAAAAAANH}
00011 \par
{\bkmkstart AAAAAAAANI}{\bkmkend AAAAAAAANI}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANJ" }{}}{\fldrslt {\cs37\ul\cf2 00012}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANA" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
(self):\par
{\bkmkstart AAAAAAAANK}{\bkmkend AAAAAAAANK}
00013         {\cf22 """}\par
{\bkmkstart AAAAAAAANL}{\bkmkend AAAAAAAANL}
00014 {\cf22         The download function downloads the zip file }{\cf17 from} the url, extracts it {\cf19 and} returns a list of all files {\cf19 in} the directory\par
{\bkmkstart AAAAAAAANM}{\bkmkend AAAAAAAANM}
00015 \par
{\bkmkstart AAAAAAAANN}{\bkmkend AAAAAAAANN}
00016         :param self: Access the {\cf17 class }attributes and methods\par
{\bkmkstart AAAAAAAANO}{\bkmkend AAAAAAAANO}
00017         :{\cf19 return}: The directory of the extracted files\par
{\bkmkstart AAAAAAAANP}{\bkmkend AAAAAAAANP}
00018         {\cf22 """}\par
{\bkmkstart AAAAAAAANQ}{\bkmkend AAAAAAAANQ}
00019 {\cf22         directory_before = os.listdir()}\par
{\bkmkstart AAAAAAAANR}{\bkmkend AAAAAAAANR}
00020 {\cf22         os.system(f'git clone \{self.url\}'})\par
{\bkmkstart AAAAAAAANS}{\bkmkend AAAAAAAANS}
00021         name = self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANE" }{}}{\fldrslt {\cs37\ul\cf2 url}}}
.split({\cf22 '/'})[-1].split({\cf22 '.'})[0]\par
{\bkmkstart AAAAAAAANT}{\bkmkend AAAAAAAANT}
00022         os.system(f{\cf22 'cd \{name\}'})\par
{\bkmkstart AAAAAAAANU}{\bkmkend AAAAAAAANU}
00023         directory_after = os.listdir()\par
{\bkmkstart AAAAAAAANV}{\bkmkend AAAAAAAANV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 00024}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 directory}}}
 = []\par
{\bkmkstart AAAAAAAANX}{\bkmkend AAAAAAAANX}
00025         {\cf19 for} i {\cf19 in} directory_after:\par
{\bkmkstart AAAAAAAANY}{\bkmkend AAAAAAAANY}
00026             {\cf19 if} i {\cf19 in} directory_before:\par
{\bkmkstart AAAAAAAANZ}{\bkmkend AAAAAAAANZ}
00027                 {\cf19 continue}\par
{\bkmkstart AAAAAAAAOA}{\bkmkend AAAAAAAAOA}
00028             self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 directory}}}
 = i\par
{\bkmkstart AAAAAAAAOB}{\bkmkend AAAAAAAAOB}
00029         print(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANW" }{}}{\fldrslt {\cs37\ul\cf2 directory}}}
)\par
{\bkmkstart AAAAAAAAOC}{\bkmkend AAAAAAAAOC}
00030         {\cf19 return} self\par
{\bkmkstart AAAAAAAAOD}{\bkmkend AAAAAAAAOD}
00031 \par
{\bkmkstart AAAAAAAAOE}{\bkmkend AAAAAAAAOE}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 00032}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOF" }{}}{\fldrslt {\cs37\ul\cf2 remove_info}}}
(self):\par
{\bkmkstart AAAAAAAAOG}{\bkmkend AAAAAAAAOG}
00033         {\cf22 """}\par
{\bkmkstart AAAAAAAAOH}{\bkmkend AAAAAAAAOH}
00034 {\cf22         The remove_info function removes the README.md }{\cf19 and} requirements.txt files {\cf17 from} the target directory.\par
{\bkmkstart AAAAAAAAOI}{\bkmkend AAAAAAAAOI}
00035 \par
{\bkmkstart AAAAAAAAOJ}{\bkmkend AAAAAAAAOJ}
00036         :param self: Represent the instance of the {\cf17 class}\par
{\bkmkstart AAAAAAAAOK}{\bkmkend AAAAAAAAOK}
00037         :{\cf19 return}: Nothing\par
{\bkmkstart AAAAAAAAOL}{\bkmkend AAAAAAAAOL}
00038         {\cf22 """}\par
{\bkmkstart AAAAAAAAOM}{\bkmkend AAAAAAAAOM}
00039 {\cf22         file_names = os.listdir(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 caller}}}
 + '\\\\'})\par
{\bkmkstart AAAAAAAAON}{\bkmkend AAAAAAAAON}
00040         {\cf19 for} file_name {\cf19 in} file_names:\par
{\bkmkstart AAAAAAAAOO}{\bkmkend AAAAAAAAOO}
00041             {\cf19 if} file_name {\cf19 in} [{\cf22 "README.md"}, {\cf22 'requirements.txt'}, {\cf22 'LICENSE'}, {\cf22 '.gitignore'}]:\par
{\bkmkstart AAAAAAAAOP}{\bkmkend AAAAAAAAOP}
00042                 {\cf19 try}:\par
{\bkmkstart AAAAAAAAOQ}{\bkmkend AAAAAAAAOQ}
00043                     os.remove(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 caller}}}
 + {\cf22 '\\\\'} + file_name)\par
{\bkmkstart AAAAAAAAOR}{\bkmkend AAAAAAAAOR}
00044                 {\cf19 except} FileNotFoundError:\par
{\bkmkstart AAAAAAAAOS}{\bkmkend AAAAAAAAOS}
00045                     {\cf19 pass}\par
{\bkmkstart AAAAAAAAOT}{\bkmkend AAAAAAAAOT}
00046         {\cf19 return} self\par
{\bkmkstart AAAAAAAAOU}{\bkmkend AAAAAAAAOU}
00047     \par
{\bkmkstart AAAAAAAAOV}{\bkmkend AAAAAAAAOV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOW" }{}}{\fldrslt {\cs37\ul\cf2 00048}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAOW" }{}}{\fldrslt {\cs37\ul\cf2 install}}}
(self):\par
{\bkmkstart AAAAAAAAOX}{\bkmkend AAAAAAAAOX}
00049         os.system(f{\cf22 "\{sys.executable\} -m pip install \{self.caller\}"})\par
{\bkmkstart AAAAAAAAOY}{\bkmkend AAAAAAAAOY}
00050         {\cf19 return} self\par
{\bkmkstart AAAAAAAAOZ}{\bkmkend AAAAAAAAOZ}
00051 \par
{\bkmkstart AAAAAAAAPA}{\bkmkend AAAAAAAAPA}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 00052}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPB" }{}}{\fldrslt {\cs37\ul\cf2 delete}}}
(self):\par
{\bkmkstart AAAAAAAAPC}{\bkmkend AAAAAAAAPC}
00053         {\cf19 for} file {\cf19 in} glob.glob(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAANG" }{}}{\fldrslt {\cs37\ul\cf2 caller}}}
 + {\cf22 '\\\\*'}, include_hidden={\cf17 True}):\par
{\bkmkstart AAAAAAAAPD}{\bkmkend AAAAAAAAPD}
00054             {\cf19 if} file.split({\cf22 '\\\\'})[-1] == {\cf22 '.git'}:\par
{\bkmkstart AAAAAAAAPE}{\bkmkend AAAAAAAAPE}
00055                 {\cf19 continue}\par
{\bkmkstart AAAAAAAAPF}{\bkmkend AAAAAAAAPF}
00056             {\cf19 if} os.path.isdir(file):\par
{\bkmkstart AAAAAAAAPG}{\bkmkend AAAAAAAAPG}
00057                 shutil.rmtree(file)\par
{\bkmkstart AAAAAAAAPH}{\bkmkend AAAAAAAAPH}
00058             {\cf19 else}:\par
{\bkmkstart AAAAAAAAPI}{\bkmkend AAAAAAAAPI}
00059                 os.remove(file)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/git_legacy.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/git_legacy.py}
{\xe \v final/git_legacy.py}
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARA" }{}}{\fldrslt {\cs37\ul\cf2 final.git_legacy.download}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPM" }{}}{\fldrslt {\cs37\ul\cf2 final.git_legacy}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPT" }{}}{\fldrslt {\cs37\ul\cf2 final.git_legacy.download_file}}}
 (str url, str fname, int chunk_size=1024)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
git_legacy.py\par \pard\plain 
{\tc\tcl2 \v final/git_legacy.py}
{\xe \v final/git_legacy.py}
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPK" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAPL}{\bkmkend AAAAAAAAPL}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPM" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf17 import} zipfile\par
{\bkmkstart AAAAAAAAPN}{\bkmkend AAAAAAAAPN}
00002 {\cf17 import} os\par
{\bkmkstart AAAAAAAAPO}{\bkmkend AAAAAAAAPO}
00003 {\cf17 from} tqdm {\cf17 import} tqdm\par
{\bkmkstart AAAAAAAAPP}{\bkmkend AAAAAAAAPP}
00004 {\cf17 import} shutil\par
{\bkmkstart AAAAAAAAPQ}{\bkmkend AAAAAAAAPQ}
00005 \par
{\bkmkstart AAAAAAAAPR}{\bkmkend AAAAAAAAPR}
00006 \par
{\bkmkstart AAAAAAAAPS}{\bkmkend AAAAAAAAPS}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPT" }{}}{\fldrslt {\cs37\ul\cf2 00007}}}
 {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPT" }{}}{\fldrslt {\cs37\ul\cf2 download_file}}}
(url: str, fname: str, chunk_size: int = 1024) -> bool:\par
{\bkmkstart AAAAAAAAPU}{\bkmkend AAAAAAAAPU}
00008     {\cf22 """}\par
{\bkmkstart AAAAAAAAPV}{\bkmkend AAAAAAAAPV}
00009 {\cf22     "Download a file from a URL to a local file."}\par
{\bkmkstart AAAAAAAAPW}{\bkmkend AAAAAAAAPW}
00010 \par
{\bkmkstart AAAAAAAAPX}{\bkmkend AAAAAAAAPX}
00011     The first line {\cf19 is} the function{\cf22 's signature. It'}s a single line of code that tells you everything\par
{\bkmkstart AAAAAAAAPY}{\bkmkend AAAAAAAAPY}
00012     you need to know about the function\par
{\bkmkstart AAAAAAAAPZ}{\bkmkend AAAAAAAAPZ}
00013 \par
{\bkmkstart AAAAAAAAQA}{\bkmkend AAAAAAAAQA}
00014     :param url: The URL of the file to download\par
{\bkmkstart AAAAAAAAQB}{\bkmkend AAAAAAAAQB}
00015     :type url: str\par
{\bkmkstart AAAAAAAAQC}{\bkmkend AAAAAAAAQC}
00016     :param fname: The name of the file to be downloaded\par
{\bkmkstart AAAAAAAAQD}{\bkmkend AAAAAAAAQD}
00017     :type fname: str\par
{\bkmkstart AAAAAAAAQE}{\bkmkend AAAAAAAAQE}
00018     :param chunk_size: The size of the chunks to download, defaults to 1024 (optional)\par
{\bkmkstart AAAAAAAAQF}{\bkmkend AAAAAAAAQF}
00019     {\cf22 """}\par
{\bkmkstart AAAAAAAAQG}{\bkmkend AAAAAAAAQG}
00020 {\cf22     }{\cf17 import} requests\par
{\bkmkstart AAAAAAAAQH}{\bkmkend AAAAAAAAQH}
00021     {\cf19 try}:\par
{\bkmkstart AAAAAAAAQI}{\bkmkend AAAAAAAAQI}
00022         resp = requests.get(url, stream={\cf17 True})\par
{\bkmkstart AAAAAAAAQJ}{\bkmkend AAAAAAAAQJ}
00023         total: int = int(resp.headers.get({\cf22 'content-length'}, 0))\par
{\bkmkstart AAAAAAAAQK}{\bkmkend AAAAAAAAQK}
00024         {\cf17 with} open(fname, {\cf22 'wb'}) {\cf17 as} file, tqdm(\par
{\bkmkstart AAAAAAAAQL}{\bkmkend AAAAAAAAQL}
00025             desc=fname,\par
{\bkmkstart AAAAAAAAQM}{\bkmkend AAAAAAAAQM}
00026             total=total,\par
{\bkmkstart AAAAAAAAQN}{\bkmkend AAAAAAAAQN}
00027             unit={\cf22 'iB'},\par
{\bkmkstart AAAAAAAAQO}{\bkmkend AAAAAAAAQO}
00028             unit_scale={\cf17 True},\par
{\bkmkstart AAAAAAAAQP}{\bkmkend AAAAAAAAQP}
00029             unit_divisor=1024,\par
{\bkmkstart AAAAAAAAQQ}{\bkmkend AAAAAAAAQQ}
00030         ) {\cf17 as} bar:\par
{\bkmkstart AAAAAAAAQR}{\bkmkend AAAAAAAAQR}
00031             {\cf19 for} data {\cf19 in} resp.iter_content(chunk_size=chunk_size):\par
{\bkmkstart AAAAAAAAQS}{\bkmkend AAAAAAAAQS}
00032                 size = file.write(data)\par
{\bkmkstart AAAAAAAAQT}{\bkmkend AAAAAAAAQT}
00033                 bar.update(size)\par
{\bkmkstart AAAAAAAAQU}{\bkmkend AAAAAAAAQU}
00034     {\cf19 except} ConnectionError:\par
{\bkmkstart AAAAAAAAQV}{\bkmkend AAAAAAAAQV}
00035         {\cf19 return} {\cf17 False}\par
{\bkmkstart AAAAAAAAQW}{\bkmkend AAAAAAAAQW}
00036     {\cf19 return} {\cf17 True}\par
{\bkmkstart AAAAAAAAQX}{\bkmkend AAAAAAAAQX}
00037 \par
{\bkmkstart AAAAAAAAQY}{\bkmkend AAAAAAAAQY}
00038 \par
{\bkmkstart AAAAAAAAQZ}{\bkmkend AAAAAAAAQZ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARA" }{}}{\fldrslt {\cs37\ul\cf2 00039}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARA" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
:\par
{\bkmkstart AAAAAAAARB}{\bkmkend AAAAAAAARB}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 00040}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARC" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
(self, url: str):\par
{\bkmkstart AAAAAAAARD}{\bkmkend AAAAAAAARD}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARE" }{}}{\fldrslt {\cs37\ul\cf2 00041}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARE" }{}}{\fldrslt {\cs37\ul\cf2 url}}}
 = url\par
{\bkmkstart AAAAAAAARF}{\bkmkend AAAAAAAARF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARG" }{}}{\fldrslt {\cs37\ul\cf2 00042}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARG" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
 = {\cf22 'new.zip'}\par
{\bkmkstart AAAAAAAARH}{\bkmkend AAAAAAAARH}
00043 \par
{\bkmkstart AAAAAAAARI}{\bkmkend AAAAAAAARI}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARJ" }{}}{\fldrslt {\cs37\ul\cf2 00044}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARA" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
(self):\par
{\bkmkstart AAAAAAAARK}{\bkmkend AAAAAAAARK}
00045         {\cf22 """}\par
{\bkmkstart AAAAAAAARL}{\bkmkend AAAAAAAARL}
00046 {\cf22         The download function downloads the zip file }{\cf17 from} the url, extracts it {\cf19 and} returns a list of all files {\cf19 in} the directory\par
{\bkmkstart AAAAAAAARM}{\bkmkend AAAAAAAARM}
00047 \par
{\bkmkstart AAAAAAAARN}{\bkmkend AAAAAAAARN}
00048         :param self: Access the {\cf17 class }attributes and methods\par
{\bkmkstart AAAAAAAARO}{\bkmkend AAAAAAAARO}
00049         :{\cf19 return}: The directory of the extracted files\par
{\bkmkstart AAAAAAAARP}{\bkmkend AAAAAAAARP}
00050         {\cf22 """}\par
{\bkmkstart AAAAAAAARQ}{\bkmkend AAAAAAAARQ}
00051 {\cf22         directory_before = os.listdir()}\par
{\bkmkstart AAAAAAAARR}{\bkmkend AAAAAAAARR}
00052 {\cf22         {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAPT" }{}}{\fldrslt {\cs37\ul\cf2 download_file}}}
(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARE" }{}}{\fldrslt {\cs37\ul\cf2 url}}}
, self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARG" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
)}\par
{\bkmkstart AAAAAAAARS}{\bkmkend AAAAAAAARS}
00053 {\cf22         }{\cf17 with} zipfile.ZipFile(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARG" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
, mode={\cf22 'r'}) {\cf17 as} zip:\par
{\bkmkstart AAAAAAAART}{\bkmkend AAAAAAAART}
00054             {\cf19 for} member {\cf19 in} tqdm(iterable=zip.namelist(), total=len(zip.namelist()), desc={\cf22 'Extracting '}):\par
{\bkmkstart AAAAAAAARU}{\bkmkend AAAAAAAARU}
00055                 {\cf19 try}:\par
{\bkmkstart AAAAAAAARV}{\bkmkend AAAAAAAARV}
00056                     zip.extract(member)\par
{\bkmkstart AAAAAAAARW}{\bkmkend AAAAAAAARW}
00057                     tqdm.write(\par
{\bkmkstart AAAAAAAARX}{\bkmkend AAAAAAAARX}
00058                         f{\cf22 "\{os.path.basename(member)\}("} + str(os.path.getsize(member)) + {\cf22 "KB)"})\par
{\bkmkstart AAAAAAAARY}{\bkmkend AAAAAAAARY}
00059                 {\cf19 except} zipfile.error {\cf17 as} e:\par
{\bkmkstart AAAAAAAARZ}{\bkmkend AAAAAAAARZ}
00060                     {\cf19 pass}\par
{\bkmkstart AAAAAAAASA}{\bkmkend AAAAAAAASA}
00061         os.remove(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAARG" }{}}{\fldrslt {\cs37\ul\cf2 name}}}
)\par
{\bkmkstart AAAAAAAASB}{\bkmkend AAAAAAAASB}
00062         directory_after = os.listdir()\par
{\bkmkstart AAAAAAAASC}{\bkmkend AAAAAAAASC}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 00063}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 directory}}}
 = []\par
{\bkmkstart AAAAAAAASE}{\bkmkend AAAAAAAASE}
00064         {\cf19 for} i {\cf19 in} directory_after:\par
{\bkmkstart AAAAAAAASF}{\bkmkend AAAAAAAASF}
00065             {\cf19 if} i {\cf19 in} directory_before:\par
{\bkmkstart AAAAAAAASG}{\bkmkend AAAAAAAASG}
00066                 {\cf19 continue}\par
{\bkmkstart AAAAAAAASH}{\bkmkend AAAAAAAASH}
00067             self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 directory}}}
 = i\par
{\bkmkstart AAAAAAAASI}{\bkmkend AAAAAAAASI}
00068         print(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASD" }{}}{\fldrslt {\cs37\ul\cf2 directory}}}
)\par
{\bkmkstart AAAAAAAASJ}{\bkmkend AAAAAAAASJ}
00069         {\cf19 return} self\par
{\bkmkstart AAAAAAAASK}{\bkmkend AAAAAAAASK}
00070 \par
{\bkmkstart AAAAAAAASL}{\bkmkend AAAAAAAASL}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASM" }{}}{\fldrslt {\cs37\ul\cf2 00071}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAASM" }{}}{\fldrslt {\cs37\ul\cf2 extract}}}
(self, destionation='./'):\par
{\bkmkstart AAAAAAAASN}{\bkmkend AAAAAAAASN}
00072         {\cf22 """}\par
{\bkmkstart AAAAAAAASO}{\bkmkend AAAAAAAASO}
00073 {\cf22         The extract function takes a directory }{\cf17 as} an argument {\cf19 and} moves all files {\cf17 from} the source directory to the target directory.\par
{\bkmkstart AAAAAAAASP}{\bkmkend AAAAAAAASP}
00074         It then deletes the source directory.\par
{\bkmkstart AAAAAAAASQ}{\bkmkend AAAAAAAASQ}
00075 \par
{\bkmkstart AAAAAAAASR}{\bkmkend AAAAAAAASR}
00076         :param self: Refer to the object itself\par
{\bkmkstart AAAAAAAASS}{\bkmkend AAAAAAAASS}
00077         :param destionation: Specify the location where the files will be extracted to\par
{\bkmkstart AAAAAAAAST}{\bkmkend AAAAAAAAST}
00078         :{\cf19 return}: The object itself\par
{\bkmkstart AAAAAAAASU}{\bkmkend AAAAAAAASU}
00079         {\cf22 """}\par
{\bkmkstart AAAAAAAASV}{\bkmkend AAAAAAAASV}
00080 {\cf22         source_dir = f'\{self.directory\}/'}\par
{\bkmkstart AAAAAAAASW}{\bkmkend AAAAAAAASW}
00081         target_dir = destionation\par
{\bkmkstart AAAAAAAASX}{\bkmkend AAAAAAAASX}
00082         file_names = os.listdir(source_dir)\par
{\bkmkstart AAAAAAAASY}{\bkmkend AAAAAAAASY}
00083         {\cf19 for} file_name {\cf19 in} file_names:\par
{\bkmkstart AAAAAAAASZ}{\bkmkend AAAAAAAASZ}
00084             {\cf19 try}:\par
{\bkmkstart AAAAAAAATA}{\bkmkend AAAAAAAATA}
00085                 shutil.move(os.path.join(source_dir, file_name), target_dir)\par
{\bkmkstart AAAAAAAATB}{\bkmkend AAAAAAAATB}
00086             {\cf19 except} shutil.Error:\par
{\bkmkstart AAAAAAAATC}{\bkmkend AAAAAAAATC}
00087                 {\cf19 pass}\par
{\bkmkstart AAAAAAAATD}{\bkmkend AAAAAAAATD}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATE" }{}}{\fldrslt {\cs37\ul\cf2 00088}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATE" }{}}{\fldrslt {\cs37\ul\cf2 target_dir}}}
 = target_dir\par
{\bkmkstart AAAAAAAATF}{\bkmkend AAAAAAAATF}
00089         shutil.rmtree(source_dir)\par
{\bkmkstart AAAAAAAATG}{\bkmkend AAAAAAAATG}
00090         {\cf19 return} self\par
{\bkmkstart AAAAAAAATH}{\bkmkend AAAAAAAATH}
00091 \par
{\bkmkstart AAAAAAAATI}{\bkmkend AAAAAAAATI}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATJ" }{}}{\fldrslt {\cs37\ul\cf2 00092}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATJ" }{}}{\fldrslt {\cs37\ul\cf2 remove_info}}}
(self):\par
{\bkmkstart AAAAAAAATK}{\bkmkend AAAAAAAATK}
00093         {\cf22 """}\par
{\bkmkstart AAAAAAAATL}{\bkmkend AAAAAAAATL}
00094 {\cf22         The remove_info function removes the README.md }{\cf19 and} requirements.txt files {\cf17 from} the target directory.\par
{\bkmkstart AAAAAAAATM}{\bkmkend AAAAAAAATM}
00095 \par
{\bkmkstart AAAAAAAATN}{\bkmkend AAAAAAAATN}
00096         :param self: Represent the instance of the {\cf17 class}\par
{\bkmkstart AAAAAAAATO}{\bkmkend AAAAAAAATO}
00097         :{\cf19 return}: Nothing\par
{\bkmkstart AAAAAAAATP}{\bkmkend AAAAAAAATP}
00098         {\cf22 """}\par
{\bkmkstart AAAAAAAATQ}{\bkmkend AAAAAAAATQ}
00099 {\cf22         file_names = os.listdir(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATE" }{}}{\fldrslt {\cs37\ul\cf2 target_dir}}}
)}\par
{\bkmkstart AAAAAAAATR}{\bkmkend AAAAAAAATR}
00100 {\cf22         }{\cf19 for} file_name {\cf19 in} file_names:\par
{\bkmkstart AAAAAAAATS}{\bkmkend AAAAAAAATS}
00101             {\cf19 if} file_name {\cf19 in} [{\cf22 "README.md"}, {\cf22 'requirements.txt'}]:\par
{\bkmkstart AAAAAAAATT}{\bkmkend AAAAAAAATT}
00102                 {\cf19 try}:\par
{\bkmkstart AAAAAAAATU}{\bkmkend AAAAAAAATU}
00103                     os.remove(file_name)\par
{\bkmkstart AAAAAAAATV}{\bkmkend AAAAAAAATV}
00104                 {\cf19 except} FileNotFoundError:\par
{\bkmkstart AAAAAAAATW}{\bkmkend AAAAAAAATW}
00105                     {\cf19 pass}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/mathematical.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/mathematical.py}
{\xe \v final/mathematical.py}
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUH" }{}}{\fldrslt {\cs37\ul\cf2 final.mathematical.list}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUA" }{}}{\fldrslt {\cs37\ul\cf2 final.mathematical}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXY" }{}}{\fldrslt {\cs37\ul\cf2 final.mathematical.get_id}}}
 (int long=10)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mathematical.py\par \pard\plain 
{\tc\tcl2 \v final/mathematical.py}
{\xe \v final/mathematical.py}
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAATY" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAATZ}{\bkmkend AAAAAAAATZ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUA" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf22 """Math functions"""}\par
{\bkmkstart AAAAAAAAUB}{\bkmkend AAAAAAAAUB}
00002 \par
{\bkmkstart AAAAAAAAUC}{\bkmkend AAAAAAAAUC}
00003 {\cf17 from} math {\cf17 import} ceil\par
{\bkmkstart AAAAAAAAUD}{\bkmkend AAAAAAAAUD}
00004 {\cf17 from} random {\cf17 import} randint\par
{\bkmkstart AAAAAAAAUE}{\bkmkend AAAAAAAAUE}
00005 \par
{\bkmkstart AAAAAAAAUF}{\bkmkend AAAAAAAAUF}
00006 \par
{\bkmkstart AAAAAAAAUG}{\bkmkend AAAAAAAAUG}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUH" }{}}{\fldrslt {\cs37\ul\cf2 00007}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUH" }{}}{\fldrslt {\cs37\ul\cf2 list}}}
:\par
{\bkmkstart AAAAAAAAUI}{\bkmkend AAAAAAAAUI}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUJ" }{}}{\fldrslt {\cs37\ul\cf2 00008}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUJ" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
(self, item: list, show: bool = {\cf17 False}, ignore_errors: bool = {\cf17 False}, obj_ret: bool = {\cf17 False}, error: list = []):\par
{\bkmkstart AAAAAAAAUK}{\bkmkend AAAAAAAAUK}
00009         {\cf19 if} isinstance(item, list):\par
{\bkmkstart AAAAAAAAUL}{\bkmkend AAAAAAAAUL}
00010             {\cf19 if} ignore_errors:\par
{\bkmkstart AAAAAAAAUM}{\bkmkend AAAAAAAAUM}
00011                 {\cf19 pass}\par
{\bkmkstart AAAAAAAAUN}{\bkmkend AAAAAAAAUN}
00012             {\cf19 else}:\par
{\bkmkstart AAAAAAAAUO}{\bkmkend AAAAAAAAUO}
00013                 {\cf19 raise} ValueError({\cf22 "item must be a list"})\par
{\bkmkstart AAAAAAAAUP}{\bkmkend AAAAAAAAUP}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUQ" }{}}{\fldrslt {\cs37\ul\cf2 00014}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUQ" }{}}{\fldrslt {\cs37\ul\cf2 error}}}
 = error\par
{\bkmkstart AAAAAAAAUR}{\bkmkend AAAAAAAAUR}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 00015}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
 = item\par
{\bkmkstart AAAAAAAAUT}{\bkmkend AAAAAAAAUT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 00016}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 show}}}
 = show\par
{\bkmkstart AAAAAAAAUV}{\bkmkend AAAAAAAAUV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUW" }{}}{\fldrslt {\cs37\ul\cf2 00017}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUW" }{}}{\fldrslt {\cs37\ul\cf2 ignore_errors}}}
 = ignore_errors\par
{\bkmkstart AAAAAAAAUX}{\bkmkend AAAAAAAAUX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUY" }{}}{\fldrslt {\cs37\ul\cf2 00018}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUY" }{}}{\fldrslt {\cs37\ul\cf2 obj_ret}}}
 = obj_ret\par
{\bkmkstart AAAAAAAAUZ}{\bkmkend AAAAAAAAUZ}
00019 \par
{\bkmkstart AAAAAAAAVA}{\bkmkend AAAAAAAAVA}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVB" }{}}{\fldrslt {\cs37\ul\cf2 00020}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAVB" }{}}{\fldrslt {\cs37\ul\cf2 get_ratio}}}
(self):\par
{\bkmkstart AAAAAAAAVC}{\bkmkend AAAAAAAAVC}
00021         {\cf22 """}\par
{\bkmkstart AAAAAAAAVD}{\bkmkend AAAAAAAAVD}
00022 {\cf22         The get_ratio function takes a list of two numbers, multiplies the first number by an increasing integer starting at 1,}\par
{\bkmkstart AAAAAAAAVE}{\bkmkend AAAAAAAAVE}
00023 {\cf22         }{\cf19 and} compares the difference between that product {\cf19 and} the original number to 0.0000001. If this condition {\cf19 is} met,\par
{\bkmkstart AAAAAAAAVF}{\bkmkend AAAAAAAAVF}
00024         the function returns a list {\cf17 with} two integers: [original_number * multiplier {\cf19 for} multiplier {\cf19 in} range(0, 99999), 1].\par
{\bkmkstart AAAAAAAAVG}{\bkmkend AAAAAAAAVG}
00025         If {\cf19 not} met before 99999 iterations (99999^2 = 99999999), then it returns [0, 0].\par
{\bkmkstart AAAAAAAAVH}{\bkmkend AAAAAAAAVH}
00026 \par
{\bkmkstart AAAAAAAAVI}{\bkmkend AAAAAAAAVI}
00027         :param self: Refer to the object instance\par
{\bkmkstart AAAAAAAAVJ}{\bkmkend AAAAAAAAVJ}
00028         :{\cf19 return}: A list of two integers: [original_number * multiplier {\cf19 for} multiplier {\cf19 in} range(0, 99999), 1]\par
{\bkmkstart AAAAAAAAVK}{\bkmkend AAAAAAAAVK}
00029         {\cf22 """}\par
{\bkmkstart AAAAAAAAVL}{\bkmkend AAAAAAAAVL}
00030 {\cf22         }{\cf19 if} isinstance(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
, list):\par
{\bkmkstart AAAAAAAAVM}{\bkmkend AAAAAAAAVM}
00031             {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUW" }{}}{\fldrslt {\cs37\ul\cf2 ignore_errors}}}
:\par
{\bkmkstart AAAAAAAAVN}{\bkmkend AAAAAAAAVN}
00032                 {\cf19 return} {\cf22 "item must be a list"}\par
{\bkmkstart AAAAAAAAVO}{\bkmkend AAAAAAAAVO}
00033             {\cf19 else}:\par
{\bkmkstart AAAAAAAAVP}{\bkmkend AAAAAAAAVP}
00034                 {\cf19 raise} ValueError({\cf22 "item must be a list"})\par
{\bkmkstart AAAAAAAAVQ}{\bkmkend AAAAAAAAVQ}
00035         {\cf19 for} i {\cf19 in} range(1, 99999):\par
{\bkmkstart AAAAAAAAVR}{\bkmkend AAAAAAAAVR}
00036             {\cf19 if} float(ceil(float(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
[0]*i)) - float(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
[0]*i)) < 0.0000001:\par
{\bkmkstart AAAAAAAAVS}{\bkmkend AAAAAAAAVS}
00037                 ratio = [int(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
[0]*i), int(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
[1]*i)]\par
{\bkmkstart AAAAAAAAVT}{\bkmkend AAAAAAAAVT}
00038                 {\cf19 break}\par
{\bkmkstart AAAAAAAAVU}{\bkmkend AAAAAAAAVU}
00039         {\cf19 else}:\par
{\bkmkstart AAAAAAAAVV}{\bkmkend AAAAAAAAVV}
00040             {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 show}}}
:\par
{\bkmkstart AAAAAAAAVW}{\bkmkend AAAAAAAAVW}
00041                 print([0, 0])\par
{\bkmkstart AAAAAAAAVX}{\bkmkend AAAAAAAAVX}
00042             {\cf19 return} [0, 0]\par
{\bkmkstart AAAAAAAAVY}{\bkmkend AAAAAAAAVY}
00043         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 show}}}
:\par
{\bkmkstart AAAAAAAAVZ}{\bkmkend AAAAAAAAVZ}
00044             print(ratio)\par
{\bkmkstart AAAAAAAAWA}{\bkmkend AAAAAAAAWA}
00045         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
 = ratio\par
{\bkmkstart AAAAAAAAWB}{\bkmkend AAAAAAAAWB}
00046         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUY" }{}}{\fldrslt {\cs37\ul\cf2 obj_ret}}}
:\par
{\bkmkstart AAAAAAAAWC}{\bkmkend AAAAAAAAWC}
00047             {\cf19 return} self\par
{\bkmkstart AAAAAAAAWD}{\bkmkend AAAAAAAAWD}
00048         {\cf19 return} ratio\par
{\bkmkstart AAAAAAAAWE}{\bkmkend AAAAAAAAWE}
00049 \par
{\bkmkstart AAAAAAAAWF}{\bkmkend AAAAAAAAWF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWG" }{}}{\fldrslt {\cs37\ul\cf2 00050}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAWG" }{}}{\fldrslt {\cs37\ul\cf2 divide}}}
(self):\par
{\bkmkstart AAAAAAAAWH}{\bkmkend AAAAAAAAWH}
00051         {\cf22 """}\par
{\bkmkstart AAAAAAAAWI}{\bkmkend AAAAAAAAWI}
00052 {\cf22         The divide function divides the first item }{\cf19 in} a list by all other items {\cf19 in} that list.\par
{\bkmkstart AAAAAAAAWJ}{\bkmkend AAAAAAAAWJ}
00053             If there are no items, it returns 0.\par
{\bkmkstart AAAAAAAAWK}{\bkmkend AAAAAAAAWK}
00054 \par
{\bkmkstart AAAAAAAAWL}{\bkmkend AAAAAAAAWL}
00055             Parameters:\par
{\bkmkstart AAAAAAAAWM}{\bkmkend AAAAAAAAWM}
00056                 self (object): The object being passed to the function.\par
{\bkmkstart AAAAAAAAWN}{\bkmkend AAAAAAAAWN}
00057 \par
{\bkmkstart AAAAAAAAWO}{\bkmkend AAAAAAAAWO}
00058             Returns: \par
{\bkmkstart AAAAAAAAWP}{\bkmkend AAAAAAAAWP}
00059                 result (int {\cf19 or} float): The result of dividing all numbers together.\par
{\bkmkstart AAAAAAAAWQ}{\bkmkend AAAAAAAAWQ}
00060 \par
{\bkmkstart AAAAAAAAWR}{\bkmkend AAAAAAAAWR}
00061         :param self: Refer to the object itself\par
{\bkmkstart AAAAAAAAWS}{\bkmkend AAAAAAAAWS}
00062         :{\cf19 return}: The result of the division\par
{\bkmkstart AAAAAAAAWT}{\bkmkend AAAAAAAAWT}
00063         {\cf22 """}\par
{\bkmkstart AAAAAAAAWU}{\bkmkend AAAAAAAAWU}
00064 {\cf22         }{\cf19 if} isinstance(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
, list):\par
{\bkmkstart AAAAAAAAWV}{\bkmkend AAAAAAAAWV}
00065             {\cf19 if} {\cf19 not} isinstance(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
, tuple):\par
{\bkmkstart AAAAAAAAWW}{\bkmkend AAAAAAAAWW}
00066                 {\cf19 pass}\par
{\bkmkstart AAAAAAAAWX}{\bkmkend AAAAAAAAWX}
00067             {\cf19 elif} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUW" }{}}{\fldrslt {\cs37\ul\cf2 ignore_errors}}}
:\par
{\bkmkstart AAAAAAAAWY}{\bkmkend AAAAAAAAWY}
00068                 {\cf19 return} {\cf22 "item must be a list"}\par
{\bkmkstart AAAAAAAAWZ}{\bkmkend AAAAAAAAWZ}
00069             {\cf19 else}:\par
{\bkmkstart AAAAAAAAXA}{\bkmkend AAAAAAAAXA}
00070                 {\cf19 raise} ValueError({\cf22 "item must be a list"})\par
{\bkmkstart AAAAAAAAXB}{\bkmkend AAAAAAAAXB}
00071         {\cf19 if} len(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
) == 0:\par
{\bkmkstart AAAAAAAAXC}{\bkmkend AAAAAAAAXC}
00072             self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
 = 0\par
{\bkmkstart AAAAAAAAXD}{\bkmkend AAAAAAAAXD}
00073             {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUW" }{}}{\fldrslt {\cs37\ul\cf2 ignore_errors}}}
:\par
{\bkmkstart AAAAAAAAXE}{\bkmkend AAAAAAAAXE}
00074                 self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUQ" }{}}{\fldrslt {\cs37\ul\cf2 error}}}
.append({\cf22 'No object found; ignoring'})\par
{\bkmkstart AAAAAAAAXF}{\bkmkend AAAAAAAAXF}
00075             {\cf19 else}:\par
{\bkmkstart AAAAAAAAXG}{\bkmkend AAAAAAAAXG}
00076                 {\cf19 raise} ValueError({\cf22 "No object found"})\par
{\bkmkstart AAAAAAAAXH}{\bkmkend AAAAAAAAXH}
00077             {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 show}}}
:\par
{\bkmkstart AAAAAAAAXI}{\bkmkend AAAAAAAAXI}
00078                 print(0)\par
{\bkmkstart AAAAAAAAXJ}{\bkmkend AAAAAAAAXJ}
00079             {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUY" }{}}{\fldrslt {\cs37\ul\cf2 obj_ret}}}
:\par
{\bkmkstart AAAAAAAAXK}{\bkmkend AAAAAAAAXK}
00080                 {\cf19 return} self\par
{\bkmkstart AAAAAAAAXL}{\bkmkend AAAAAAAAXL}
00081             {\cf19 return} 0\par
{\bkmkstart AAAAAAAAXM}{\bkmkend AAAAAAAAXM}
00082         result = self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
[0]\par
{\bkmkstart AAAAAAAAXN}{\bkmkend AAAAAAAAXN}
00083         {\cf19 for} i {\cf19 in} range(1, len(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
)):\par
{\bkmkstart AAAAAAAAXO}{\bkmkend AAAAAAAAXO}
00084             result = result/self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
[i]\par
{\bkmkstart AAAAAAAAXP}{\bkmkend AAAAAAAAXP}
00085         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUS" }{}}{\fldrslt {\cs37\ul\cf2 item}}}
 = result\par
{\bkmkstart AAAAAAAAXQ}{\bkmkend AAAAAAAAXQ}
00086         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUU" }{}}{\fldrslt {\cs37\ul\cf2 show}}}
:\par
{\bkmkstart AAAAAAAAXR}{\bkmkend AAAAAAAAXR}
00087             print(result)\par
{\bkmkstart AAAAAAAAXS}{\bkmkend AAAAAAAAXS}
00088         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUY" }{}}{\fldrslt {\cs37\ul\cf2 obj_ret}}}
:\par
{\bkmkstart AAAAAAAAXT}{\bkmkend AAAAAAAAXT}
00089             {\cf19 return} self\par
{\bkmkstart AAAAAAAAXU}{\bkmkend AAAAAAAAXU}
00090         {\cf19 return} result\par
{\bkmkstart AAAAAAAAXV}{\bkmkend AAAAAAAAXV}
00091 \par
{\bkmkstart AAAAAAAAXW}{\bkmkend AAAAAAAAXW}
00092 \par
{\bkmkstart AAAAAAAAXX}{\bkmkend AAAAAAAAXX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAXY" }{}}{\fldrslt {\cs37\ul\cf2 00093}}}
 {\cf17 def }get_id(long: int = 10) -> int:\par
{\bkmkstart AAAAAAAAXZ}{\bkmkend AAAAAAAAXZ}
00094     id = {\cf22 ''}\par
{\bkmkstart AAAAAAAAYA}{\bkmkend AAAAAAAAYA}
00095     {\cf19 for} i {\cf19 in} range(long):\par
{\bkmkstart AAAAAAAAYB}{\bkmkend AAAAAAAAYB}
00096         id += str(randint(0, 9))\par
{\bkmkstart AAAAAAAAYC}{\bkmkend AAAAAAAAYC}
00097     {\cf19 return} id\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/music.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/music.py}
{\xe \v final/music.py}
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYO" }{}}{\fldrslt {\cs37\ul\cf2 final.music.music}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCA" }{}}{\fldrslt {\cs37\ul\cf2 final.music.Channel}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYG" }{}}{\fldrslt {\cs37\ul\cf2 final.music}}}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
music.py\par \pard\plain 
{\tc\tcl2 \v final/music.py}
{\xe \v final/music.py}
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYE" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAAAYF}{\bkmkend AAAAAAAAYF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYG" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf22 """Music player using mixer from pygame"""}\par
{\bkmkstart AAAAAAAAYH}{\bkmkend AAAAAAAAYH}
00002 \par
{\bkmkstart AAAAAAAAYI}{\bkmkend AAAAAAAAYI}
00003 {\cf17 import} os\par
{\bkmkstart AAAAAAAAYJ}{\bkmkend AAAAAAAAYJ}
00004 {\cf17 from} pygame {\cf17 import} mixer\par
{\bkmkstart AAAAAAAAYK}{\bkmkend AAAAAAAAYK}
00005 os.system({\cf22 'cls'})\par
{\bkmkstart AAAAAAAAYL}{\bkmkend AAAAAAAAYL}
00006 \par
{\bkmkstart AAAAAAAAYM}{\bkmkend AAAAAAAAYM}
00007 \par
{\bkmkstart AAAAAAAAYN}{\bkmkend AAAAAAAAYN}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYO" }{}}{\fldrslt {\cs37\ul\cf2 00008}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYO" }{}}{\fldrslt {\cs37\ul\cf2 music}}}
:\par
{\bkmkstart AAAAAAAAYP}{\bkmkend AAAAAAAAYP}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYQ" }{}}{\fldrslt {\cs37\ul\cf2 00009}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAYQ" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
(self) -> None:\par
{\bkmkstart AAAAAAAAYR}{\bkmkend AAAAAAAAYR}
00010         {\cf22 """}\par
{\bkmkstart AAAAAAAAYS}{\bkmkend AAAAAAAAYS}
00011 {\cf22         The __init__ function }{\cf19 is} called when an instance of the {\cf17 class }is created.\par
{\bkmkstart AAAAAAAAYT}{\bkmkend AAAAAAAAYT}
00012         The __init__ function receives a reference to the instance {\cf17 as} its first argument,\par
{\bkmkstart AAAAAAAAYU}{\bkmkend AAAAAAAAYU}
00013         which we call self. The other arguments are provided by the caller.\par
{\bkmkstart AAAAAAAAYV}{\bkmkend AAAAAAAAYV}
00014         :param self: Refer to the object itself\par
{\bkmkstart AAAAAAAAYW}{\bkmkend AAAAAAAAYW}
00015         :param path: str: Specify the path of the music file\par
{\bkmkstart AAAAAAAAYX}{\bkmkend AAAAAAAAYX}
00016         :param fade: int: Set the fade time {\cf19 in} milliseconds\par
{\bkmkstart AAAAAAAAYY}{\bkmkend AAAAAAAAYY}
00017         :{\cf19 return}: The object of the {\cf17 class}\par
{\bkmkstart AAAAAAAAYZ}{\bkmkend AAAAAAAAYZ}
00018         {\cf22 """}\par
{\bkmkstart AAAAAAAAZA}{\bkmkend AAAAAAAAZA}
00019 {\cf22         mixer.init()}\par
{\bkmkstart AAAAAAAAZB}{\bkmkend AAAAAAAAZB}
00020 {\cf22 }\par
{\bkmkstart AAAAAAAAZC}{\bkmkend AAAAAAAAZC}
00021 {\cf22     }{\cf21 @staticmethod}\par
{\bkmkstart AAAAAAAAZD}{\bkmkend AAAAAAAAZD}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZE" }{}}{\fldrslt {\cs37\ul\cf2 00022}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZE" }{}}{\fldrslt {\cs37\ul\cf2 load}}}
(path: str) -> {\cf18 None}:\par
{\bkmkstart AAAAAAAAZF}{\bkmkend AAAAAAAAZF}
00023         {\cf22 """}\par
{\bkmkstart AAAAAAAAZG}{\bkmkend AAAAAAAAZG}
00024 {\cf22         The load function loads a song into the mixer.}\par
{\bkmkstart AAAAAAAAZH}{\bkmkend AAAAAAAAZH}
00025 {\cf22         :param path: str: Specify the path to the music file}\par
{\bkmkstart AAAAAAAAZI}{\bkmkend AAAAAAAAZI}
00026 {\cf22         :}{\cf19 return}: {\cf18 None}\par
{\bkmkstart AAAAAAAAZJ}{\bkmkend AAAAAAAAZJ}
00027         {\cf22 """}\par
{\bkmkstart AAAAAAAAZK}{\bkmkend AAAAAAAAZK}
00028 {\cf22         }{\cf19 return} mixer.music.load(path)\par
{\bkmkstart AAAAAAAAZL}{\bkmkend AAAAAAAAZL}
00029 \par
{\bkmkstart AAAAAAAAZM}{\bkmkend AAAAAAAAZM}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZN" }{}}{\fldrslt {\cs37\ul\cf2 00030}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZN" }{}}{\fldrslt {\cs37\ul\cf2 play}}}
(self, loops: int = -1, fade: int = 0, start: float = 0.0) -> {\cf18 None}:\par
{\bkmkstart AAAAAAAAZO}{\bkmkend AAAAAAAAZO}
00031         {\cf22 """}\par
{\bkmkstart AAAAAAAAZP}{\bkmkend AAAAAAAAZP}
00032 {\cf22         The play function plays the sound.}\par
{\bkmkstart AAAAAAAAZQ}{\bkmkend AAAAAAAAZQ}
00033 {\cf22 }\par
{\bkmkstart AAAAAAAAZR}{\bkmkend AAAAAAAAZR}
00034 {\cf22         :param self: Access the attributes of the }{\cf17 class}\par
{\bkmkstart AAAAAAAAZS}{\bkmkend AAAAAAAAZS}
00035         :param loops: int: Specify how many times the sound should be played\par
{\bkmkstart AAAAAAAAZT}{\bkmkend AAAAAAAAZT}
00036         :{\cf19 return}: {\cf18 None}\par
{\bkmkstart AAAAAAAAZU}{\bkmkend AAAAAAAAZU}
00037         {\cf22 """}\par
{\bkmkstart AAAAAAAAZV}{\bkmkend AAAAAAAAZV}
00038 {\cf22         }{\cf19 return} mixer.music.play(loops=loops, fade_ms=fade, start=start)\par
{\bkmkstart AAAAAAAAZW}{\bkmkend AAAAAAAAZW}
00039 \par
{\bkmkstart AAAAAAAAZX}{\bkmkend AAAAAAAAZX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 00040}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAZY" }{}}{\fldrslt {\cs37\ul\cf2 lplay}}}
(self, path: str, loops: int = -1, fade: int = 0, start: float = 0.0) -> {\cf18 None}:\par
{\bkmkstart AAAAAAAAZZ}{\bkmkend AAAAAAAAZZ}
00041         {\cf22 """}\par
{\bkmkstart AAAAAAABAA}{\bkmkend AAAAAAABAA}
00042 {\cf22         The lplay function plays a song }{\cf17 from} the given path.\par
{\bkmkstart AAAAAAABAB}{\bkmkend AAAAAAABAB}
00043         The lplay function has three parameters:\par
{\bkmkstart AAAAAAABAC}{\bkmkend AAAAAAABAC}
00044             path - The string containing the filepath of the song to be played.\par
{\bkmkstart AAAAAAABAD}{\bkmkend AAAAAAABAD}
00045             loops - An integer indicating how many times you would like to hear the song,\par
{\bkmkstart AAAAAAABAE}{\bkmkend AAAAAAABAE}
00046             default {\cf19 is} infinite (- 1).\par
{\bkmkstart AAAAAAABAF}{\bkmkend AAAAAAABAF}
00047                 If set to 0, then it will play once {\cf19 and} stop.\par
{\bkmkstart AAAAAAABAG}{\bkmkend AAAAAAABAG}
00048                 If set to 1 {\cf19 or} more, then it will loop that many times so that you can keep playing\par
{\bkmkstart AAAAAAABAH}{\bkmkend AAAAAAABAH}
00049                 songs {\cf19 in} succession without having\par
{\bkmkstart AAAAAAABAI}{\bkmkend AAAAAAABAI}
00050         to call this function again.\par
{\bkmkstart AAAAAAABAJ}{\bkmkend AAAAAAABAJ}
00051                 Note: {\cf19 if} loops {\cf19 is} greater than one {\cf19 and} fade {\cf19 is} non\par
{\bkmkstart AAAAAAABAK}{\bkmkend AAAAAAABAK}
00052         :param self: Reference the object itself\par
{\bkmkstart AAAAAAABAL}{\bkmkend AAAAAAABAL}
00053         :param path: str: Specify the path of the file to be played\par
{\bkmkstart AAAAAAABAM}{\bkmkend AAAAAAABAM}
00054         :param loops: int: Set the number of times the song {\cf19 is} repeated\par
{\bkmkstart AAAAAAABAN}{\bkmkend AAAAAAABAN}
00055         :param fade: int: Fade {\cf19 in} {\cf19 and} out the music\par
{\bkmkstart AAAAAAABAO}{\bkmkend AAAAAAABAO}
00056         :param start: float: Start the music at a certain time\par
{\bkmkstart AAAAAAABAP}{\bkmkend AAAAAAABAP}
00057         :{\cf19 return}: {\cf18 None}\par
{\bkmkstart AAAAAAABAQ}{\bkmkend AAAAAAABAQ}
00058         {\cf22 """}\par
{\bkmkstart AAAAAAABAR}{\bkmkend AAAAAAABAR}
00059 {\cf22         mixer.music.load(path)}\par
{\bkmkstart AAAAAAABAS}{\bkmkend AAAAAAABAS}
00060 {\cf22         }{\cf19 return} mixer.music.play(loops=loops, fade_ms=fade, start=start)\par
{\bkmkstart AAAAAAABAT}{\bkmkend AAAAAAABAT}
00061 \par
{\bkmkstart AAAAAAABAU}{\bkmkend AAAAAAABAU}
00062     {\cf21 @staticmethod}\par
{\bkmkstart AAAAAAABAV}{\bkmkend AAAAAAABAV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAW" }{}}{\fldrslt {\cs37\ul\cf2 00063}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABAW" }{}}{\fldrslt {\cs37\ul\cf2 pause}}}
() -> None:\par
{\bkmkstart AAAAAAABAX}{\bkmkend AAAAAAABAX}
00064         {\cf22 """}\par
{\bkmkstart AAAAAAABAY}{\bkmkend AAAAAAABAY}
00065 {\cf22         The pause function }{\cf19 is} used to pause the music.\par
{\bkmkstart AAAAAAABAZ}{\bkmkend AAAAAAABAZ}
00066 \par
{\bkmkstart AAAAAAABBA}{\bkmkend AAAAAAABBA}
00067         :{\cf19 return}: {\cf18 None}\par
{\bkmkstart AAAAAAABBB}{\bkmkend AAAAAAABBB}
00068         {\cf22 """}\par
{\bkmkstart AAAAAAABBC}{\bkmkend AAAAAAABBC}
00069 {\cf22         }{\cf19 return} mixer.music.pause()\par
{\bkmkstart AAAAAAABBD}{\bkmkend AAAAAAABBD}
00070 \par
{\bkmkstart AAAAAAABBE}{\bkmkend AAAAAAABBE}
00071     {\cf21 @staticmethod}\par
{\bkmkstart AAAAAAABBF}{\bkmkend AAAAAAABBF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 00072}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBG" }{}}{\fldrslt {\cs37\ul\cf2 unpause}}}
() -> None:\par
{\bkmkstart AAAAAAABBH}{\bkmkend AAAAAAABBH}
00073         {\cf22 """}\par
{\bkmkstart AAAAAAABBI}{\bkmkend AAAAAAABBI}
00074 {\cf22         The pause function }{\cf19 is} used to unpause the music.\par
{\bkmkstart AAAAAAABBJ}{\bkmkend AAAAAAABBJ}
00075 \par
{\bkmkstart AAAAAAABBK}{\bkmkend AAAAAAABBK}
00076         :{\cf19 return}: {\cf18 None}\par
{\bkmkstart AAAAAAABBL}{\bkmkend AAAAAAABBL}
00077         {\cf22 """}\par
{\bkmkstart AAAAAAABBM}{\bkmkend AAAAAAABBM}
00078 {\cf22         }{\cf19 return} mixer.music.unpause()\par
{\bkmkstart AAAAAAABBN}{\bkmkend AAAAAAABBN}
00079 \par
{\bkmkstart AAAAAAABBO}{\bkmkend AAAAAAABBO}
00080     {\cf21 @staticmethod}\par
{\bkmkstart AAAAAAABBP}{\bkmkend AAAAAAABBP}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBQ" }{}}{\fldrslt {\cs37\ul\cf2 00081}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABBQ" }{}}{\fldrslt {\cs37\ul\cf2 stop}}}
() -> None:\par
{\bkmkstart AAAAAAABBR}{\bkmkend AAAAAAABBR}
00082         {\cf22 """}\par
{\bkmkstart AAAAAAABBS}{\bkmkend AAAAAAABBS}
00083 {\cf22         The stop function stops the music }{\cf17 from} playing.\par
{\bkmkstart AAAAAAABBT}{\bkmkend AAAAAAABBT}
00084 \par
{\bkmkstart AAAAAAABBU}{\bkmkend AAAAAAABBU}
00085         :{\cf19 return}: {\cf18 None}\par
{\bkmkstart AAAAAAABBV}{\bkmkend AAAAAAABBV}
00086         {\cf22 """}\par
{\bkmkstart AAAAAAABBW}{\bkmkend AAAAAAABBW}
00087 {\cf22         }{\cf19 return} mixer.music.stop()\par
{\bkmkstart AAAAAAABBX}{\bkmkend AAAAAAABBX}
00088 \par
{\bkmkstart AAAAAAABBY}{\bkmkend AAAAAAABBY}
00089 \par
{\bkmkstart AAAAAAABBZ}{\bkmkend AAAAAAABBZ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCA" }{}}{\fldrslt {\cs37\ul\cf2 00090}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCA" }{}}{\fldrslt {\cs37\ul\cf2 Channel}}}
:\par
{\bkmkstart AAAAAAABCB}{\bkmkend AAAAAAABCB}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCC" }{}}{\fldrslt {\cs37\ul\cf2 00091}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCC" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
(self, channel: int, loops: int = -1, fade: int = 0) -> {\cf18 None}:\par
{\bkmkstart AAAAAAABCD}{\bkmkend AAAAAAABCD}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 00092}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 channel}}}
 = channel\par
{\bkmkstart AAAAAAABCF}{\bkmkend AAAAAAABCF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCG" }{}}{\fldrslt {\cs37\ul\cf2 00093}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCG" }{}}{\fldrslt {\cs37\ul\cf2 loops}}}
 = loops\par
{\bkmkstart AAAAAAABCH}{\bkmkend AAAAAAABCH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCI" }{}}{\fldrslt {\cs37\ul\cf2 00094}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCI" }{}}{\fldrslt {\cs37\ul\cf2 fade}}}
 = fade\par
{\bkmkstart AAAAAAABCJ}{\bkmkend AAAAAAABCJ}
00095         mixer.init()\par
{\bkmkstart AAAAAAABCK}{\bkmkend AAAAAAABCK}
00096 \par
{\bkmkstart AAAAAAABCL}{\bkmkend AAAAAAABCL}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCM" }{}}{\fldrslt {\cs37\ul\cf2 00097}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCM" }{}}{\fldrslt {\cs37\ul\cf2 play}}}
(self, path) -> None:\par
{\bkmkstart AAAAAAABCN}{\bkmkend AAAAAAABCN}
00098         {\cf22 """}\par
{\bkmkstart AAAAAAABCO}{\bkmkend AAAAAAABCO}
00099 {\cf22         The play function plays a sound file.}\par
{\bkmkstart AAAAAAABCP}{\bkmkend AAAAAAABCP}
00100 {\cf22         :param self: Access the attributes }{\cf19 and} methods of the {\cf17 class}\par
{\bkmkstart AAAAAAABCQ}{\bkmkend AAAAAAABCQ}
00101         :param path: Specify the path of the sound file\par
{\bkmkstart AAAAAAABCR}{\bkmkend AAAAAAABCR}
00102         :{\cf19 return}: {\cf18 None}\par
{\bkmkstart AAAAAAABCS}{\bkmkend AAAAAAABCS}
00103         :doc-author: Trelent\par
{\bkmkstart AAAAAAABCT}{\bkmkend AAAAAAABCT}
00104         {\cf22 """}\par
{\bkmkstart AAAAAAABCU}{\bkmkend AAAAAAABCU}
00105 {\cf22         }{\cf19 return} mixer.Channel(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 channel}}}
).{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCM" }{}}{\fldrslt {\cs37\ul\cf2 play}}}
(mixer.Sound(path),\par
{\bkmkstart AAAAAAABCV}{\bkmkend AAAAAAABCV}
00106                                          loops=self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCG" }{}}{\fldrslt {\cs37\ul\cf2 loops}}}
, fade_ms=self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCI" }{}}{\fldrslt {\cs37\ul\cf2 fade}}}
)\par
{\bkmkstart AAAAAAABCW}{\bkmkend AAAAAAABCW}
00107 \par
{\bkmkstart AAAAAAABCX}{\bkmkend AAAAAAABCX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCY" }{}}{\fldrslt {\cs37\ul\cf2 00108}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCY" }{}}{\fldrslt {\cs37\ul\cf2 pause}}}
(self) -> None:\par
{\bkmkstart AAAAAAABCZ}{\bkmkend AAAAAAABCZ}
00109         {\cf22 """}\par
{\bkmkstart AAAAAAABDA}{\bkmkend AAAAAAABDA}
00110 {\cf22         The pause function pauses the music playback.}\par
{\bkmkstart AAAAAAABDB}{\bkmkend AAAAAAABDB}
00111 {\cf22         :param self: Access the attributes }{\cf19 and} methods of the {\cf17 class }in python\par
{\bkmkstart AAAAAAABDC}{\bkmkend AAAAAAABDC}
00112         :{\cf19 return}: {\cf18 None}\par
{\bkmkstart AAAAAAABDD}{\bkmkend AAAAAAABDD}
00113         :doc-author: Trelent\par
{\bkmkstart AAAAAAABDE}{\bkmkend AAAAAAABDE}
00114         {\cf22 """}\par
{\bkmkstart AAAAAAABDF}{\bkmkend AAAAAAABDF}
00115 {\cf22         }{\cf19 return} mixer.Channel(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 channel}}}
).{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCY" }{}}{\fldrslt {\cs37\ul\cf2 pause}}}
()\par
{\bkmkstart AAAAAAABDG}{\bkmkend AAAAAAABDG}
00116 \par
{\bkmkstart AAAAAAABDH}{\bkmkend AAAAAAABDH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDI" }{}}{\fldrslt {\cs37\ul\cf2 00117}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDI" }{}}{\fldrslt {\cs37\ul\cf2 unpause}}}
(self) -> None:\par
{\bkmkstart AAAAAAABDJ}{\bkmkend AAAAAAABDJ}
00118         {\cf22 """}\par
{\bkmkstart AAAAAAABDK}{\bkmkend AAAAAAABDK}
00119 {\cf22         The unpause function will unpause the music.}\par
{\bkmkstart AAAAAAABDL}{\bkmkend AAAAAAABDL}
00120 {\cf22         :param self: Access the variables }{\cf19 and} methods of the {\cf17 class}\par
{\bkmkstart AAAAAAABDM}{\bkmkend AAAAAAABDM}
00121         :{\cf19 return}: {\cf18 None}\par
{\bkmkstart AAAAAAABDN}{\bkmkend AAAAAAABDN}
00122         {\cf22 """}\par
{\bkmkstart AAAAAAABDO}{\bkmkend AAAAAAABDO}
00123 {\cf22         }{\cf19 return} mixer.Channel(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 channel}}}
).{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDI" }{}}{\fldrslt {\cs37\ul\cf2 unpause}}}
()\par
{\bkmkstart AAAAAAABDP}{\bkmkend AAAAAAABDP}
00124 \par
{\bkmkstart AAAAAAABDQ}{\bkmkend AAAAAAABDQ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDR" }{}}{\fldrslt {\cs37\ul\cf2 00125}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDR" }{}}{\fldrslt {\cs37\ul\cf2 stop}}}
(self) -> None:\par
{\bkmkstart AAAAAAABDS}{\bkmkend AAAAAAABDS}
00126         {\cf22 """}\par
{\bkmkstart AAAAAAABDT}{\bkmkend AAAAAAABDT}
00127 {\cf22         The stop function stops the music }{\cf17 from} playing.\par
{\bkmkstart AAAAAAABDU}{\bkmkend AAAAAAABDU}
00128         :param self: Refer to the object itself\par
{\bkmkstart AAAAAAABDV}{\bkmkend AAAAAAABDV}
00129         :{\cf19 return}: {\cf18 None}\par
{\bkmkstart AAAAAAABDW}{\bkmkend AAAAAAABDW}
00130         {\cf22 """}\par
{\bkmkstart AAAAAAABDX}{\bkmkend AAAAAAABDX}
00131 {\cf22         }{\cf19 return} mixer.Channel(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABCE" }{}}{\fldrslt {\cs37\ul\cf2 channel}}}
).{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDR" }{}}{\fldrslt {\cs37\ul\cf2 stop}}}
()\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/profiler.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/profiler.py}
{\xe \v final/profiler.py}
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEB" }{}}{\fldrslt {\cs37\ul\cf2 final.profiler}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
any {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 final.profiler.Profiler}}}
 (target, list args=(), bool time_info=False, bool output_file=False, str _return="r")\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
profiler.py\par \pard\plain 
{\tc\tcl2 \v final/profiler.py}
{\xe \v final/profiler.py}
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABDZ" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAABEA}{\bkmkend AAAAAAABEA}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEB" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf17 import} cProfile\par
{\bkmkstart AAAAAAABEC}{\bkmkend AAAAAAABEC}
00002 {\cf17 import} pstats\par
{\bkmkstart AAAAAAABED}{\bkmkend AAAAAAABED}
00003 {\cf17 from} time {\cf17 import} perf_counter, process_time\par
{\bkmkstart AAAAAAABEE}{\bkmkend AAAAAAABEE}
00004 \par
{\bkmkstart AAAAAAABEF}{\bkmkend AAAAAAABEF}
00005 \par
{\bkmkstart AAAAAAABEG}{\bkmkend AAAAAAABEG}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 00006}}}
 {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABEH" }{}}{\fldrslt {\cs37\ul\cf2 Profiler}}}
(target, args: list = (), time_info: bool = {\cf17 False}, output_file: bool = {\cf17 False}, _return: str = {\cf22 "r"}) -> any:\par
{\bkmkstart AAAAAAABEI}{\bkmkend AAAAAAABEI}
00007     {\cf22 """}\par
{\bkmkstart AAAAAAABEJ}{\bkmkend AAAAAAABEJ}
00008 {\cf22     The Profiler function }{\cf19 is} a wrapper {\cf19 for} the cProfile module.\par
{\bkmkstart AAAAAAABEK}{\bkmkend AAAAAAABEK}
00009     It allows you to profile your code {\cf19 and} get information about it{\cf22 's performance.}\par
{\bkmkstart AAAAAAABEL}{\bkmkend AAAAAAABEL}
00010 {\cf22     The Profiler function takes }{\cf19 in} 5 arguments: target, args, time_info {\cf19 and} output_file.\par
{\bkmkstart AAAAAAABEM}{\bkmkend AAAAAAABEM}
00011     target {\cf19 is} the function that you want to profile (required). \par
{\bkmkstart AAAAAAABEN}{\bkmkend AAAAAAABEN}
00012     args are any arguments that need to be passed into target (optional). \par
{\bkmkstart AAAAAAABEO}{\bkmkend AAAAAAABEO}
00013     time_info will {\cf19 print} out how long it took {\cf19 for} the profiled code to run {\cf19 if} set {\cf17 True} (optional).\par
{\bkmkstart AAAAAAABEP}{\bkmkend AAAAAAABEP}
00014     output file will create a file named PROFILING.prof {\cf19 if} set {\cf17 True} (default {\cf17 False})\par
{\bkmkstart AAAAAAABEQ}{\bkmkend AAAAAAABEQ}
00015     Open this file {\cf17 with} {\cf22 'snakeviz PROFILING.prof'} {\cf19 in} CLI environment !!! Will overwrite {\cf19 if} file exists\par
{\bkmkstart AAAAAAABER}{\bkmkend AAAAAAABER}
00016     _return: use {\cf22 'r'} to {\cf19 return} respone, {\cf22 't'} to {\cf19 return} time {\cf19 or} {\cf22 'a'} to {\cf19 return} tuple of respone {\cf19 and} time\par
{\bkmkstart AAAAAAABES}{\bkmkend AAAAAAABES}
00017     \par
{\bkmkstart AAAAAAABET}{\bkmkend AAAAAAABET}
00018     :param target: Specify the function you want to profile\par
{\bkmkstart AAAAAAABEU}{\bkmkend AAAAAAABEU}
00019     :param args: tuple: Pass arguments to the target function\par
{\bkmkstart AAAAAAABEV}{\bkmkend AAAAAAABEV}
00020     :param time_info: bool: Print the time it spend to process\par
{\bkmkstart AAAAAAABEW}{\bkmkend AAAAAAABEW}
00021     :param output_file: bool: Dump the profiling data to a file\par
{\bkmkstart AAAAAAABEX}{\bkmkend AAAAAAABEX}
00022     :param _return: str: Determine what the function should {\cf19 return}\par
{\bkmkstart AAAAAAABEY}{\bkmkend AAAAAAABEY}
00023     :{\cf19 return}: A tuple: (response, time)\par
{\bkmkstart AAAAAAABEZ}{\bkmkend AAAAAAABEZ}
00024     {\cf22 """}\par
{\bkmkstart AAAAAAABFA}{\bkmkend AAAAAAABFA}
00025 {\cf22     }{\cf17 with} cProfile.Profile() {\cf17 as} pr:\par
{\bkmkstart AAAAAAABFB}{\bkmkend AAAAAAABFB}
00026         _start = perf_counter()\par
{\bkmkstart AAAAAAABFC}{\bkmkend AAAAAAABFC}
00027         response = target(*args)\par
{\bkmkstart AAAAAAABFD}{\bkmkend AAAAAAABFD}
00028         _end = perf_counter()\par
{\bkmkstart AAAAAAABFE}{\bkmkend AAAAAAABFE}
00029     stats = pstats.Stats(pr)\par
{\bkmkstart AAAAAAABFF}{\bkmkend AAAAAAABFF}
00030     stats.sort_stats(pstats.SortKey.TIME)\par
{\bkmkstart AAAAAAABFG}{\bkmkend AAAAAAABFG}
00031     {\cf19 if} output_file:\par
{\bkmkstart AAAAAAABFH}{\bkmkend AAAAAAABFH}
00032         stats.dump_stats(filename={\cf22 'PROFILING.prof'})\par
{\bkmkstart AAAAAAABFI}{\bkmkend AAAAAAABFI}
00033         print({\cf22 'Use \\'snakeviz PROFILING.prof\\' to open file'})\par
{\bkmkstart AAAAAAABFJ}{\bkmkend AAAAAAABFJ}
00034     {\cf19 if} time_info:\par
{\bkmkstart AAAAAAABFK}{\bkmkend AAAAAAABFK}
00035         print(f{\cf22 "Time it spend to process: \{str(_end - _start)\}s"})\par
{\bkmkstart AAAAAAABFL}{\bkmkend AAAAAAABFL}
00036     {\cf19 if} _return == {\cf22 'r'}:\par
{\bkmkstart AAAAAAABFM}{\bkmkend AAAAAAABFM}
00037         {\cf19 return} response\par
{\bkmkstart AAAAAAABFN}{\bkmkend AAAAAAABFN}
00038     {\cf19 elif} _return == {\cf22 't'}:\par
{\bkmkstart AAAAAAABFO}{\bkmkend AAAAAAABFO}
00039         {\cf19 return} float(_end - _start)\par
{\bkmkstart AAAAAAABFP}{\bkmkend AAAAAAABFP}
00040     {\cf19 elif} _return == {\cf22 'a'}:\par
{\bkmkstart AAAAAAABFQ}{\bkmkend AAAAAAABFQ}
00041         {\cf19 return} (response, float(_end - _start))\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/pymp4.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/pymp4.py}
{\xe \v final/pymp4.py}
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGC" }{}}{\fldrslt {\cs37\ul\cf2 final.pymp4.video}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFU" }{}}{\fldrslt {\cs37\ul\cf2 final.pymp4}}}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pymp4.py\par \pard\plain 
{\tc\tcl2 \v final/pymp4.py}
{\xe \v final/pymp4.py}
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFS" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAABFT}{\bkmkend AAAAAAABFT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABFU" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf22 """}\par
{\bkmkstart AAAAAAABFV}{\bkmkend AAAAAAABFV}
00002 {\cf22 Video changes}\par
{\bkmkstart AAAAAAABFW}{\bkmkend AAAAAAABFW}
00003 {\cf22 """}\par
{\bkmkstart AAAAAAABFX}{\bkmkend AAAAAAABFX}
00004 \par
{\bkmkstart AAAAAAABFY}{\bkmkend AAAAAAABFY}
00005 {\cf17 import} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAKC" }{}}{\fldrslt {\cs37\ul\cf2 moviepy.editor}}}
 {\cf17 as} mp\par
{\bkmkstart AAAAAAABFZ}{\bkmkend AAAAAAABFZ}
00006 \par
{\bkmkstart AAAAAAABGA}{\bkmkend AAAAAAABGA}
00007 \par
{\bkmkstart AAAAAAABGB}{\bkmkend AAAAAAABGB}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGC" }{}}{\fldrslt {\cs37\ul\cf2 00008}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGC" }{}}{\fldrslt {\cs37\ul\cf2 video}}}
:\par
{\bkmkstart AAAAAAABGD}{\bkmkend AAAAAAABGD}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGE" }{}}{\fldrslt {\cs37\ul\cf2 00009}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGE" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
(self, filename: str,):\par
{\bkmkstart AAAAAAABGF}{\bkmkend AAAAAAABGF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGG" }{}}{\fldrslt {\cs37\ul\cf2 00010}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGG" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
 = filename\par
{\bkmkstart AAAAAAABGH}{\bkmkend AAAAAAABGH}
00011 \par
{\bkmkstart AAAAAAABGI}{\bkmkend AAAAAAABGI}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGJ" }{}}{\fldrslt {\cs37\ul\cf2 00012}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGJ" }{}}{\fldrslt {\cs37\ul\cf2 g2v}}}
(self):\par
{\bkmkstart AAAAAAABGK}{\bkmkend AAAAAAABGK}
00013         {\cf22 """}\par
{\bkmkstart AAAAAAABGL}{\bkmkend AAAAAAABGL}
00014 {\cf22         The g2v function takes a .gif file }{\cf19 and} converts it to an mp4 video.\par
{\bkmkstart AAAAAAABGM}{\bkmkend AAAAAAABGM}
00015             The function uses the moviepy library, which {\cf19 is} built on top of FFmpeg.\par
{\bkmkstart AAAAAAABGN}{\bkmkend AAAAAAABGN}
00016             It requires that you have FFmpeg installed on your computer.\par
{\bkmkstart AAAAAAABGO}{\bkmkend AAAAAAABGO}
00017 \par
{\bkmkstart AAAAAAABGP}{\bkmkend AAAAAAABGP}
00018         :param self: Represent the instance of the {\cf17 class}\par
{\bkmkstart AAAAAAABGQ}{\bkmkend AAAAAAABGQ}
00019         :{\cf19 return}: A video file\par
{\bkmkstart AAAAAAABGR}{\bkmkend AAAAAAABGR}
00020         :doc-author: Trelent\par
{\bkmkstart AAAAAAABGS}{\bkmkend AAAAAAABGS}
00021         {\cf22 """}\par
{\bkmkstart AAAAAAABGT}{\bkmkend AAAAAAABGT}
00022 {\cf22 }\par
{\bkmkstart AAAAAAABGU}{\bkmkend AAAAAAABGU}
00023 {\cf22         clip = mp.VideoFileClip(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGG" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
)}\par
{\bkmkstart AAAAAAABGV}{\bkmkend AAAAAAABGV}
00024 {\cf22         clip.write_videofile(}\par
{\bkmkstart AAAAAAABGW}{\bkmkend AAAAAAABGW}
00025 {\cf22             '.'} + self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGG" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
.split({\cf22 '.'})[0:-1][1] + {\cf22 '.mp4'})\par
{\bkmkstart AAAAAAABGX}{\bkmkend AAAAAAABGX}
00026         clip.reader.close()  {\cf20 # type: ignore}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/pywinmove.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/pywinmove.py}
{\xe \v final/pywinmove.py}
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHB" }{}}{\fldrslt {\cs37\ul\cf2 final.pywinmove}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHL" }{}}{\fldrslt {\cs37\ul\cf2 final.pywinmove.get_screensize}}}
 ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
None {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHT" }{}}{\fldrslt {\cs37\ul\cf2 final.pywinmove.move}}}
 (str window, int x, int y, width, length)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ctypes {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHE" }{}}{\fldrslt {\cs37\ul\cf2 final.pywinmove.user32}}}
 = ctypes.windll.user32\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tuple {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHG" }{}}{\fldrslt {\cs37\ul\cf2 final.pywinmove.screensize}}}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pywinmove.py\par \pard\plain 
{\tc\tcl2 \v final/pywinmove.py}
{\xe \v final/pywinmove.py}
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGZ" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAABHA}{\bkmkend AAAAAAABHA}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHB" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf17 import} ctypes\par
{\bkmkstart AAAAAAABHC}{\bkmkend AAAAAAABHC}
00002 {\cf17 import} win32gui\par
{\bkmkstart AAAAAAABHD}{\bkmkend AAAAAAABHD}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHE" }{}}{\fldrslt {\cs37\ul\cf2 00003}}}
 user32 = ctypes.windll.user32\par
{\bkmkstart AAAAAAABHF}{\bkmkend AAAAAAABHF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHG" }{}}{\fldrslt {\cs37\ul\cf2 00004}}}
 screensize: tuple[int, int] = user32.GetSystemMetrics(\par
{\bkmkstart AAAAAAABHH}{\bkmkend AAAAAAABHH}
00005     0), user32.GetSystemMetrics(1)\par
{\bkmkstart AAAAAAABHI}{\bkmkend AAAAAAABHI}
00006 \par
{\bkmkstart AAAAAAABHJ}{\bkmkend AAAAAAABHJ}
00007 \par
{\bkmkstart AAAAAAABHK}{\bkmkend AAAAAAABHK}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHL" }{}}{\fldrslt {\cs37\ul\cf2 00008}}}
 {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHL" }{}}{\fldrslt {\cs37\ul\cf2 get_screensize}}}
():\par
{\bkmkstart AAAAAAABHM}{\bkmkend AAAAAAABHM}
00009     user32 = ctypes.windll.user32\par
{\bkmkstart AAAAAAABHN}{\bkmkend AAAAAAABHN}
00010     screensize: tuple[int, int] = user32.GetSystemMetrics(\par
{\bkmkstart AAAAAAABHO}{\bkmkend AAAAAAABHO}
00011         0), user32.GetSystemMetrics(1)\par
{\bkmkstart AAAAAAABHP}{\bkmkend AAAAAAABHP}
00012     {\cf19 return} screensize\par
{\bkmkstart AAAAAAABHQ}{\bkmkend AAAAAAABHQ}
00013 \par
{\bkmkstart AAAAAAABHR}{\bkmkend AAAAAAABHR}
00014 \par
{\bkmkstart AAAAAAABHS}{\bkmkend AAAAAAABHS}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHT" }{}}{\fldrslt {\cs37\ul\cf2 00015}}}
 {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABHT" }{}}{\fldrslt {\cs37\ul\cf2 move}}}
(window: str, x: int, y: int, width, length) -> {\cf18 None}:  {\cf20 # type: ignore}\par
{\bkmkstart AAAAAAABHU}{\bkmkend AAAAAAABHU}
00016     {\cf22 """}\par
{\bkmkstart AAAAAAABHV}{\bkmkend AAAAAAABHV}
00017 {\cf22     The move function moves the specified window to a specified location.}\par
{\bkmkstart AAAAAAABHW}{\bkmkend AAAAAAABHW}
00018 {\cf22     The move function takes four arguments:}\par
{\bkmkstart AAAAAAABHX}{\bkmkend AAAAAAABHX}
00019 {\cf22         1) The name of the window }{\cf17 as} a string. This {\cf19 is} case sensitive {\cf19 and} should be enclosed {\cf19 in} quotation marks {\cf19 if} it contains spaces {\cf19 or} special characters (e.g., &quot;Microsoft Word&quot;). \par
{\bkmkstart AAAAAAABHY}{\bkmkend AAAAAAABHY}
00020         2) The x-coordinate of the desired location on your screen, measured {\cf19 in} pixels {\cf17 from} the left edge of your screen to where you want your window located (e.g., 100). \par
{\bkmkstart AAAAAAABHZ}{\bkmkend AAAAAAABHZ}
00021         3) The y-coordinate of the desired location on your screen, measured {\cf19 in} pixels {\cf17 from} the top edge of your screen\par
{\bkmkstart AAAAAAABIA}{\bkmkend AAAAAAABIA}
00022 \par
{\bkmkstart AAAAAAABIB}{\bkmkend AAAAAAABIB}
00023     :param window: str: Specify the name of the window\par
{\bkmkstart AAAAAAABIC}{\bkmkend AAAAAAABIC}
00024     :param x: int: Set the x position of the window, y {\cf19 is} used to set the y position\par
{\bkmkstart AAAAAAABID}{\bkmkend AAAAAAABID}
00025     :param y: int: Set the y position of the window, measured {\cf19 in} pixels {\cf17 from} the top edge of your screen\par
{\bkmkstart AAAAAAABIE}{\bkmkend AAAAAAABIE}
00026     :param width: Set the width of the window\par
{\bkmkstart AAAAAAABIF}{\bkmkend AAAAAAABIF}
00027     :param length: Set the height of the window\par
{\bkmkstart AAAAAAABIG}{\bkmkend AAAAAAABIG}
00028     :{\cf19 return}: {\cf18 None}\par
{\bkmkstart AAAAAAABIH}{\bkmkend AAAAAAABIH}
00029     {\cf22 """}\par
{\bkmkstart AAAAAAABII}{\bkmkend AAAAAAABII}
00030 {\cf22     appname: str = window}\par
{\bkmkstart AAAAAAABIJ}{\bkmkend AAAAAAABIJ}
00031 {\cf22     xpos: int = x}\par
{\bkmkstart AAAAAAABIK}{\bkmkend AAAAAAABIK}
00032 {\cf22     ypos: int = y}\par
{\bkmkstart AAAAAAABIL}{\bkmkend AAAAAAABIL}
00033 {\cf22     }{\cf19 if} width == {\cf18 None}:\par
{\bkmkstart AAAAAAABIM}{\bkmkend AAAAAAABIM}
00034         width: int = int((screensize[0]/10)*9)\par
{\bkmkstart AAAAAAABIN}{\bkmkend AAAAAAABIN}
00035     {\cf19 if} length == {\cf18 None}:\par
{\bkmkstart AAAAAAABIO}{\bkmkend AAAAAAABIO}
00036         length: int = int((screensize[1]/10)*9)\par
{\bkmkstart AAAAAAABIP}{\bkmkend AAAAAAABIP}
00037 \par
{\bkmkstart AAAAAAABIQ}{\bkmkend AAAAAAABIQ}
00038     {\cf17 def }enumHandler(hwnd, lParam):  {\cf20 # type: ignore}\par
{\bkmkstart AAAAAAABIR}{\bkmkend AAAAAAABIR}
00039         {\cf19 if} win32gui.IsWindowVisible(hwnd):  {\cf20 # type: ignore}\par
{\bkmkstart AAAAAAABIS}{\bkmkend AAAAAAABIS}
00040             {\cf19 if} appname {\cf19 in} win32gui.GetWindowText(hwnd):  {\cf20 # type: ignore}\par
{\bkmkstart AAAAAAABIT}{\bkmkend AAAAAAABIT}
00041                 win32gui.MoveWindow(\par
{\bkmkstart AAAAAAABIU}{\bkmkend AAAAAAABIU}
00042                     hwnd, xpos, ypos, width, length, {\cf17 True})  {\cf20 # type: ignore}\par
{\bkmkstart AAAAAAABIV}{\bkmkend AAAAAAABIV}
00043     win32gui.EnumWindows(enumHandler, {\cf18 None})  {\cf20 # type: ignore}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/rapi.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/rapi.py}
{\xe \v final/rapi.py}
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLV" }{}}{\fldrslt {\cs37\ul\cf2 final.rapi.animq}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNE" }{}}{\fldrslt {\cs37\ul\cf2 final.rapi.fanart}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIZ" }{}}{\fldrslt {\cs37\ul\cf2 final.rapi}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKL" }{}}{\fldrslt {\cs37\ul\cf2 final.rapi.download}}}
 (str url, str fname, int chunk_size=1024)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKF" }{}}{\fldrslt {\cs37\ul\cf2 final.rapi.level}}}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKH" }{}}{\fldrslt {\cs37\ul\cf2 final.rapi.format}}}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
rapi.py\par \pard\plain 
{\tc\tcl2 \v final/rapi.py}
{\xe \v final/rapi.py}
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIX" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAABIY}{\bkmkend AAAAAAABIY}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABIZ" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf22 """}\par
{\bkmkstart AAAAAAABJA}{\bkmkend AAAAAAABJA}
00002 {\cf22 API method}\par
{\bkmkstart AAAAAAABJB}{\bkmkend AAAAAAABJB}
00003 {\cf22 }\par
{\bkmkstart AAAAAAABJC}{\bkmkend AAAAAAABJC}
00004 {\cf22 Raises:}\par
{\bkmkstart AAAAAAABJD}{\bkmkend AAAAAAABJD}
00005 {\cf22     ConnectionError: No connection}\par
{\bkmkstart AAAAAAABJE}{\bkmkend AAAAAAABJE}
00006 {\cf22     ValueError: No data available }{\cf17 from} server\par
{\bkmkstart AAAAAAABJF}{\bkmkend AAAAAAABJF}
00007     ValueError: Type mismatch\par
{\bkmkstart AAAAAAABJG}{\bkmkend AAAAAAABJG}
00008     ValueError: Category mismatch\par
{\bkmkstart AAAAAAABJH}{\bkmkend AAAAAAABJH}
00009     ValueError: Category mismatch\par
{\bkmkstart AAAAAAABJI}{\bkmkend AAAAAAABJI}
00010     ConnectionError: No connection\par
{\bkmkstart AAAAAAABJJ}{\bkmkend AAAAAAABJJ}
00011     ConnectionError: No connection\par
{\bkmkstart AAAAAAABJK}{\bkmkend AAAAAAABJK}
00012     ValueError: Server {\cf19 not} found\par
{\bkmkstart AAAAAAABJL}{\bkmkend AAAAAAABJL}
00013     ValueError: Server {\cf19 not} found\par
{\bkmkstart AAAAAAABJM}{\bkmkend AAAAAAABJM}
00014 \par
{\bkmkstart AAAAAAABJN}{\bkmkend AAAAAAABJN}
00015 Returns:\par
{\bkmkstart AAAAAAABJO}{\bkmkend AAAAAAABJO}
00016     _type_: self\par
{\bkmkstart AAAAAAABJP}{\bkmkend AAAAAAABJP}
00017 {\cf22 """}\par
{\bkmkstart AAAAAAABJQ}{\bkmkend AAAAAAABJQ}
00018 {\cf22 }\par
{\bkmkstart AAAAAAABJR}{\bkmkend AAAAAAABJR}
00019 {\cf22 import requests}\par
{\bkmkstart AAAAAAABJS}{\bkmkend AAAAAAABJS}
00020 {\cf22 from tqdm import tqdm}\par
{\bkmkstart AAAAAAABJT}{\bkmkend AAAAAAABJT}
00021 {\cf22 import logging}\par
{\bkmkstart AAAAAAABJU}{\bkmkend AAAAAAABJU}
00022 {\cf22 import os}\par
{\bkmkstart AAAAAAABJV}{\bkmkend AAAAAAABJV}
00023 {\cf22 import moviepy.editor as mp}\par
{\bkmkstart AAAAAAABJW}{\bkmkend AAAAAAABJW}
00024 {\cf22 import vlc}\par
{\bkmkstart AAAAAAABJX}{\bkmkend AAAAAAABJX}
00025 {\cf22 from time import sleep}\par
{\bkmkstart AAAAAAABJY}{\bkmkend AAAAAAABJY}
00026 {\cf22 from PIL import Image}\par
{\bkmkstart AAAAAAABJZ}{\bkmkend AAAAAAABJZ}
00027 {\cf22 import pyautogui as pg}\par
{\bkmkstart AAAAAAABKA}{\bkmkend AAAAAAABKA}
00028 {\cf22 import pygetwindow}\par
{\bkmkstart AAAAAAABKB}{\bkmkend AAAAAAABKB}
00029 {\cf22 import final.pymp4}\par
{\bkmkstart AAAAAAABKC}{\bkmkend AAAAAAABKC}
00030 {\cf22 }\par
{\bkmkstart AAAAAAABKD}{\bkmkend AAAAAAABKD}
00031 {\cf22 }\par
{\bkmkstart AAAAAAABKE}{\bkmkend AAAAAAABKE}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKF" }{}}{\fldrslt {\cs37\ul\cf2 00032}}}
 {\cf22 logging.basicConfig(level=logging.WARNING,}\par
{\bkmkstart AAAAAAABKG}{\bkmkend AAAAAAABKG}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKH" }{}}{\fldrslt {\cs37\ul\cf2 00033}}}
 {\cf22                     format="%(asctime)s - %(levelname)s - %(message)s"})\par
{\bkmkstart AAAAAAABKI}{\bkmkend AAAAAAABKI}
00034 \par
{\bkmkstart AAAAAAABKJ}{\bkmkend AAAAAAABKJ}
00035 \par
{\bkmkstart AAAAAAABKK}{\bkmkend AAAAAAABKK}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKL" }{}}{\fldrslt {\cs37\ul\cf2 00036}}}
 {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABKL" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
(url: str, fname: str, chunk_size: int = 1024) -> bool:\par
{\bkmkstart AAAAAAABKM}{\bkmkend AAAAAAABKM}
00037     {\cf22 """}\par
{\bkmkstart AAAAAAABKN}{\bkmkend AAAAAAABKN}
00038 {\cf22     Download a file }{\cf17 from} a URL to a local file.\par
{\bkmkstart AAAAAAABKO}{\bkmkend AAAAAAABKO}
00039 \par
{\bkmkstart AAAAAAABKP}{\bkmkend AAAAAAABKP}
00040     The first line {\cf19 is} the function{\cf22 's signature. It'}s a single line of code that tells you everything\par
{\bkmkstart AAAAAAABKQ}{\bkmkend AAAAAAABKQ}
00041     you need to know about the function\par
{\bkmkstart AAAAAAABKR}{\bkmkend AAAAAAABKR}
00042 \par
{\bkmkstart AAAAAAABKS}{\bkmkend AAAAAAABKS}
00043     :param url: The URL of the file to download\par
{\bkmkstart AAAAAAABKT}{\bkmkend AAAAAAABKT}
00044     :type url: str\par
{\bkmkstart AAAAAAABKU}{\bkmkend AAAAAAABKU}
00045     :param fname: The name of the file to be downloaded\par
{\bkmkstart AAAAAAABKV}{\bkmkend AAAAAAABKV}
00046     :type fname: str\par
{\bkmkstart AAAAAAABKW}{\bkmkend AAAAAAABKW}
00047     :param chunk_size: The size of the chunks to download, defaults to 1024 (optional)\par
{\bkmkstart AAAAAAABKX}{\bkmkend AAAAAAABKX}
00048     {\cf22 """}\par
{\bkmkstart AAAAAAABKY}{\bkmkend AAAAAAABKY}
00049 {\cf22     }{\cf19 if} os.path.exists(fname):\par
{\bkmkstart AAAAAAABKZ}{\bkmkend AAAAAAABKZ}
00050         logging.warning(\par
{\bkmkstart AAAAAAABLA}{\bkmkend AAAAAAABLA}
00051             {\cf22 'file %s already exists, still downloading and replacing'}, fname)\par
{\bkmkstart AAAAAAABLB}{\bkmkend AAAAAAABLB}
00052     {\cf19 try}:\par
{\bkmkstart AAAAAAABLC}{\bkmkend AAAAAAABLC}
00053         resp = requests.get(url, stream={\cf17 True})\par
{\bkmkstart AAAAAAABLD}{\bkmkend AAAAAAABLD}
00054         total: int = int(resp.headers.get({\cf22 'content-length'}, 0))\par
{\bkmkstart AAAAAAABLE}{\bkmkend AAAAAAABLE}
00055         {\cf17 with} open(fname, {\cf22 'wb'}) {\cf17 as} file, tqdm(\par
{\bkmkstart AAAAAAABLF}{\bkmkend AAAAAAABLF}
00056             desc=fname,\par
{\bkmkstart AAAAAAABLG}{\bkmkend AAAAAAABLG}
00057             total=total,\par
{\bkmkstart AAAAAAABLH}{\bkmkend AAAAAAABLH}
00058             unit={\cf22 'iB'},\par
{\bkmkstart AAAAAAABLI}{\bkmkend AAAAAAABLI}
00059             unit_scale={\cf17 True},\par
{\bkmkstart AAAAAAABLJ}{\bkmkend AAAAAAABLJ}
00060             unit_divisor=1024,\par
{\bkmkstart AAAAAAABLK}{\bkmkend AAAAAAABLK}
00061         ) {\cf17 as} bar:\par
{\bkmkstart AAAAAAABLL}{\bkmkend AAAAAAABLL}
00062             {\cf19 for} data {\cf19 in} resp.iter_content(chunk_size=chunk_size):\par
{\bkmkstart AAAAAAABLM}{\bkmkend AAAAAAABLM}
00063                 size = file.write(data)\par
{\bkmkstart AAAAAAABLN}{\bkmkend AAAAAAABLN}
00064                 bar.update(size)\par
{\bkmkstart AAAAAAABLO}{\bkmkend AAAAAAABLO}
00065     {\cf19 except} ConnectionError:\par
{\bkmkstart AAAAAAABLP}{\bkmkend AAAAAAABLP}
00066         logging.error({\cf22 "Failed to download file: %s"}, fname)\par
{\bkmkstart AAAAAAABLQ}{\bkmkend AAAAAAABLQ}
00067         {\cf19 return} {\cf17 False}\par
{\bkmkstart AAAAAAABLR}{\bkmkend AAAAAAABLR}
00068     {\cf19 return} {\cf17 True}\par
{\bkmkstart AAAAAAABLS}{\bkmkend AAAAAAABLS}
00069 \par
{\bkmkstart AAAAAAABLT}{\bkmkend AAAAAAABLT}
00070 \par
{\bkmkstart AAAAAAABLU}{\bkmkend AAAAAAABLU}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLV" }{}}{\fldrslt {\cs37\ul\cf2 00071}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABLV" }{}}{\fldrslt {\cs37\ul\cf2 animq}}}
:\par
{\bkmkstart AAAAAAABLW}{\bkmkend AAAAAAABLW}
00072     {\cf22 """}\par
{\bkmkstart AAAAAAABLX}{\bkmkend AAAAAAABLX}
00073 {\cf22     Quotes }{\cf17 from} anime\par
{\bkmkstart AAAAAAABLY}{\bkmkend AAAAAAABLY}
00074     {\cf22 """}\par
{\bkmkstart AAAAAAABLZ}{\bkmkend AAAAAAABLZ}
00075 {\cf22 }\par
{\bkmkstart AAAAAAABMA}{\bkmkend AAAAAAABMA}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMB" }{}}{\fldrslt {\cs37\ul\cf2 00076}}}
 {\cf22     }{\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMB" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
(self):\par
{\bkmkstart AAAAAAABMC}{\bkmkend AAAAAAABMC}
00077         {\cf19 try}:\par
{\bkmkstart AAAAAAABMD}{\bkmkend AAAAAAABMD}
00078             self.data: dict[str, str] = requests.get(\par
{\bkmkstart AAAAAAABME}{\bkmkend AAAAAAABME}
00079                 {\cf22 "https://animechan.vercel.app/api/random"}).json()\par
{\bkmkstart AAAAAAABMF}{\bkmkend AAAAAAABMF}
00080         {\cf19 except} requests.exceptions.ConnectionError:\par
{\bkmkstart AAAAAAABMG}{\bkmkend AAAAAAABMG}
00081             logging.error({\cf22 "Connection error"})\par
{\bkmkstart AAAAAAABMH}{\bkmkend AAAAAAABMH}
00082             {\cf19 raise} ConnectionError(\par
{\bkmkstart AAAAAAABMI}{\bkmkend AAAAAAABMI}
00083                 {\cf22 'Make sure you have a connection established'})\par
{\bkmkstart AAAAAAABMJ}{\bkmkend AAAAAAABMJ}
00084         {\cf19 try}:\par
{\bkmkstart AAAAAAABMK}{\bkmkend AAAAAAABMK}
00085             self.anime: str = self.data[{\cf22 "anime"}]\par
{\bkmkstart AAAAAAABML}{\bkmkend AAAAAAABML}
00086             self.character: str = self.data[{\cf22 "character"}]\par
{\bkmkstart AAAAAAABMM}{\bkmkend AAAAAAABMM}
00087             self.quote: str = self.data[{\cf22 "quote"}]\par
{\bkmkstart AAAAAAABMN}{\bkmkend AAAAAAABMN}
00088         {\cf19 except} TypeError:\par
{\bkmkstart AAAAAAABMO}{\bkmkend AAAAAAABMO}
00089             logging.error({\cf22 "No data available"})\par
{\bkmkstart AAAAAAABMP}{\bkmkend AAAAAAABMP}
00090             {\cf19 raise} ValueError({\cf22 'Server returned no data'})\par
{\bkmkstart AAAAAAABMQ}{\bkmkend AAAAAAABMQ}
00091 \par
{\bkmkstart AAAAAAABMR}{\bkmkend AAAAAAABMR}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMS" }{}}{\fldrslt {\cs37\ul\cf2 00092}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABMS" }{}}{\fldrslt {\cs37\ul\cf2 getq}}}
(self):\par
{\bkmkstart AAAAAAABMT}{\bkmkend AAAAAAABMT}
00093         {\cf22 """}\par
{\bkmkstart AAAAAAABMU}{\bkmkend AAAAAAABMU}
00094 {\cf22         The get_anime function returns a string containing the anime, character, }{\cf19 and} quote of the given character.\par
{\bkmkstart AAAAAAABMV}{\bkmkend AAAAAAABMV}
00095 \par
{\bkmkstart AAAAAAABMW}{\bkmkend AAAAAAABMW}
00096         :param self: Access variables that belongs to the {\cf17 class}\par
{\bkmkstart AAAAAAABMX}{\bkmkend AAAAAAABMX}
00097         :{\cf19 return}: A string containing the anime, character {\cf19 and} quote\par
{\bkmkstart AAAAAAABMY}{\bkmkend AAAAAAABMY}
00098         {\cf22 """}\par
{\bkmkstart AAAAAAABMZ}{\bkmkend AAAAAAABMZ}
00099 {\cf22 }\par
{\bkmkstart AAAAAAABNA}{\bkmkend AAAAAAABNA}
00100 {\cf22         }{\cf19 return} {\cf22 "Anime: "} + self.anime + {\cf22 '\\nCharacter: '} + self.character + {\cf22 "\\nQuote: "} + self.quote\par
{\bkmkstart AAAAAAABNB}{\bkmkend AAAAAAABNB}
00101 \par
{\bkmkstart AAAAAAABNC}{\bkmkend AAAAAAABNC}
00102 \par
{\bkmkstart AAAAAAABND}{\bkmkend AAAAAAABND}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNE" }{}}{\fldrslt {\cs37\ul\cf2 00103}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNE" }{}}{\fldrslt {\cs37\ul\cf2 fanart}}}
:\par
{\bkmkstart AAAAAAABNF}{\bkmkend AAAAAAABNF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNG" }{}}{\fldrslt {\cs37\ul\cf2 00104}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABNG" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
(self, server: int = 0, type: str = {\cf22 'sfw'}, category: str = {\cf22 'waifu'}):\par
{\bkmkstart AAAAAAABNH}{\bkmkend AAAAAAABNH}
00105         self.error: list[str] = []\par
{\bkmkstart AAAAAAABNI}{\bkmkend AAAAAAABNI}
00106         servers = [0, 1]\par
{\bkmkstart AAAAAAABNJ}{\bkmkend AAAAAAABNJ}
00107         types = [{\cf22 'sfw'}, {\cf22 'nsfw'}]\par
{\bkmkstart AAAAAAABNK}{\bkmkend AAAAAAABNK}
00108         category_sfw: list[str] = [{\cf22 "waifu"}, {\cf22 "neko"}, {\cf22 "shinobu"}, {\cf22 "megumin"}, {\cf22 "bully"}, {\cf22 "cuddle"}, {\cf22 "cry"}, {\cf22 "hug"}, {\cf22 "awoo"}, {\cf22 "kiss"}, {\cf22 "lick"}, {\cf22 "pat"}, {\cf22 "smug"}, {\cf22 "bonk"}, {\cf22 "yeet"}, {\cf22 "blush"},\par
{\bkmkstart AAAAAAABNL}{\bkmkend AAAAAAABNL}
00109                                    {\cf22 "smile"}, {\cf22 "wave"}, {\cf22 "highfive"}, {\cf22 "handhold"}, {\cf22 "nom"}, {\cf22 "bite"}, {\cf22 "glomp"}, {\cf22 "slap"}, {\cf22 "kill"}, {\cf22 "kick"}, {\cf22 "happy"}, {\cf22 "wink"}, {\cf22 "poke"}, {\cf22 "dance"}, {\cf22 "cringe"}, {\cf22 "back"}]\par
{\bkmkstart AAAAAAABNM}{\bkmkend AAAAAAABNM}
00110         category_nsfw: list[str] = [{\cf22 'waifu'}, {\cf22 'neko'}, {\cf22 'trap'}, {\cf22 'blowjob'}, {\cf22 'back'}]\par
{\bkmkstart AAAAAAABNN}{\bkmkend AAAAAAABNN}
00111         {\cf19 if} {\cf19 not} type {\cf19 in} types:\par
{\bkmkstart AAAAAAABNO}{\bkmkend AAAAAAABNO}
00112             logging.error({\cf22 "Unknown type"})\par
{\bkmkstart AAAAAAABNP}{\bkmkend AAAAAAABNP}
00113             {\cf19 raise} ValueError(f{\cf22 'Type not found \{types\}, given \{type\}'})\par
{\bkmkstart AAAAAAABNQ}{\bkmkend AAAAAAABNQ}
00114         {\cf19 if} type == {\cf22 'sfw'} {\cf19 and} category {\cf19 not} {\cf19 in} category_sfw {\cf19 and} server == 0:\par
{\bkmkstart AAAAAAABNR}{\bkmkend AAAAAAABNR}
00115             logging.error({\cf22 "Unknown category"})\par
{\bkmkstart AAAAAAABNS}{\bkmkend AAAAAAABNS}
00116             {\cf19 if} category {\cf19 in} category_nsfw:\par
{\bkmkstart AAAAAAABNT}{\bkmkend AAAAAAABNT}
00117                 {\cf19 raise} ValueError(f{\cf22 'Category not found, but found in type nsfw'})\par
{\bkmkstart AAAAAAABNU}{\bkmkend AAAAAAABNU}
00118             {\cf19 raise} ValueError(\par
{\bkmkstart AAAAAAABNV}{\bkmkend AAAAAAABNV}
00119                 f{\cf22 'Category not found \{category_sfw\}, given \{category\}'})\par
{\bkmkstart AAAAAAABNW}{\bkmkend AAAAAAABNW}
00120         {\cf19 if} type == {\cf22 'nsfw'} {\cf19 and} category {\cf19 not} {\cf19 in} category_nsfw {\cf19 and} server == 0:\par
{\bkmkstart AAAAAAABNX}{\bkmkend AAAAAAABNX}
00121             logging.error({\cf22 'Unknown category'})\par
{\bkmkstart AAAAAAABNY}{\bkmkend AAAAAAABNY}
00122             {\cf19 if} category {\cf19 in} category_sfw:\par
{\bkmkstart AAAAAAABNZ}{\bkmkend AAAAAAABNZ}
00123                 {\cf19 raise} ValueError(f{\cf22 'Category not found, but found in type sfw'})\par
{\bkmkstart AAAAAAABOA}{\bkmkend AAAAAAABOA}
00124             {\cf19 raise} ValueError(\par
{\bkmkstart AAAAAAABOB}{\bkmkend AAAAAAABOB}
00125                 f{\cf22 'Category not found \{category_nsfw\}, given \{category\}'})\par
{\bkmkstart AAAAAAABOC}{\bkmkend AAAAAAABOC}
00126         {\cf19 if} server == 0:\par
{\bkmkstart AAAAAAABOD}{\bkmkend AAAAAAABOD}
00127             {\cf19 try}:\par
{\bkmkstart AAAAAAABOE}{\bkmkend AAAAAAABOE}
00128                 resp = requests.get(\par
{\bkmkstart AAAAAAABOF}{\bkmkend AAAAAAABOF}
00129                     {\cf22 "https://api.waifu.pics/"} + type + {\cf22 "/"} + category)\par
{\bkmkstart AAAAAAABOG}{\bkmkend AAAAAAABOG}
00130             {\cf19 except} requests.exceptions.ConnectionError:\par
{\bkmkstart AAAAAAABOH}{\bkmkend AAAAAAABOH}
00131                 logging.error({\cf22 "Connection error"})\par
{\bkmkstart AAAAAAABOI}{\bkmkend AAAAAAABOI}
00132                 {\cf19 raise} ConnectionError(\par
{\bkmkstart AAAAAAABOJ}{\bkmkend AAAAAAABOJ}
00133                     {\cf22 'Make sure you have a connection established'})\par
{\bkmkstart AAAAAAABOK}{\bkmkend AAAAAAABOK}
00134             self.data: dict[str, str] = resp.json()\par
{\bkmkstart AAAAAAABOL}{\bkmkend AAAAAAABOL}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOM" }{}}{\fldrslt {\cs37\ul\cf2 00135}}}
             self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOM" }{}}{\fldrslt {\cs37\ul\cf2 res}}}
 = requests.get(self.data[{\cf22 "url"}], stream={\cf17 True})\par
{\bkmkstart AAAAAAABON}{\bkmkend AAAAAAABON}
00136         {\cf19 elif} server == 1:\par
{\bkmkstart AAAAAAABOO}{\bkmkend AAAAAAABOO}
00137             {\cf19 try}:\par
{\bkmkstart AAAAAAABOP}{\bkmkend AAAAAAABOP}
00138                 resp = requests.get({\cf22 "https://nekos.best/api/v2/neko"})\par
{\bkmkstart AAAAAAABOQ}{\bkmkend AAAAAAABOQ}
00139             {\cf19 except} requests.exceptions.ConnectionError:\par
{\bkmkstart AAAAAAABOR}{\bkmkend AAAAAAABOR}
00140                 logging.error({\cf22 "Connection error"})\par
{\bkmkstart AAAAAAABOS}{\bkmkend AAAAAAABOS}
00141                 {\cf19 raise} ConnectionError(\par
{\bkmkstart AAAAAAABOT}{\bkmkend AAAAAAABOT}
00142                     {\cf22 'Make sure you have a connection established'})\par
{\bkmkstart AAAAAAABOU}{\bkmkend AAAAAAABOU}
00143             self.data: dict[str, str] = resp.json()\par
{\bkmkstart AAAAAAABOV}{\bkmkend AAAAAAABOV}
00144             self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOM" }{}}{\fldrslt {\cs37\ul\cf2 res}}}
 = requests.get(\par
{\bkmkstart AAAAAAABOW}{\bkmkend AAAAAAABOW}
00145                 self.data[{\cf22 "results"}][0][{\cf22 "url"}], stream={\cf17 True})  {\cf20 # type: ignore}\par
{\bkmkstart AAAAAAABOX}{\bkmkend AAAAAAABOX}
00146             {\cf19 if} type != {\cf22 'sfw'} {\cf19 or} category != {\cf22 'waifu'}:\par
{\bkmkstart AAAAAAABOY}{\bkmkend AAAAAAABOY}
00147                 logging.warning({\cf22 "Type and category not supported on server 1"})\par
{\bkmkstart AAAAAAABOZ}{\bkmkend AAAAAAABOZ}
00148                 self.error.append(\par
{\bkmkstart AAAAAAABPA}{\bkmkend AAAAAAABPA}
00149                     f{\cf22 'type or category not supported on this server, given \{server\}'})\par
{\bkmkstart AAAAAAABPB}{\bkmkend AAAAAAABPB}
00150         {\cf19 else}:\par
{\bkmkstart AAAAAAABPC}{\bkmkend AAAAAAABPC}
00151             {\cf19 raise} ValueError(f{\cf22 "Server not found: \{servers\}, given \{server\}"})\par
{\bkmkstart AAAAAAABPD}{\bkmkend AAAAAAABPD}
00152         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOM" }{}}{\fldrslt {\cs37\ul\cf2 res}}}
.status_code == 200:\par
{\bkmkstart AAAAAAABPE}{\bkmkend AAAAAAABPE}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPF" }{}}{\fldrslt {\cs37\ul\cf2 00153}}}
             self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPF" }{}}{\fldrslt {\cs37\ul\cf2 server}}}
 = server\par
{\bkmkstart AAAAAAABPG}{\bkmkend AAAAAAABPG}
00154 \par
{\bkmkstart AAAAAAABPH}{\bkmkend AAAAAAABPH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPI" }{}}{\fldrslt {\cs37\ul\cf2 00155}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPI" }{}}{\fldrslt {\cs37\ul\cf2 get_new}}}
(self, server: int = 0, type: str = {\cf22 'sfw'}, category: str = {\cf22 'waifu'}):\par
{\bkmkstart AAAAAAABPJ}{\bkmkend AAAAAAABPJ}
00156         servers = [0, 1]\par
{\bkmkstart AAAAAAABPK}{\bkmkend AAAAAAABPK}
00157         types = [{\cf22 'sfw'}, {\cf22 'nsfw'}]\par
{\bkmkstart AAAAAAABPL}{\bkmkend AAAAAAABPL}
00158         category_sfw: list[str] = [{\cf22 "waifu"}, {\cf22 "neko"}, {\cf22 "shinobu"}, {\cf22 "megumin"}, {\cf22 "bully"}, {\cf22 "cuddle"}, {\cf22 "cry"}, {\cf22 "hug"}, {\cf22 "awoo"}, {\cf22 "kiss"}, {\cf22 "lick"}, {\cf22 "pat"}, {\cf22 "smug"}, {\cf22 "bonk"}, {\cf22 "yeet"}, {\cf22 "blush"},\par
{\bkmkstart AAAAAAABPM}{\bkmkend AAAAAAABPM}
00159                                    {\cf22 "smile"}, {\cf22 "wave"}, {\cf22 "highfive"}, {\cf22 "handhold"}, {\cf22 "nom"}, {\cf22 "bite"}, {\cf22 "glomp"}, {\cf22 "slap"}, {\cf22 "kill"}, {\cf22 "kick"}, {\cf22 "happy"}, {\cf22 "wink"}, {\cf22 "poke"}, {\cf22 "dance"}, {\cf22 "cringe"}, {\cf22 "back"}]\par
{\bkmkstart AAAAAAABPN}{\bkmkend AAAAAAABPN}
00160         category_nsfw: list[str] = [{\cf22 'waifu'}, {\cf22 'neko'}, {\cf22 'trap'}, {\cf22 'blowjob'}, {\cf22 'back'}]\par
{\bkmkstart AAAAAAABPO}{\bkmkend AAAAAAABPO}
00161         {\cf19 if} {\cf19 not} type {\cf19 in} types:\par
{\bkmkstart AAAAAAABPP}{\bkmkend AAAAAAABPP}
00162             logging.error({\cf22 "Unknown type"})\par
{\bkmkstart AAAAAAABPQ}{\bkmkend AAAAAAABPQ}
00163             {\cf19 raise} ValueError(f{\cf22 'Type not found \{types\}, given \{type\}'})\par
{\bkmkstart AAAAAAABPR}{\bkmkend AAAAAAABPR}
00164         {\cf19 if} type == {\cf22 'sfw'} {\cf19 and} category {\cf19 not} {\cf19 in} category_sfw {\cf19 and} server == 0:\par
{\bkmkstart AAAAAAABPS}{\bkmkend AAAAAAABPS}
00165             logging.error({\cf22 "Unknown category"})\par
{\bkmkstart AAAAAAABPT}{\bkmkend AAAAAAABPT}
00166             {\cf19 if} category {\cf19 in} category_nsfw:\par
{\bkmkstart AAAAAAABPU}{\bkmkend AAAAAAABPU}
00167                 {\cf19 raise} ValueError(f{\cf22 'Category not found, but found in type nsfw'})\par
{\bkmkstart AAAAAAABPV}{\bkmkend AAAAAAABPV}
00168             {\cf19 raise} ValueError(\par
{\bkmkstart AAAAAAABPW}{\bkmkend AAAAAAABPW}
00169                 f{\cf22 'Category not found \{category_sfw\}, given \{category\}'})\par
{\bkmkstart AAAAAAABPX}{\bkmkend AAAAAAABPX}
00170         {\cf19 if} type == {\cf22 'nsfw'} {\cf19 and} category {\cf19 not} {\cf19 in} category_nsfw {\cf19 and} server == 0:\par
{\bkmkstart AAAAAAABPY}{\bkmkend AAAAAAABPY}
00171             logging.error({\cf22 'Unknown category'})\par
{\bkmkstart AAAAAAABPZ}{\bkmkend AAAAAAABPZ}
00172             {\cf19 if} category {\cf19 in} category_sfw:\par
{\bkmkstart AAAAAAABQA}{\bkmkend AAAAAAABQA}
00173                 {\cf19 raise} ValueError(f{\cf22 'Category not found, but found in type sfw'})\par
{\bkmkstart AAAAAAABQB}{\bkmkend AAAAAAABQB}
00174             {\cf19 raise} ValueError(\par
{\bkmkstart AAAAAAABQC}{\bkmkend AAAAAAABQC}
00175                 f{\cf22 'Category not found \{category_nsfw\}, given \{category\}'})\par
{\bkmkstart AAAAAAABQD}{\bkmkend AAAAAAABQD}
00176         {\cf19 if} server == 0:\par
{\bkmkstart AAAAAAABQE}{\bkmkend AAAAAAABQE}
00177             {\cf19 try}:\par
{\bkmkstart AAAAAAABQF}{\bkmkend AAAAAAABQF}
00178                 resp = requests.get(\par
{\bkmkstart AAAAAAABQG}{\bkmkend AAAAAAABQG}
00179                     {\cf22 "https://api.waifu.pics/"} + type + {\cf22 "/"} + category)\par
{\bkmkstart AAAAAAABQH}{\bkmkend AAAAAAABQH}
00180             {\cf19 except} requests.exceptions.ConnectionError:\par
{\bkmkstart AAAAAAABQI}{\bkmkend AAAAAAABQI}
00181                 logging.error({\cf22 "Connection error"})\par
{\bkmkstart AAAAAAABQJ}{\bkmkend AAAAAAABQJ}
00182                 {\cf19 raise} ConnectionError(\par
{\bkmkstart AAAAAAABQK}{\bkmkend AAAAAAABQK}
00183                     {\cf22 'Make sure you have a connection established'})\par
{\bkmkstart AAAAAAABQL}{\bkmkend AAAAAAABQL}
00184             self.data: dict[str, str] = resp.json()\par
{\bkmkstart AAAAAAABQM}{\bkmkend AAAAAAABQM}
00185             self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOM" }{}}{\fldrslt {\cs37\ul\cf2 res}}}
 = requests.get(self.data[{\cf22 "url"}], stream={\cf17 True})\par
{\bkmkstart AAAAAAABQN}{\bkmkend AAAAAAABQN}
00186         {\cf19 elif} server == 1:\par
{\bkmkstart AAAAAAABQO}{\bkmkend AAAAAAABQO}
00187             {\cf19 try}:\par
{\bkmkstart AAAAAAABQP}{\bkmkend AAAAAAABQP}
00188                 resp = requests.get({\cf22 "https://nekos.best/api/v2/neko"})\par
{\bkmkstart AAAAAAABQQ}{\bkmkend AAAAAAABQQ}
00189             {\cf19 except} requests.exceptions.ConnectionError:\par
{\bkmkstart AAAAAAABQR}{\bkmkend AAAAAAABQR}
00190                 logging.error({\cf22 "Connection error"})\par
{\bkmkstart AAAAAAABQS}{\bkmkend AAAAAAABQS}
00191                 {\cf19 raise} ConnectionError(\par
{\bkmkstart AAAAAAABQT}{\bkmkend AAAAAAABQT}
00192                     {\cf22 'Make sure you have a connection established'})\par
{\bkmkstart AAAAAAABQU}{\bkmkend AAAAAAABQU}
00193             self.data: dict[str, str] = resp.json()\par
{\bkmkstart AAAAAAABQV}{\bkmkend AAAAAAABQV}
00194             self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOM" }{}}{\fldrslt {\cs37\ul\cf2 res}}}
 = requests.get(\par
{\bkmkstart AAAAAAABQW}{\bkmkend AAAAAAABQW}
00195                 self.data[{\cf22 "results"}][0][{\cf22 "url"}], stream={\cf17 True})  {\cf20 # type: ignore}\par
{\bkmkstart AAAAAAABQX}{\bkmkend AAAAAAABQX}
00196             {\cf19 if} type != {\cf22 'sfw'} {\cf19 or} category != {\cf22 'waifu'}:\par
{\bkmkstart AAAAAAABQY}{\bkmkend AAAAAAABQY}
00197                 logging.warning({\cf22 "Type and category not supported on server 1"})\par
{\bkmkstart AAAAAAABQZ}{\bkmkend AAAAAAABQZ}
00198                 self.error.append(\par
{\bkmkstart AAAAAAABRA}{\bkmkend AAAAAAABRA}
00199                     f{\cf22 'type or category not supported on this server, given \{server\}'})\par
{\bkmkstart AAAAAAABRB}{\bkmkend AAAAAAABRB}
00200         {\cf19 else}:\par
{\bkmkstart AAAAAAABRC}{\bkmkend AAAAAAABRC}
00201             {\cf19 raise} ValueError(f{\cf22 "Server not found: \{servers\}, given \{server\}"})\par
{\bkmkstart AAAAAAABRD}{\bkmkend AAAAAAABRD}
00202         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOM" }{}}{\fldrslt {\cs37\ul\cf2 res}}}
.status_code == 200:\par
{\bkmkstart AAAAAAABRE}{\bkmkend AAAAAAABRE}
00203             self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPF" }{}}{\fldrslt {\cs37\ul\cf2 server}}}
 = server\par
{\bkmkstart AAAAAAABRF}{\bkmkend AAAAAAABRF}
00204         {\cf19 return} self\par
{\bkmkstart AAAAAAABRG}{\bkmkend AAAAAAABRG}
00205 \par
{\bkmkstart AAAAAAABRH}{\bkmkend AAAAAAABRH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRI" }{}}{\fldrslt {\cs37\ul\cf2 00206}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRI" }{}}{\fldrslt {\cs37\ul\cf2 get_error}}}
(self):\par
{\bkmkstart AAAAAAABRJ}{\bkmkend AAAAAAABRJ}
00207         {\cf22 """}\par
{\bkmkstart AAAAAAABRK}{\bkmkend AAAAAAABRK}
00208 {\cf22         The get_error function returns the error of the current state.}\par
{\bkmkstart AAAAAAABRL}{\bkmkend AAAAAAABRL}
00209 {\cf22 }\par
{\bkmkstart AAAAAAABRM}{\bkmkend AAAAAAABRM}
00210 {\cf22         :param self: Refer to the object itself}\par
{\bkmkstart AAAAAAABRN}{\bkmkend AAAAAAABRN}
00211 {\cf22         :}{\cf19 return}: The error of the neuron\par
{\bkmkstart AAAAAAABRO}{\bkmkend AAAAAAABRO}
00212         {\cf22 """}\par
{\bkmkstart AAAAAAABRP}{\bkmkend AAAAAAABRP}
00213 {\cf22         }{\cf19 return} self.error\par
{\bkmkstart AAAAAAABRQ}{\bkmkend AAAAAAABRQ}
00214 \par
{\bkmkstart AAAAAAABRR}{\bkmkend AAAAAAABRR}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRS" }{}}{\fldrslt {\cs37\ul\cf2 00215}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABRS" }{}}{\fldrslt {\cs37\ul\cf2 get_url}}}
(self):\par
{\bkmkstart AAAAAAABRT}{\bkmkend AAAAAAABRT}
00216         {\cf22 """}\par
{\bkmkstart AAAAAAABRU}{\bkmkend AAAAAAABRU}
00217 {\cf22         The get_url function returns the URL of a given search result.}\par
{\bkmkstart AAAAAAABRV}{\bkmkend AAAAAAABRV}
00218 {\cf22         If there }{\cf19 is} no server specified, it will {\cf19 return} the URL {\cf17 from} the \par
{\bkmkstart AAAAAAABRW}{\bkmkend AAAAAAABRW}
00219         first search result {\cf19 in} self.data[&quot;results&quot;]. If there {\cf19 is} a server \par
{\bkmkstart AAAAAAABRX}{\bkmkend AAAAAAABRX}
00220         specified, it will {\cf19 return} the URL {\cf17 from} that specific search result.\par
{\bkmkstart AAAAAAABRY}{\bkmkend AAAAAAABRY}
00221 \par
{\bkmkstart AAAAAAABRZ}{\bkmkend AAAAAAABRZ}
00222         :param self: Reference the object itself\par
{\bkmkstart AAAAAAABSA}{\bkmkend AAAAAAABSA}
00223         :{\cf19 return}: The url of the first search result\par
{\bkmkstart AAAAAAABSB}{\bkmkend AAAAAAABSB}
00224         {\cf22 """}\par
{\bkmkstart AAAAAAABSC}{\bkmkend AAAAAAABSC}
00225 {\cf22         }{\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPF" }{}}{\fldrslt {\cs37\ul\cf2 server}}}
 == 0:\par
{\bkmkstart AAAAAAABSD}{\bkmkend AAAAAAABSD}
00226             {\cf19 return} self.data[{\cf22 "url"}]\par
{\bkmkstart AAAAAAABSE}{\bkmkend AAAAAAABSE}
00227         {\cf19 elif} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPF" }{}}{\fldrslt {\cs37\ul\cf2 server}}}
 == 1:\par
{\bkmkstart AAAAAAABSF}{\bkmkend AAAAAAABSF}
00228             {\cf19 return} self.data[{\cf22 "results"}][0][{\cf22 "url"}]  {\cf20 # type: ignore}\par
{\bkmkstart AAAAAAABSG}{\bkmkend AAAAAAABSG}
00229 \par
{\bkmkstart AAAAAAABSH}{\bkmkend AAAAAAABSH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 00230}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSI" }{}}{\fldrslt {\cs37\ul\cf2 get_data}}}
(self):\par
{\bkmkstart AAAAAAABSJ}{\bkmkend AAAAAAABSJ}
00231         {\cf22 """}\par
{\bkmkstart AAAAAAABSK}{\bkmkend AAAAAAABSK}
00232 {\cf22         The get_data function returns the data stored }{\cf19 in} the object. If no data {\cf19 is} present, it will {\cf19 return} {\cf18 None}.\par
{\bkmkstart AAAAAAABSL}{\bkmkend AAAAAAABSL}
00233 \par
{\bkmkstart AAAAAAABSM}{\bkmkend AAAAAAABSM}
00234         :param self: Access variables that belongs to the {\cf17 class}\par
{\bkmkstart AAAAAAABSN}{\bkmkend AAAAAAABSN}
00235         :{\cf19 return}: The data attribute of the object\par
{\bkmkstart AAAAAAABSO}{\bkmkend AAAAAAABSO}
00236         {\cf22 """}\par
{\bkmkstart AAAAAAABSP}{\bkmkend AAAAAAABSP}
00237 {\cf22         }{\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPF" }{}}{\fldrslt {\cs37\ul\cf2 server}}}
 == 0:\par
{\bkmkstart AAAAAAABSQ}{\bkmkend AAAAAAABSQ}
00238             {\cf19 return} self.data\par
{\bkmkstart AAAAAAABSR}{\bkmkend AAAAAAABSR}
00239         {\cf19 elif} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPF" }{}}{\fldrslt {\cs37\ul\cf2 server}}}
 == 1:\par
{\bkmkstart AAAAAAABSS}{\bkmkend AAAAAAABSS}
00240             {\cf19 return} self.data\par
{\bkmkstart AAAAAAABST}{\bkmkend AAAAAAABST}
00241 \par
{\bkmkstart AAAAAAABSU}{\bkmkend AAAAAAABSU}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSV" }{}}{\fldrslt {\cs37\ul\cf2 00242}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSV" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
(self, filename: str = {\cf22 'image.png'}, destination: str = {\cf22 '.\\\\'}):\par
{\bkmkstart AAAAAAABSW}{\bkmkend AAAAAAABSW}
00243         {\cf22 """}\par
{\bkmkstart AAAAAAABSX}{\bkmkend AAAAAAABSX}
00244 {\cf22         The download function downloads the image }{\cf17 from} the url {\cf19 and} saves it to a specified location.\par
{\bkmkstart AAAAAAABSY}{\bkmkend AAAAAAABSY}
00245         The function takes two arguments, filename {\cf19 and} destination. \par
{\bkmkstart AAAAAAABSZ}{\bkmkend AAAAAAABSZ}
00246         If no filename {\cf19 is} given, then {\cf22 'image.png'} will be used {\cf17 as} default value {\cf19 for} the file name argument. \par
{\bkmkstart AAAAAAABTA}{\bkmkend AAAAAAABTA}
00247         If no destination {\cf19 is} given, then current working directory will be used {\cf17 as} default value {\cf19 for} the destination argument.\par
{\bkmkstart AAAAAAABTB}{\bkmkend AAAAAAABTB}
00248 \par
{\bkmkstart AAAAAAABTC}{\bkmkend AAAAAAABTC}
00249         :param self: Access variables that belongs to the {\cf17 class}\par
{\bkmkstart AAAAAAABTD}{\bkmkend AAAAAAABTD}
00250         :param filename: str: Specify the name of the file that will be downloaded\par
{\bkmkstart AAAAAAABTE}{\bkmkend AAAAAAABTE}
00251         :param destination: str: Specify the directory where the image {\cf19 is} to be saved\par
{\bkmkstart AAAAAAABTF}{\bkmkend AAAAAAABTF}
00252         :{\cf19 return}: The filename of the image\par
{\bkmkstart AAAAAAABTG}{\bkmkend AAAAAAABTG}
00253         {\cf22 """}\par
{\bkmkstart AAAAAAABTH}{\bkmkend AAAAAAABTH}
00254 {\cf22         }{\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABOM" }{}}{\fldrslt {\cs37\ul\cf2 res}}}
.status_code == 200:\par
{\bkmkstart AAAAAAABTI}{\bkmkend AAAAAAABTI}
00255             {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPF" }{}}{\fldrslt {\cs37\ul\cf2 server}}}
 == 0:\par
{\bkmkstart AAAAAAABTJ}{\bkmkend AAAAAAABTJ}
00256                 {\cf19 if} self.data[{\cf22 "url"}].split({\cf22 '.'})[-1] == {\cf22 'gif'}:\par
{\bkmkstart AAAAAAABTK}{\bkmkend AAAAAAABTK}
00257                     logging.info({\cf22 "Downloading image as gif"})\par
{\bkmkstart AAAAAAABTL}{\bkmkend AAAAAAABTL}
00258                     filename = destination + \\\par
{\bkmkstart AAAAAAABTM}{\bkmkend AAAAAAABTM}
00259                         str(filename.split({\cf22 '.'})[0:-1][0]) + {\cf22 '.gif'}\par
{\bkmkstart AAAAAAABTN}{\bkmkend AAAAAAABTN}
00260                     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSV" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
(self.data[{\cf22 'url'}], filename)\par
{\bkmkstart AAAAAAABTO}{\bkmkend AAAAAAABTO}
00261                 {\cf19 else}:\par
{\bkmkstart AAAAAAABTP}{\bkmkend AAAAAAABTP}
00262                     filename = destination + filename\par
{\bkmkstart AAAAAAABTQ}{\bkmkend AAAAAAABTQ}
00263                     {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSV" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
(self.data[{\cf22 'url'}], filename)\par
{\bkmkstart AAAAAAABTR}{\bkmkend AAAAAAABTR}
00264             {\cf19 elif} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABPF" }{}}{\fldrslt {\cs37\ul\cf2 server}}}
 == 1:\par
{\bkmkstart AAAAAAABTS}{\bkmkend AAAAAAABTS}
00265                 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABSV" }{}}{\fldrslt {\cs37\ul\cf2 download}}}
(self.data[{\cf22 "results"}][0][{\cf22 "url"}],  {\cf20 # type: ignore}\par
{\bkmkstart AAAAAAABTT}{\bkmkend AAAAAAABTT}
00266                          destination + filename)\par
{\bkmkstart AAAAAAABTU}{\bkmkend AAAAAAABTU}
00267             {\cf19 else}:\par
{\bkmkstart AAAAAAABTV}{\bkmkend AAAAAAABTV}
00268                 logging.error({\cf22 'Server not found'})\par
{\bkmkstart AAAAAAABTW}{\bkmkend AAAAAAABTW}
00269                 {\cf19 raise} ValueError({\cf22 'Server not found'})\par
{\bkmkstart AAAAAAABTX}{\bkmkend AAAAAAABTX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 00270}}}
             self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
 = filename\par
{\bkmkstart AAAAAAABTZ}{\bkmkend AAAAAAABTZ}
00271             {\cf19 return} self\par
{\bkmkstart AAAAAAABUA}{\bkmkend AAAAAAABUA}
00272         {\cf19 return} self\par
{\bkmkstart AAAAAAABUB}{\bkmkend AAAAAAABUB}
00273 \par
{\bkmkstart AAAAAAABUC}{\bkmkend AAAAAAABUC}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUD" }{}}{\fldrslt {\cs37\ul\cf2 00274}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUD" }{}}{\fldrslt {\cs37\ul\cf2 show}}}
(self, side: str = {\cf22 'right'}):\par
{\bkmkstart AAAAAAABUE}{\bkmkend AAAAAAABUE}
00275         {\cf22 """}\par
{\bkmkstart AAAAAAABUF}{\bkmkend AAAAAAABUF}
00276 {\cf22         The show function }{\cf19 is} used to display the image. It takes a single argument, side, which defaults to right.\par
{\bkmkstart AAAAAAABUG}{\bkmkend AAAAAAABUG}
00277         The show function will open the image {\cf19 in} Windows Photo Viewer {\cf19 and} then play it {\cf19 in} VLC media player.\par
{\bkmkstart AAAAAAABUH}{\bkmkend AAAAAAABUH}
00278 \par
{\bkmkstart AAAAAAABUI}{\bkmkend AAAAAAABUI}
00279         :param self: Access variables that belongs to the {\cf17 class}\par
{\bkmkstart AAAAAAABUJ}{\bkmkend AAAAAAABUJ}
00280         :param side: str: Specify which side of the screen to show the image on\par
{\bkmkstart AAAAAAABUK}{\bkmkend AAAAAAABUK}
00281         :{\cf19 return}: The object itself\par
{\bkmkstart AAAAAAABUL}{\bkmkend AAAAAAABUL}
00282         {\cf22 """}\par
{\bkmkstart AAAAAAABUM}{\bkmkend AAAAAAABUM}
00283 {\cf22         }{\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
.split({\cf22 '.'})[-1] == {\cf22 'gif'}:\par
{\bkmkstart AAAAAAABUN}{\bkmkend AAAAAAABUN}
00284             {\cf19 if} os.path.exists(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
):\par
{\bkmkstart AAAAAAABUO}{\bkmkend AAAAAAABUO}
00285                 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABGC" }{}}{\fldrslt {\cs37\ul\cf2 final.pymp4.video}}}
(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
).g2v()\par
{\bkmkstart AAAAAAABUP}{\bkmkend AAAAAAABUP}
00286                 os.remove(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
)\par
{\bkmkstart AAAAAAABUQ}{\bkmkend AAAAAAABUQ}
00287             {\cf19 if} os.path.exists({\cf22 '.'} + self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
.split({\cf22 '.'})[0:-1][1] + {\cf22 '.mp4'}):\par
{\bkmkstart AAAAAAABUR}{\bkmkend AAAAAAABUR}
00288                 player = vlc.Instance({\cf22 '--input-repeat=999999'})\par
{\bkmkstart AAAAAAABUS}{\bkmkend AAAAAAABUS}
00289                 media_list = player.media_list_new()  {\cf20 # type: ignore}\par
{\bkmkstart AAAAAAABUT}{\bkmkend AAAAAAABUT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUU" }{}}{\fldrslt {\cs37\ul\cf2 00290}}}
                 self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUU" }{}}{\fldrslt {\cs37\ul\cf2 media_player}}}
 = player.media_list_player_new()  {\cf20 # type: ignore}\par
{\bkmkstart AAAAAAABUV}{\bkmkend AAAAAAABUV}
00291                 media = player.media_new(  {\cf20 # type: ignore}\par
{\bkmkstart AAAAAAABUW}{\bkmkend AAAAAAABUW}
00292                     {\cf22 '.'} + self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
.split({\cf22 '.'})[0:-1][1] + {\cf22 '.mp4'})\par
{\bkmkstart AAAAAAABUX}{\bkmkend AAAAAAABUX}
00293                 media_list.add_media(media)\par
{\bkmkstart AAAAAAABUY}{\bkmkend AAAAAAABUY}
00294                 self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUU" }{}}{\fldrslt {\cs37\ul\cf2 media_player}}}
.set_media_list(media_list)\par
{\bkmkstart AAAAAAABUZ}{\bkmkend AAAAAAABUZ}
00295                 player.vlm_set_loop({\cf22 "video"}, {\cf17 True})  {\cf20 # type: ignore}\par
{\bkmkstart AAAAAAABVA}{\bkmkend AAAAAAABVA}
00296                 self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUU" }{}}{\fldrslt {\cs37\ul\cf2 media_player}}}
.play()\par
{\bkmkstart AAAAAAABVB}{\bkmkend AAAAAAABVB}
00297                 sleep(0.4)\par
{\bkmkstart AAAAAAABVC}{\bkmkend AAAAAAABVC}
00298                 window = pygetwindow.getWindowsWithTitle(\par
{\bkmkstart AAAAAAABVD}{\bkmkend AAAAAAABVD}
00299                     {\cf22 'VLC (Direct3D11 Output)'})[0]\par
{\bkmkstart AAAAAAABVE}{\bkmkend AAAAAAABVE}
00300                 window.activate()\par
{\bkmkstart AAAAAAABVF}{\bkmkend AAAAAAABVF}
00301                 pg.keyDown({\cf22 'win'})\par
{\bkmkstart AAAAAAABVG}{\bkmkend AAAAAAABVG}
00302                 pg.press(side)\par
{\bkmkstart AAAAAAABVH}{\bkmkend AAAAAAABVH}
00303                 pg.keyUp({\cf22 'win'})\par
{\bkmkstart AAAAAAABVI}{\bkmkend AAAAAAABVI}
00304                 pg.press({\cf22 'esc'})\par
{\bkmkstart AAAAAAABVJ}{\bkmkend AAAAAAABVJ}
00305                 sleep(0.25)\par
{\bkmkstart AAAAAAABVK}{\bkmkend AAAAAAABVK}
00306                 pg.keyDown({\cf22 'alt'})\par
{\bkmkstart AAAAAAABVL}{\bkmkend AAAAAAABVL}
00307                 pg.press({\cf22 'tab'})\par
{\bkmkstart AAAAAAABVM}{\bkmkend AAAAAAABVM}
00308                 pg.keyUp({\cf22 'alt'})\par
{\bkmkstart AAAAAAABVN}{\bkmkend AAAAAAABVN}
00309                 sleep(1)\par
{\bkmkstart AAAAAAABVO}{\bkmkend AAAAAAABVO}
00310             {\cf19 else}:\par
{\bkmkstart AAAAAAABVP}{\bkmkend AAAAAAABVP}
00311                 logging.error({\cf22 'File not found'})\par
{\bkmkstart AAAAAAABVQ}{\bkmkend AAAAAAABVQ}
00312         {\cf19 else}:\par
{\bkmkstart AAAAAAABVR}{\bkmkend AAAAAAABVR}
00313             img = Image.open(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
)\par
{\bkmkstart AAAAAAABVS}{\bkmkend AAAAAAABVS}
00314             img.show()\par
{\bkmkstart AAAAAAABVT}{\bkmkend AAAAAAABVT}
00315             pg.keyDown({\cf22 'win'})\par
{\bkmkstart AAAAAAABVU}{\bkmkend AAAAAAABVU}
00316             pg.press({\cf22 'right'})\par
{\bkmkstart AAAAAAABVV}{\bkmkend AAAAAAABVV}
00317             pg.keyUp({\cf22 'win'})\par
{\bkmkstart AAAAAAABVW}{\bkmkend AAAAAAABVW}
00318             pg.press({\cf22 'esc'})\par
{\bkmkstart AAAAAAABVX}{\bkmkend AAAAAAABVX}
00319             sleep(0.25)\par
{\bkmkstart AAAAAAABVY}{\bkmkend AAAAAAABVY}
00320             pg.keyDown({\cf22 'alt'})\par
{\bkmkstart AAAAAAABVZ}{\bkmkend AAAAAAABVZ}
00321             pg.press({\cf22 'tab'})\par
{\bkmkstart AAAAAAABWA}{\bkmkend AAAAAAABWA}
00322             pg.keyUp({\cf22 'alt'})\par
{\bkmkstart AAAAAAABWB}{\bkmkend AAAAAAABWB}
00323         {\cf19 return} self\par
{\bkmkstart AAAAAAABWC}{\bkmkend AAAAAAABWC}
00324 \par
{\bkmkstart AAAAAAABWD}{\bkmkend AAAAAAABWD}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWE" }{}}{\fldrslt {\cs37\ul\cf2 00325}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABWE" }{}}{\fldrslt {\cs37\ul\cf2 hide}}}
(self, delete: bool = {\cf17 True}):\par
{\bkmkstart AAAAAAABWF}{\bkmkend AAAAAAABWF}
00326         {\cf22 """}\par
{\bkmkstart AAAAAAABWG}{\bkmkend AAAAAAABWG}
00327 {\cf22         The hide function hides the image }{\cf19 or} video.\par
{\bkmkstart AAAAAAABWH}{\bkmkend AAAAAAABWH}
00328 \par
{\bkmkstart AAAAAAABWI}{\bkmkend AAAAAAABWI}
00329         :param self: Access the {\cf17 class }attributes\par
{\bkmkstart AAAAAAABWJ}{\bkmkend AAAAAAABWJ}
00330         :{\cf19 return}: {\cf18 None}\par
{\bkmkstart AAAAAAABWK}{\bkmkend AAAAAAABWK}
00331         {\cf22 """}\par
{\bkmkstart AAAAAAABWL}{\bkmkend AAAAAAABWL}
00332 {\cf22         }{\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
.split({\cf22 '.'})[-1] == {\cf22 'gif'}:\par
{\bkmkstart AAAAAAABWM}{\bkmkend AAAAAAABWM}
00333             self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABUU" }{}}{\fldrslt {\cs37\ul\cf2 media_player}}}
.stop()  {\cf20 # type: ignore}\par
{\bkmkstart AAAAAAABWN}{\bkmkend AAAAAAABWN}
00334             sleep(0.1)\par
{\bkmkstart AAAAAAABWO}{\bkmkend AAAAAAABWO}
00335             {\cf19 if} delete:\par
{\bkmkstart AAAAAAABWP}{\bkmkend AAAAAAABWP}
00336                 os.remove({\cf22 '.'} + self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
.split({\cf22 '.'})[0:-1][1] + {\cf22 '.mp4'})\par
{\bkmkstart AAAAAAABWQ}{\bkmkend AAAAAAABWQ}
00337         {\cf19 else}:\par
{\bkmkstart AAAAAAABWR}{\bkmkend AAAAAAABWR}
00338             pg.keyDown({\cf22 'alt'})\par
{\bkmkstart AAAAAAABWS}{\bkmkend AAAAAAABWS}
00339             pg.press({\cf22 'tab'})\par
{\bkmkstart AAAAAAABWT}{\bkmkend AAAAAAABWT}
00340             pg.keyUp({\cf22 'alt'})\par
{\bkmkstart AAAAAAABWU}{\bkmkend AAAAAAABWU}
00341             pg.keyDown({\cf22 'alt'})\par
{\bkmkstart AAAAAAABWV}{\bkmkend AAAAAAABWV}
00342             pg.press({\cf22 'f4'})\par
{\bkmkstart AAAAAAABWW}{\bkmkend AAAAAAABWW}
00343             pg.keyUp({\cf22 'alt'})\par
{\bkmkstart AAAAAAABWX}{\bkmkend AAAAAAABWX}
00344             {\cf19 if} delete:\par
{\bkmkstart AAAAAAABWY}{\bkmkend AAAAAAABWY}
00345                 os.remove(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABTY" }{}}{\fldrslt {\cs37\ul\cf2 filename}}}
)\par
{\bkmkstart AAAAAAABWZ}{\bkmkend AAAAAAABWZ}
00346         {\cf19 return} self\par
{\bkmkstart AAAAAAABXA}{\bkmkend AAAAAAABXA}
00347 \par
{\bkmkstart AAAAAAABXB}{\bkmkend AAAAAAABXB}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXC" }{}}{\fldrslt {\cs37\ul\cf2 00348}}}
     {\cf17 def }sleep(self, seconds: float):\par
{\bkmkstart AAAAAAABXD}{\bkmkend AAAAAAABXD}
00349         {\cf17 from} time {\cf17 import} sleep\par
{\bkmkstart AAAAAAABXE}{\bkmkend AAAAAAABXE}
00350         sleep(seconds)\par
{\bkmkstart AAAAAAABXF}{\bkmkend AAAAAAABXF}
00351         {\cf19 return} self\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/sql.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/sql.py}
{\xe \v final/sql.py}
{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXU" }{}}{\fldrslt {\cs37\ul\cf2 final.sql.SQLServer}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXJ" }{}}{\fldrslt {\cs37\ul\cf2 final.sql}}}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sql.py\par \pard\plain 
{\tc\tcl2 \v final/sql.py}
{\xe \v final/sql.py}
{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXH" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAABXI}{\bkmkend AAAAAAABXI}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXJ" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf22 """SQL Server Commands"""}\par
{\bkmkstart AAAAAAABXK}{\bkmkend AAAAAAABXK}
00002 \par
{\bkmkstart AAAAAAABXL}{\bkmkend AAAAAAABXL}
00003 \par
{\bkmkstart AAAAAAABXM}{\bkmkend AAAAAAABXM}
00004 {\cf17 import} mysql.connector\par
{\bkmkstart AAAAAAABXN}{\bkmkend AAAAAAABXN}
00005 {\cf17 import} time\par
{\bkmkstart AAAAAAABXO}{\bkmkend AAAAAAABXO}
00006 {\cf17 from} tqdm {\cf17 import} tqdm\par
{\bkmkstart AAAAAAABXP}{\bkmkend AAAAAAABXP}
00007 {\cf17 import} os\par
{\bkmkstart AAAAAAABXQ}{\bkmkend AAAAAAABXQ}
00008 {\cf17 from} random {\cf17 import} uniform\par
{\bkmkstart AAAAAAABXR}{\bkmkend AAAAAAABXR}
00009 \par
{\bkmkstart AAAAAAABXS}{\bkmkend AAAAAAABXS}
00010 \par
{\bkmkstart AAAAAAABXT}{\bkmkend AAAAAAABXT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXU" }{}}{\fldrslt {\cs37\ul\cf2 00011}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXU" }{}}{\fldrslt {\cs37\ul\cf2 SQLServer}}}
:\par
{\bkmkstart AAAAAAABXV}{\bkmkend AAAAAAABXV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXW" }{}}{\fldrslt {\cs37\ul\cf2 00012}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXW" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
(self, host: str, port: int, user={\cf18 None}, passwd={\cf18 None}, database={\cf18 None}, log: bool = {\cf17 False}):\par
{\bkmkstart AAAAAAABXX}{\bkmkend AAAAAAABXX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXY" }{}}{\fldrslt {\cs37\ul\cf2 00013}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXY" }{}}{\fldrslt {\cs37\ul\cf2 host}}}
 = host\par
{\bkmkstart AAAAAAABXZ}{\bkmkend AAAAAAABXZ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYA" }{}}{\fldrslt {\cs37\ul\cf2 00014}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYA" }{}}{\fldrslt {\cs37\ul\cf2 port}}}
 = port\par
{\bkmkstart AAAAAAABYB}{\bkmkend AAAAAAABYB}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYC" }{}}{\fldrslt {\cs37\ul\cf2 00015}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYC" }{}}{\fldrslt {\cs37\ul\cf2 user}}}
 = user\par
{\bkmkstart AAAAAAABYD}{\bkmkend AAAAAAABYD}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYE" }{}}{\fldrslt {\cs37\ul\cf2 00016}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYE" }{}}{\fldrslt {\cs37\ul\cf2 passwd}}}
 = passwd\par
{\bkmkstart AAAAAAABYF}{\bkmkend AAAAAAABYF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYG" }{}}{\fldrslt {\cs37\ul\cf2 00017}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYG" }{}}{\fldrslt {\cs37\ul\cf2 database}}}
 = database\par
{\bkmkstart AAAAAAABYH}{\bkmkend AAAAAAABYH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYI" }{}}{\fldrslt {\cs37\ul\cf2 00018}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYI" }{}}{\fldrslt {\cs37\ul\cf2 log}}}
 = log\par
{\bkmkstart AAAAAAABYJ}{\bkmkend AAAAAAABYJ}
00019 \par
{\bkmkstart AAAAAAABYK}{\bkmkend AAAAAAABYK}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYL" }{}}{\fldrslt {\cs37\ul\cf2 00020}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYL" }{}}{\fldrslt {\cs37\ul\cf2 connect}}}
(self):\par
{\bkmkstart AAAAAAABYM}{\bkmkend AAAAAAABYM}
00021         {\cf22 """}\par
{\bkmkstart AAAAAAABYN}{\bkmkend AAAAAAABYN}
00022 {\cf22         The connect function connects to the database }{\cf19 and} returns a connection object.\par
{\bkmkstart AAAAAAABYO}{\bkmkend AAAAAAABYO}
00023 \par
{\bkmkstart AAAAAAABYP}{\bkmkend AAAAAAABYP}
00024         :param self: Reference the {\cf17 class }object\par
{\bkmkstart AAAAAAABYQ}{\bkmkend AAAAAAABYQ}
00025         :{\cf19 return}: The connection object\par
{\bkmkstart AAAAAAABYR}{\bkmkend AAAAAAABYR}
00026         {\cf22 """}\par
{\bkmkstart AAAAAAABYS}{\bkmkend AAAAAAABYS}
00027 {\cf22 }\par
{\bkmkstart AAAAAAABYT}{\bkmkend AAAAAAABYT}
00028 {\cf22         }{\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYI" }{}}{\fldrslt {\cs37\ul\cf2 log}}}
:\par
{\bkmkstart AAAAAAABYU}{\bkmkend AAAAAAABYU}
00029             print({\cf22 'CONNECTING ...'}, end={\cf22 '\\r'})\par
{\bkmkstart AAAAAAABYV}{\bkmkend AAAAAAABYV}
00030         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYC" }{}}{\fldrslt {\cs37\ul\cf2 user}}}
 != {\cf18 None}:\par
{\bkmkstart AAAAAAABYW}{\bkmkend AAAAAAABYW}
00031             {\cf19 if} {\cf19 not} isinstance(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYC" }{}}{\fldrslt {\cs37\ul\cf2 user}}}
, str):\par
{\bkmkstart AAAAAAABYX}{\bkmkend AAAAAAABYX}
00032                 {\cf19 raise} ValueError({\cf22 "user must be a string"})\par
{\bkmkstart AAAAAAABYY}{\bkmkend AAAAAAABYY}
00033         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYE" }{}}{\fldrslt {\cs37\ul\cf2 passwd}}}
 {\cf19 is} {\cf19 not} {\cf18 None}:\par
{\bkmkstart AAAAAAABYZ}{\bkmkend AAAAAAABYZ}
00034             {\cf19 if} {\cf19 not} isinstance(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYE" }{}}{\fldrslt {\cs37\ul\cf2 passwd}}}
, str):\par
{\bkmkstart AAAAAAABZA}{\bkmkend AAAAAAABZA}
00035                 {\cf19 raise} ValueError({\cf22 "passwd must be a string"})\par
{\bkmkstart AAAAAAABZB}{\bkmkend AAAAAAABZB}
00036         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYG" }{}}{\fldrslt {\cs37\ul\cf2 database}}}
 {\cf19 is} {\cf19 not} {\cf18 None}:\par
{\bkmkstart AAAAAAABZC}{\bkmkend AAAAAAABZC}
00037             {\cf19 if} {\cf19 not} isinstance(self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYG" }{}}{\fldrslt {\cs37\ul\cf2 database}}}
, str):\par
{\bkmkstart AAAAAAABZD}{\bkmkend AAAAAAABZD}
00038                 {\cf19 raise} ValueError({\cf22 "database must be a string"})\par
{\bkmkstart AAAAAAABZE}{\bkmkend AAAAAAABZE}
00039 \par
{\bkmkstart AAAAAAABZF}{\bkmkend AAAAAAABZF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZG" }{}}{\fldrslt {\cs37\ul\cf2 00040}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZG" }{}}{\fldrslt {\cs37\ul\cf2 db}}}
 = mysql.connector.connect(\par
{\bkmkstart AAAAAAABZH}{\bkmkend AAAAAAABZH}
00041             host=self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABXY" }{}}{\fldrslt {\cs37\ul\cf2 host}}}
,\par
{\bkmkstart AAAAAAABZI}{\bkmkend AAAAAAABZI}
00042             port=self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYA" }{}}{\fldrslt {\cs37\ul\cf2 port}}}
,\par
{\bkmkstart AAAAAAABZJ}{\bkmkend AAAAAAABZJ}
00043             user=self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYC" }{}}{\fldrslt {\cs37\ul\cf2 user}}}
,\par
{\bkmkstart AAAAAAABZK}{\bkmkend AAAAAAABZK}
00044             passwd=self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYE" }{}}{\fldrslt {\cs37\ul\cf2 passwd}}}
,\par
{\bkmkstart AAAAAAABZL}{\bkmkend AAAAAAABZL}
00045             database=self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYG" }{}}{\fldrslt {\cs37\ul\cf2 database}}}
\par
{\bkmkstart AAAAAAABZM}{\bkmkend AAAAAAABZM}
00046         )\par
{\bkmkstart AAAAAAABZN}{\bkmkend AAAAAAABZN}
00047 \par
{\bkmkstart AAAAAAABZO}{\bkmkend AAAAAAABZO}
00048         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYI" }{}}{\fldrslt {\cs37\ul\cf2 log}}}
:\par
{\bkmkstart AAAAAAABZP}{\bkmkend AAAAAAABZP}
00049             print({\cf22 'Connecting DONE'})\par
{\bkmkstart AAAAAAABZQ}{\bkmkend AAAAAAABZQ}
00050             print({\cf22 'APPOINTING CURSOR ...'}, end={\cf22 '\\r'})\par
{\bkmkstart AAAAAAABZR}{\bkmkend AAAAAAABZR}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZS" }{}}{\fldrslt {\cs37\ul\cf2 00051}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZS" }{}}{\fldrslt {\cs37\ul\cf2 mycursor}}}
 = self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZG" }{}}{\fldrslt {\cs37\ul\cf2 db}}}
.cursor()\par
{\bkmkstart AAAAAAABZT}{\bkmkend AAAAAAABZT}
00052         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYI" }{}}{\fldrslt {\cs37\ul\cf2 log}}}
:\par
{\bkmkstart AAAAAAABZU}{\bkmkend AAAAAAABZU}
00053             print({\cf22 'APPOINTING CURSOR DONE'})\par
{\bkmkstart AAAAAAABZV}{\bkmkend AAAAAAABZV}
00054         {\cf19 return} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZG" }{}}{\fldrslt {\cs37\ul\cf2 db}}}
\par
{\bkmkstart AAAAAAABZW}{\bkmkend AAAAAAABZW}
00055 \par
{\bkmkstart AAAAAAABZX}{\bkmkend AAAAAAABZX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZY" }{}}{\fldrslt {\cs37\ul\cf2 00056}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZY" }{}}{\fldrslt {\cs37\ul\cf2 execute}}}
(self, command: str, log={\cf18 None}, info={\cf17 True}):\par
{\bkmkstart AAAAAAABZZ}{\bkmkend AAAAAAABZZ}
00057         {\cf22 """}\par
{\bkmkstart AAAAAAACAA}{\bkmkend AAAAAAACAA}
00058 {\cf22         The execute function executes a command }{\cf19 and} prints out the result.\par
{\bkmkstart AAAAAAACAB}{\bkmkend AAAAAAACAB}
00059         It also returns the result {\cf17 as} a pandas dataframe.\par
{\bkmkstart AAAAAAACAC}{\bkmkend AAAAAAACAC}
00060 \par
{\bkmkstart AAAAAAACAD}{\bkmkend AAAAAAACAD}
00061         :param self: Refer to the object instance\par
{\bkmkstart AAAAAAACAE}{\bkmkend AAAAAAACAE}
00062         :param command: str: Pass the sql command to be executed\par
{\bkmkstart AAAAAAACAF}{\bkmkend AAAAAAACAF}
00063         :param log: Enable logging\par
{\bkmkstart AAAAAAACAG}{\bkmkend AAAAAAACAG}
00064         :param info: Print out the time it took to execute the command\par
{\bkmkstart AAAAAAACAH}{\bkmkend AAAAAAACAH}
00065         :{\cf19 return}: A pandas dataframe\par
{\bkmkstart AAAAAAACAI}{\bkmkend AAAAAAACAI}
00066         {\cf22 """}\par
{\bkmkstart AAAAAAACAJ}{\bkmkend AAAAAAACAJ}
00067 {\cf22         }{\cf19 while} os.path.exists({\cf22 'RUNNING'}):\par
{\bkmkstart AAAAAAACAK}{\bkmkend AAAAAAACAK}
00068             time.sleep(uniform(0.5, 1.5))\par
{\bkmkstart AAAAAAACAL}{\bkmkend AAAAAAACAL}
00069         {\cf19 try}:\par
{\bkmkstart AAAAAAACAM}{\bkmkend AAAAAAACAM}
00070             {\cf20 # deepcode ignore MissingClose: <create file>}\par
{\bkmkstart AAAAAAACAN}{\bkmkend AAAAAAACAN}
00071             open({\cf22 'RUNNING'}, {\cf22 'x'})\par
{\bkmkstart AAAAAAACAO}{\bkmkend AAAAAAACAO}
00072         {\cf19 except} FileExistsError:\par
{\bkmkstart AAAAAAACAP}{\bkmkend AAAAAAACAP}
00073             SQLServer.execute(self, command=command, log=log, info=info)\par
{\bkmkstart AAAAAAACAQ}{\bkmkend AAAAAAACAQ}
00074             {\cf19 return} {\cf18 None}\par
{\bkmkstart AAAAAAACAR}{\bkmkend AAAAAAACAR}
00075         {\cf19 if} log != {\cf18 None}:\par
{\bkmkstart AAAAAAACAS}{\bkmkend AAAAAAACAS}
00076             {\cf19 if} isinstance(log, bool):\par
{\bkmkstart AAAAAAACAT}{\bkmkend AAAAAAACAT}
00077                 self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYI" }{}}{\fldrslt {\cs37\ul\cf2 log}}}
 = log\par
{\bkmkstart AAAAAAACAU}{\bkmkend AAAAAAACAU}
00078         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYI" }{}}{\fldrslt {\cs37\ul\cf2 log}}}
 {\cf19 or} info:\par
{\bkmkstart AAAAAAACAV}{\bkmkend AAAAAAACAV}
00079             print(f{\cf22 'Executing command \{command\}'})\par
{\bkmkstart AAAAAAACAW}{\bkmkend AAAAAAACAW}
00080         start = time.time()\par
{\bkmkstart AAAAAAACAX}{\bkmkend AAAAAAACAX}
00081         {\cf19 try}:\par
{\bkmkstart AAAAAAACAY}{\bkmkend AAAAAAACAY}
00082             self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZS" }{}}{\fldrslt {\cs37\ul\cf2 mycursor}}}
.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZY" }{}}{\fldrslt {\cs37\ul\cf2 execute}}}
(command)\par
{\bkmkstart AAAAAAACAZ}{\bkmkend AAAAAAACAZ}
00083         {\cf19 except} mysql.connector.errors.ProgrammingError:\par
{\bkmkstart AAAAAAACBA}{\bkmkend AAAAAAACBA}
00084             os.remove({\cf22 'RUNNING'})\par
{\bkmkstart AAAAAAACBB}{\bkmkend AAAAAAACBB}
00085             {\cf19 return} {\cf18 None}\par
{\bkmkstart AAAAAAACBC}{\bkmkend AAAAAAACBC}
00086         end = time.time()\par
{\bkmkstart AAAAAAACBD}{\bkmkend AAAAAAACBD}
00087         commandtime = end - start\par
{\bkmkstart AAAAAAACBE}{\bkmkend AAAAAAACBE}
00088         start = time.time()\par
{\bkmkstart AAAAAAACBF}{\bkmkend AAAAAAACBF}
00089         data = self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZS" }{}}{\fldrslt {\cs37\ul\cf2 mycursor}}}
.fetchall()\par
{\bkmkstart AAAAAAACBG}{\bkmkend AAAAAAACBG}
00090         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYI" }{}}{\fldrslt {\cs37\ul\cf2 log}}}
:\par
{\bkmkstart AAAAAAACBH}{\bkmkend AAAAAAACBH}
00091             {\cf19 if} data {\cf19 is} {\cf19 not} {\cf18 None}:\par
{\bkmkstart AAAAAAACBI}{\bkmkend AAAAAAACBI}
00092                 {\cf19 for} row {\cf19 in} tqdm(iterable=data, total=len(data)):\par
{\bkmkstart AAAAAAACBJ}{\bkmkend AAAAAAACBJ}
00093                     tqdm.write(str(row))\par
{\bkmkstart AAAAAAACBK}{\bkmkend AAAAAAACBK}
00094         end = time.time()\par
{\bkmkstart AAAAAAACBL}{\bkmkend AAAAAAACBL}
00095         endtime = end-start\par
{\bkmkstart AAAAAAACBM}{\bkmkend AAAAAAACBM}
00096         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABYI" }{}}{\fldrslt {\cs37\ul\cf2 log}}}
 {\cf19 or} info:\par
{\bkmkstart AAAAAAACBN}{\bkmkend AAAAAAACBN}
00097             print(f{\cf22 'DONE in \{commandtime\} seconds'})\par
{\bkmkstart AAAAAAACBO}{\bkmkend AAAAAAACBO}
00098             print(f{\cf22 'Printing DONE in \{endtime\} seconds'})\par
{\bkmkstart AAAAAAACBP}{\bkmkend AAAAAAACBP}
00099 \par
{\bkmkstart AAAAAAACBQ}{\bkmkend AAAAAAACBQ}
00100         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAABZG" }{}}{\fldrslt {\cs37\ul\cf2 db}}}
.commit()\par
{\bkmkstart AAAAAAACBR}{\bkmkend AAAAAAACBR}
00101         os.remove({\cf22 'RUNNING'})\par
{\bkmkstart AAAAAAACBS}{\bkmkend AAAAAAACBS}
00102         {\cf19 return} data\par
{\bkmkstart AAAAAAACBT}{\bkmkend AAAAAAACBT}
00103 \par
{\bkmkstart AAAAAAACBU}{\bkmkend AAAAAAACBU}
00104     {\cf21 @staticmethod}\par
{\bkmkstart AAAAAAACBV}{\bkmkend AAAAAAACBV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBW" }{}}{\fldrslt {\cs37\ul\cf2 00105}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACBW" }{}}{\fldrslt {\cs37\ul\cf2 to_str}}}
(thing, mode: int = 0) -> str:\par
{\bkmkstart AAAAAAACBX}{\bkmkend AAAAAAACBX}
00106         {\cf22 """}\par
{\bkmkstart AAAAAAACBY}{\bkmkend AAAAAAACBY}
00107 {\cf22         The to_str function takes a list of lists }{\cf19 and} converts it into a string.\par
{\bkmkstart AAAAAAACBZ}{\bkmkend AAAAAAACBZ}
00108         The function {\cf19 is} used to convert the data {\cf17 from} the csv file into something that\par
{\bkmkstart AAAAAAACCA}{\bkmkend AAAAAAACCA}
00109         can be written to an SQL database. The function also removes any apostrophes {\cf19 or} \par
{\bkmkstart AAAAAAACCB}{\bkmkend AAAAAAACCB}
00110         quotation marks {\cf19 in} order to prevent SQL injection attacks.\par
{\bkmkstart AAAAAAACCC}{\bkmkend AAAAAAACCC}
00111 \par
{\bkmkstart AAAAAAACCD}{\bkmkend AAAAAAACCD}
00112         :param thing: Pass {\cf19 in} a list of lists\par
{\bkmkstart AAAAAAACCE}{\bkmkend AAAAAAACCE}
00113         :{\cf19 return}: A string that {\cf19 is} formatted {\cf19 for} the insert statement\par
{\bkmkstart AAAAAAACCF}{\bkmkend AAAAAAACCF}
00114         {\cf22 """}\par
{\bkmkstart AAAAAAACCG}{\bkmkend AAAAAAACCG}
00115 {\cf22         name: str = ''}\par
{\bkmkstart AAAAAAACCH}{\bkmkend AAAAAAACCH}
00116         {\cf19 if} thing == {\cf18 None}:\par
{\bkmkstart AAAAAAACCI}{\bkmkend AAAAAAACCI}
00117             {\cf19 return} {\cf22 'NULL'}\par
{\bkmkstart AAAAAAACCJ}{\bkmkend AAAAAAACCJ}
00118         {\cf19 if} len(thing) == 0:\par
{\bkmkstart AAAAAAACCK}{\bkmkend AAAAAAACCK}
00119             name: str = {\cf22 'None'}\par
{\bkmkstart AAAAAAACCL}{\bkmkend AAAAAAACCL}
00120             {\cf19 return} name\par
{\bkmkstart AAAAAAACCM}{\bkmkend AAAAAAACCM}
00121         {\cf19 if} mode == 0:\par
{\bkmkstart AAAAAAACCN}{\bkmkend AAAAAAACCN}
00122             {\cf19 for} i {\cf19 in} tqdm(range(len(thing)), leave={\cf17 False}):\par
{\bkmkstart AAAAAAACCO}{\bkmkend AAAAAAACCO}
00123                 temp: str = {\cf22 ''}\par
{\bkmkstart AAAAAAACCP}{\bkmkend AAAAAAACCP}
00124                 was_edited: bool = {\cf17 False}\par
{\bkmkstart AAAAAAACCQ}{\bkmkend AAAAAAACCQ}
00125                 {\cf19 for} j {\cf19 in} tqdm(range(len(thing[i])), leave={\cf17 False}):\par
{\bkmkstart AAAAAAACCR}{\bkmkend AAAAAAACCR}
00126                     was_edited: bool = {\cf17 False}\par
{\bkmkstart AAAAAAACCS}{\bkmkend AAAAAAACCS}
00127                     {\cf19 if} thing[i][j] == {\cf22 "'"}:\par
{\bkmkstart AAAAAAACCT}{\bkmkend AAAAAAACCT}
00128                         temp += {\cf22 "\\\\'"}\par
{\bkmkstart AAAAAAACCU}{\bkmkend AAAAAAACCU}
00129                         was_edited: bool = {\cf17 True}\par
{\bkmkstart AAAAAAACCV}{\bkmkend AAAAAAACCV}
00130                     {\cf19 elif} thing[i][j] == {\cf22 '\\"'}:\par
{\bkmkstart AAAAAAACCW}{\bkmkend AAAAAAACCW}
00131                         temp += {\cf22 '\\\\"'}\par
{\bkmkstart AAAAAAACCX}{\bkmkend AAAAAAACCX}
00132                         was_edited: bool = {\cf17 True}\par
{\bkmkstart AAAAAAACCY}{\bkmkend AAAAAAACCY}
00133                     {\cf19 else}:\par
{\bkmkstart AAAAAAACCZ}{\bkmkend AAAAAAACCZ}
00134                         was_edited: bool = {\cf17 False}\par
{\bkmkstart AAAAAAACDA}{\bkmkend AAAAAAACDA}
00135                         temp += str(thing[i][j])\par
{\bkmkstart AAAAAAACDB}{\bkmkend AAAAAAACDB}
00136                 {\cf19 if} {\cf19 not} was_edited:\par
{\bkmkstart AAAAAAACDC}{\bkmkend AAAAAAACDC}
00137                     name += str(thing[i]+{\cf22 ', '})\par
{\bkmkstart AAAAAAACDD}{\bkmkend AAAAAAACDD}
00138                 {\cf19 elif} was_edited:\par
{\bkmkstart AAAAAAACDE}{\bkmkend AAAAAAACDE}
00139                     name += str(temp+{\cf22 ', '})\par
{\bkmkstart AAAAAAACDF}{\bkmkend AAAAAAACDF}
00140             name: str = name[0:-2]\par
{\bkmkstart AAAAAAACDG}{\bkmkend AAAAAAACDG}
00141         {\cf19 if} mode == 1:\par
{\bkmkstart AAAAAAACDH}{\bkmkend AAAAAAACDH}
00142             temp: str = {\cf22 ''}\par
{\bkmkstart AAAAAAACDI}{\bkmkend AAAAAAACDI}
00143             was_edited: bool = {\cf17 False}\par
{\bkmkstart AAAAAAACDJ}{\bkmkend AAAAAAACDJ}
00144             {\cf19 for} i {\cf19 in} tqdm(range(len(thing)), leave={\cf17 False}):\par
{\bkmkstart AAAAAAACDK}{\bkmkend AAAAAAACDK}
00145                 {\cf19 if} thing[i] == {\cf22 "'"}:\par
{\bkmkstart AAAAAAACDL}{\bkmkend AAAAAAACDL}
00146                     temp += {\cf22 "\\\\'"}\par
{\bkmkstart AAAAAAACDM}{\bkmkend AAAAAAACDM}
00147                     was_edited: bool = {\cf17 True}\par
{\bkmkstart AAAAAAACDN}{\bkmkend AAAAAAACDN}
00148                 {\cf19 elif} thing[i] == {\cf22 '\\"'}:\par
{\bkmkstart AAAAAAACDO}{\bkmkend AAAAAAACDO}
00149                     temp += {\cf22 '\\\\"'}\par
{\bkmkstart AAAAAAACDP}{\bkmkend AAAAAAACDP}
00150                     was_edited: bool = {\cf17 True}\par
{\bkmkstart AAAAAAACDQ}{\bkmkend AAAAAAACDQ}
00151                 {\cf19 else}:\par
{\bkmkstart AAAAAAACDR}{\bkmkend AAAAAAACDR}
00152                     was_edited: bool = {\cf17 False}\par
{\bkmkstart AAAAAAACDS}{\bkmkend AAAAAAACDS}
00153                     temp += str(thing[i])\par
{\bkmkstart AAAAAAACDT}{\bkmkend AAAAAAACDT}
00154                 {\cf19 if} {\cf19 not} was_edited:\par
{\bkmkstart AAAAAAACDU}{\bkmkend AAAAAAACDU}
00155                     name += str(thing[i])\par
{\bkmkstart AAAAAAACDV}{\bkmkend AAAAAAACDV}
00156                 {\cf19 elif} was_edited:\par
{\bkmkstart AAAAAAACDW}{\bkmkend AAAAAAACDW}
00157                     name += str(temp)\par
{\bkmkstart AAAAAAACDX}{\bkmkend AAAAAAACDX}
00158         {\cf19 return} name\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
final/writing.py File Reference\par \pard\plain 
{\tc\tcl2 \v final/writing.py}
{\xe \v final/writing.py}
{\bkmkstart AAAAAAACDZ}
{\bkmkend AAAAAAACDZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFO" }{}}{\fldrslt {\cs37\ul\cf2 final.writing.installing_carousel}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAAD" }{}}{\fldrslt {\cs37\ul\cf2 final}}}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEB" }{}}{\fldrslt {\cs37\ul\cf2 final.writing}}}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEQ" }{}}{\fldrslt {\cs37\ul\cf2 final.writing.log}}}
 (str msg, str end='\\n')\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFE" }{}}{\fldrslt {\cs37\ul\cf2 final.writing.get_time}}}
 ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
str {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEM" }{}}{\fldrslt {\cs37\ul\cf2 final.writing.datelog}}}
 = datetime.now().strftime("%y-%m-%d-%H-%M-%S")\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
writing.py\par \pard\plain 
{\tc\tcl2 \v final/writing.py}
{\xe \v final/writing.py}
{\bkmkstart AAAAAAACDY}
{\bkmkend AAAAAAACDY}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACDZ" }{}}{\fldrslt {\cs37\ul\cf2 Go to the documentation of this file.}}}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\bkmkstart AAAAAAACEA}{\bkmkend AAAAAAACEA}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEB" }{}}{\fldrslt {\cs37\ul\cf2 00001}}}
 {\cf22 """Writing methods"""}\par
{\bkmkstart AAAAAAACEC}{\bkmkend AAAAAAACEC}
00002 \par
{\bkmkstart AAAAAAACED}{\bkmkend AAAAAAACED}
00003 {\cf17 from} tqdm {\cf17 import} tqdm\par
{\bkmkstart AAAAAAACEE}{\bkmkend AAAAAAACEE}
00004 {\cf17 import} os\par
{\bkmkstart AAAAAAACEF}{\bkmkend AAAAAAACEF}
00005 {\cf17 from} time {\cf17 import} sleep\par
{\bkmkstart AAAAAAACEG}{\bkmkend AAAAAAACEG}
00006 {\cf17 from} datetime {\cf17 import} datetime\par
{\bkmkstart AAAAAAACEH}{\bkmkend AAAAAAACEH}
00007 {\cf17 from} threading {\cf17 import} Thread\par
{\bkmkstart AAAAAAACEI}{\bkmkend AAAAAAACEI}
00008 {\cf17 import} curses\par
{\bkmkstart AAAAAAACEJ}{\bkmkend AAAAAAACEJ}
00009 {\cf17 from} {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAUA" }{}}{\fldrslt {\cs37\ul\cf2 final.mathematical}}}
 {\cf17 import} get_id\par
{\bkmkstart AAAAAAACEK}{\bkmkend AAAAAAACEK}
00010 {\cf17 import} sys\par
{\bkmkstart AAAAAAACEL}{\bkmkend AAAAAAACEL}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEM" }{}}{\fldrslt {\cs37\ul\cf2 00011}}}
 datelog: str = datetime.now().strftime({\cf22 "%y-%m-%d-%H-%M-%S"})\par
{\bkmkstart AAAAAAACEN}{\bkmkend AAAAAAACEN}
00012 \par
{\bkmkstart AAAAAAACEO}{\bkmkend AAAAAAACEO}
00013 \par
{\bkmkstart AAAAAAACEP}{\bkmkend AAAAAAACEP}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEQ" }{}}{\fldrslt {\cs37\ul\cf2 00014}}}
 {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACEQ" }{}}{\fldrslt {\cs37\ul\cf2 log}}}
(msg: str, end: str = {\cf22 '\\n'}) -> str:\par
{\bkmkstart AAAAAAACER}{\bkmkend AAAAAAACER}
00015     {\cf22 """}\par
{\bkmkstart AAAAAAACES}{\bkmkend AAAAAAACES}
00016 {\cf22     It opens a file, writes a message to it, }{\cf19 and} closes the file\par
{\bkmkstart AAAAAAACET}{\bkmkend AAAAAAACET}
00017 \par
{\bkmkstart AAAAAAACEU}{\bkmkend AAAAAAACEU}
00018     :param msg: The message to be logged\par
{\bkmkstart AAAAAAACEV}{\bkmkend AAAAAAACEV}
00019     :param end: The character that will be used to end the line, defaults to \\n (optional)\par
{\bkmkstart AAAAAAACEW}{\bkmkend AAAAAAACEW}
00020     {\cf22 """}\par
{\bkmkstart AAAAAAACEX}{\bkmkend AAAAAAACEX}
00021 {\cf22     crashfile = open('crash_dump-'} + datelog + {\cf22 ".txt"}, {\cf22 'a'}, encoding={\cf22 'utf-8'})\par
{\bkmkstart AAAAAAACEY}{\bkmkend AAAAAAACEY}
00022     crashfile.write(str(msg) + str(end))\par
{\bkmkstart AAAAAAACEZ}{\bkmkend AAAAAAACEZ}
00023     crashfile.close()\par
{\bkmkstart AAAAAAACFA}{\bkmkend AAAAAAACFA}
00024     {\cf19 return} msg\par
{\bkmkstart AAAAAAACFB}{\bkmkend AAAAAAACFB}
00025 \par
{\bkmkstart AAAAAAACFC}{\bkmkend AAAAAAACFC}
00026 \par
{\bkmkstart AAAAAAACFD}{\bkmkend AAAAAAACFD}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFE" }{}}{\fldrslt {\cs37\ul\cf2 00027}}}
 {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFE" }{}}{\fldrslt {\cs37\ul\cf2 get_time}}}
() -> str:\par
{\bkmkstart AAAAAAACFF}{\bkmkend AAAAAAACFF}
00028     {\cf22 """}\par
{\bkmkstart AAAAAAACFG}{\bkmkend AAAAAAACFG}
00029 {\cf22     The get_time function returns the current time }{\cf19 in} HH-MM-SS format.\par
{\bkmkstart AAAAAAACFH}{\bkmkend AAAAAAACFH}
00030        This {\cf19 is} a useful function {\cf19 for} generating timestamps.\par
{\bkmkstart AAAAAAACFI}{\bkmkend AAAAAAACFI}
00031     :{\cf19 return}: The current time {\cf19 in} the format of &quot;hour-minute-second&quot;\par
{\bkmkstart AAAAAAACFJ}{\bkmkend AAAAAAACFJ}
00032     {\cf22 """}\par
{\bkmkstart AAAAAAACFK}{\bkmkend AAAAAAACFK}
00033 {\cf22     }{\cf19 return} datetime.now().strftime({\cf22 "%H-%M-%S"})\par
{\bkmkstart AAAAAAACFL}{\bkmkend AAAAAAACFL}
00034 \par
{\bkmkstart AAAAAAACFM}{\bkmkend AAAAAAACFM}
00035 \par
{\bkmkstart AAAAAAACFN}{\bkmkend AAAAAAACFN}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFO" }{}}{\fldrslt {\cs37\ul\cf2 00036}}}
 {\cf17 class }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFO" }{}}{\fldrslt {\cs37\ul\cf2 installing_carousel}}}
:\par
{\bkmkstart AAAAAAACFP}{\bkmkend AAAAAAACFP}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFQ" }{}}{\fldrslt {\cs37\ul\cf2 00037}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFQ" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
(self, package: str, comment: str = {\cf22 'Installing'}, bar: bool = {\cf17 False}, move_by_command: bool = {\cf17 False}, use_curses: bool = {\cf17 False}, curses_y: int = 0, curses_x: int = 0, curses_obj = {\cf18 None}):\par
{\bkmkstart AAAAAAACFR}{\bkmkend AAAAAAACFR}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFS" }{}}{\fldrslt {\cs37\ul\cf2 00038}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFS" }{}}{\fldrslt {\cs37\ul\cf2 package}}}
 = package\par
{\bkmkstart AAAAAAACFT}{\bkmkend AAAAAAACFT}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFU" }{}}{\fldrslt {\cs37\ul\cf2 00039}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFU" }{}}{\fldrslt {\cs37\ul\cf2 comment}}}
 = comment\par
{\bkmkstart AAAAAAACFV}{\bkmkend AAAAAAACFV}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 00040}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 bar}}}
 = bar\par
{\bkmkstart AAAAAAACFX}{\bkmkend AAAAAAACFX}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFY" }{}}{\fldrslt {\cs37\ul\cf2 00041}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFY" }{}}{\fldrslt {\cs37\ul\cf2 move_by_command}}}
 = move_by_command\par
{\bkmkstart AAAAAAACFZ}{\bkmkend AAAAAAACFZ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGA" }{}}{\fldrslt {\cs37\ul\cf2 00042}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGA" }{}}{\fldrslt {\cs37\ul\cf2 _move}}}
 = 0\par
{\bkmkstart AAAAAAACGB}{\bkmkend AAAAAAACGB}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGC" }{}}{\fldrslt {\cs37\ul\cf2 00043}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGC" }{}}{\fldrslt {\cs37\ul\cf2 id}}}
 = get_id()\par
{\bkmkstart AAAAAAACGD}{\bkmkend AAAAAAACGD}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGE" }{}}{\fldrslt {\cs37\ul\cf2 00044}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGE" }{}}{\fldrslt {\cs37\ul\cf2 use_curses}}}
 = use_curses\par
{\bkmkstart AAAAAAACGF}{\bkmkend AAAAAAACGF}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 00045}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 curses_y}}}
 = curses_y\par
{\bkmkstart AAAAAAACGH}{\bkmkend AAAAAAACGH}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 00046}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 curses_x}}}
 = curses_x\par
{\bkmkstart AAAAAAACGJ}{\bkmkend AAAAAAACGJ}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 00047}}}
         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 curses_obj}}}
 = curses_obj\par
{\bkmkstart AAAAAAACGL}{\bkmkend AAAAAAACGL}
00048         {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGE" }{}}{\fldrslt {\cs37\ul\cf2 use_curses}}}
 {\cf19 and} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 curses_obj}}}
 {\cf19 is} {\cf18 None}:\par
{\bkmkstart AAAAAAACGM}{\bkmkend AAAAAAACGM}
00049             {\cf19 raise} curses.error({\cf22 'curses object is not specified; curses_obj'})\par
{\bkmkstart AAAAAAACGN}{\bkmkend AAAAAAACGN}
00050 \par
{\bkmkstart AAAAAAACGO}{\bkmkend AAAAAAACGO}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGP" }{}}{\fldrslt {\cs37\ul\cf2 00051}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGP" }{}}{\fldrslt {\cs37\ul\cf2 start}}}
(self):\par
{\bkmkstart AAAAAAACGQ}{\bkmkend AAAAAAACGQ}
00052         {\cf22 """}\par
{\bkmkstart AAAAAAACGR}{\bkmkend AAAAAAACGR}
00053 {\cf22         The start function }{\cf19 is} the main function of the {\cf17 class}. It starts a thread that runs {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGS" }{}}{\fldrslt {\cs37\ul\cf2 init}}}
()\par
{\bkmkstart AAAAAAACGT}{\bkmkend AAAAAAACGT}
00054 \par
{\bkmkstart AAAAAAACGU}{\bkmkend AAAAAAACGU}
00055         :param self: Represent the instance of the {\cf17 class}\par
{\bkmkstart AAAAAAACGV}{\bkmkend AAAAAAACGV}
00056         :{\cf19 return}: Nothing, so the {\cf19 return} statement {\cf19 is} never reached\par
{\bkmkstart AAAAAAACGW}{\bkmkend AAAAAAACGW}
00057         {\cf22 """}\par
{\bkmkstart AAAAAAACGX}{\bkmkend AAAAAAACGX}
00058 {\cf22 }\par
{\bkmkstart AAAAAAACGY}{\bkmkend AAAAAAACGY}
00059 {\cf22         Thread(target=self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGS" }{}}{\fldrslt {\cs37\ul\cf2 init}}}
).{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGP" }{}}{\fldrslt {\cs37\ul\cf2 start}}}
()}\par
{\bkmkstart AAAAAAACGZ}{\bkmkend AAAAAAACGZ}
00060 {\cf22 }\par
{\bkmkstart AAAAAAACHA}{\bkmkend AAAAAAACHA}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHB" }{}}{\fldrslt {\cs37\ul\cf2 00061}}}
 {\cf22     }{\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHB" }{}}{\fldrslt {\cs37\ul\cf2 pause}}}
(self):\par
{\bkmkstart AAAAAAACHC}{\bkmkend AAAAAAACHC}
00062         {\cf22 """}\par
{\bkmkstart AAAAAAACHD}{\bkmkend AAAAAAACHD}
00063 {\cf22         The pause function }{\cf19 is} used to pause the installation of a package.\par
{\bkmkstart AAAAAAACHE}{\bkmkend AAAAAAACHE}
00064 \par
{\bkmkstart AAAAAAACHF}{\bkmkend AAAAAAACHF}
00065         :param self: Represent the instance of the {\cf17 class}\par
{\bkmkstart AAAAAAACHG}{\bkmkend AAAAAAACHG}
00066         :{\cf19 return}: Nothing, it just creates a file\par
{\bkmkstart AAAAAAACHH}{\bkmkend AAAAAAACHH}
00067         {\cf22 """}\par
{\bkmkstart AAAAAAACHI}{\bkmkend AAAAAAACHI}
00068 {\cf22         open(f"INSTALL_PAUSE\{self.id\}"}, {\cf22 'x'})\par
{\bkmkstart AAAAAAACHJ}{\bkmkend AAAAAAACHJ}
00069 \par
{\bkmkstart AAAAAAACHK}{\bkmkend AAAAAAACHK}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHL" }{}}{\fldrslt {\cs37\ul\cf2 00070}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHL" }{}}{\fldrslt {\cs37\ul\cf2 unpause}}}
(self):\par
{\bkmkstart AAAAAAACHM}{\bkmkend AAAAAAACHM}
00071         open(f{\cf22 "INSTALL_UNPAUSE\{self.id\}"}, {\cf22 'x'})\par
{\bkmkstart AAAAAAACHN}{\bkmkend AAAAAAACHN}
00072 \par
{\bkmkstart AAAAAAACHO}{\bkmkend AAAAAAACHO}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHP" }{}}{\fldrslt {\cs37\ul\cf2 00073}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACHP" }{}}{\fldrslt {\cs37\ul\cf2 stop}}}
(self, mode='s'):\par
{\bkmkstart AAAAAAACHQ}{\bkmkend AAAAAAACHQ}
00074         {\cf22 """}\par
{\bkmkstart AAAAAAACHR}{\bkmkend AAAAAAACHR}
00075 {\cf22         The stop function }{\cf19 is} called when the user wants to stop the installation.\par
{\bkmkstart AAAAAAACHS}{\bkmkend AAAAAAACHS}
00076 \par
{\bkmkstart AAAAAAACHT}{\bkmkend AAAAAAACHT}
00077         :param self: Represent the instance of the {\cf17 class}\par
{\bkmkstart AAAAAAACHU}{\bkmkend AAAAAAACHU}
00078         :param mode: Determine what file {\cf19 is} created\par
{\bkmkstart AAAAAAACHV}{\bkmkend AAAAAAACHV}
00079         :{\cf19 return}: The name of the file that {\cf19 is} created\par
{\bkmkstart AAAAAAACHW}{\bkmkend AAAAAAACHW}
00080         {\cf22 """}\par
{\bkmkstart AAAAAAACHX}{\bkmkend AAAAAAACHX}
00081 {\cf22         }{\cf19 if} mode == {\cf22 's'}:\par
{\bkmkstart AAAAAAACHY}{\bkmkend AAAAAAACHY}
00082             open(f{\cf22 "INSTALL_DONE\{self.id\}"}, {\cf22 'x'})\par
{\bkmkstart AAAAAAACHZ}{\bkmkend AAAAAAACHZ}
00083         {\cf19 if} mode == {\cf22 'e'}:\par
{\bkmkstart AAAAAAACIA}{\bkmkend AAAAAAACIA}
00084             open(f{\cf22 "INSTALL_ERROR\{self.id\}"}, {\cf22 'x'})\par
{\bkmkstart AAAAAAACIB}{\bkmkend AAAAAAACIB}
00085         {\cf19 if} mode == {\cf22 'ali'}:\par
{\bkmkstart AAAAAAACIC}{\bkmkend AAAAAAACIC}
00086             open(f{\cf22 "INSTALL_ALINST\{self.id\}"}, {\cf22 'x'})\par
{\bkmkstart AAAAAAACID}{\bkmkend AAAAAAACID}
00087 \par
{\bkmkstart AAAAAAACIE}{\bkmkend AAAAAAACIE}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIF" }{}}{\fldrslt {\cs37\ul\cf2 00088}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACIF" }{}}{\fldrslt {\cs37\ul\cf2 move}}}
(self):\par
{\bkmkstart AAAAAAACIG}{\bkmkend AAAAAAACIG}
00089         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGA" }{}}{\fldrslt {\cs37\ul\cf2 _move}}}
 += 1\par
{\bkmkstart AAAAAAACIH}{\bkmkend AAAAAAACIH}
00090 \par
{\bkmkstart AAAAAAACII}{\bkmkend AAAAAAACII}
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGS" }{}}{\fldrslt {\cs37\ul\cf2 00091}}}
     {\cf17 def }{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGS" }{}}{\fldrslt {\cs37\ul\cf2 init}}}
(self):\par
{\bkmkstart AAAAAAACIJ}{\bkmkend AAAAAAACIJ}
00092         {\cf22 """}\par
{\bkmkstart AAAAAAACIK}{\bkmkend AAAAAAACIK}
00093 {\cf22         The init function }{\cf19 is} used to initialize the package installation.\par
{\bkmkstart AAAAAAACIL}{\bkmkend AAAAAAACIL}
00094         It will {\cf19 print} a loading bar until it finds an INSTALL_DONE, INSTALL_ERROR {\cf19 or} \par
{\bkmkstart AAAAAAACIM}{\bkmkend AAAAAAACIM}
00095         INSTALL_ALINST file {\cf19 in} the current directory. If it finds an INSTALL_DONE file, \par
{\bkmkstart AAAAAAACIN}{\bkmkend AAAAAAACIN}
00096         it will {\cf19 print} DONE after the package name {\cf19 and} {\cf19 if} it finds an INSTALL_ERROR file, \par
{\bkmkstart AAAAAAACIO}{\bkmkend AAAAAAACIO}
00097         it will {\cf19 print} ERROR after the package name. If it finds an INSTALL_ALINST file, \par
{\bkmkstart AAAAAAACIP}{\bkmkend AAAAAAACIP}
00098         it will {\cf19 print} ALREADY INSTALLED after the package name.\par
{\bkmkstart AAAAAAACIQ}{\bkmkend AAAAAAACIQ}
00099 \par
{\bkmkstart AAAAAAACIR}{\bkmkend AAAAAAACIR}
00100         :param self: Represent the instance of the {\cf17 class}\par
{\bkmkstart AAAAAAACIS}{\bkmkend AAAAAAACIS}
00101         :{\cf19 return}: Nothing, so the {\cf19 return} statement {\cf19 is} {\cf19 not} needed\par
{\bkmkstart AAAAAAACIT}{\bkmkend AAAAAAACIT}
00102         {\cf22 """}\par
{\bkmkstart AAAAAAACIU}{\bkmkend AAAAAAACIU}
00103 {\cf22         error = }{\cf17 False}\par
{\bkmkstart AAAAAAACIV}{\bkmkend AAAAAAACIV}
00104         alinst = {\cf17 False}\par
{\bkmkstart AAAAAAACIW}{\bkmkend AAAAAAACIW}
00105         number = 0\par
{\bkmkstart AAAAAAACIX}{\bkmkend AAAAAAACIX}
00106         char = [{\cf22 '|'}, {\cf22 '/'}, {\cf22 '-'}, {\cf22 '\\\\'}]\par
{\bkmkstart AAAAAAACIY}{\bkmkend AAAAAAACIY}
00107         {\cf19 while} {\cf17 True}:\par
{\bkmkstart AAAAAAACIZ}{\bkmkend AAAAAAACIZ}
00108             {\cf19 if} os.path.isfile(f{\cf22 'INSTALL_DONE\{self.id\}'}):\par
{\bkmkstart AAAAAAACJA}{\bkmkend AAAAAAACJA}
00109                 {\cf19 break}\par
{\bkmkstart AAAAAAACJB}{\bkmkend AAAAAAACJB}
00110             {\cf19 if} os.path.isfile(f{\cf22 'INSTALL_ERROR\{self.id\}'}):\par
{\bkmkstart AAAAAAACJC}{\bkmkend AAAAAAACJC}
00111                 error = {\cf17 True}\par
{\bkmkstart AAAAAAACJD}{\bkmkend AAAAAAACJD}
00112                 {\cf19 break}\par
{\bkmkstart AAAAAAACJE}{\bkmkend AAAAAAACJE}
00113             {\cf19 if} os.path.isfile(f{\cf22 'INSTALL_ALINST\{self.id\}'}):\par
{\bkmkstart AAAAAAACJF}{\bkmkend AAAAAAACJF}
00114                 alinst = {\cf17 True}\par
{\bkmkstart AAAAAAACJG}{\bkmkend AAAAAAACJG}
00115                 {\cf19 break}\par
{\bkmkstart AAAAAAACJH}{\bkmkend AAAAAAACJH}
00116             {\cf19 if} os.path.isfile(f{\cf22 'INSTALL_PAUSE\{self.id\}'}):\par
{\bkmkstart AAAAAAACJI}{\bkmkend AAAAAAACJI}
00117                 {\cf19 if} {\cf19 not} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 bar}}}
:\par
{\bkmkstart AAAAAAACJJ}{\bkmkend AAAAAAACJJ}
00118                     {\cf19 if} {\cf19 not} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGE" }{}}{\fldrslt {\cs37\ul\cf2 use_curses}}}
:\par
{\bkmkstart AAAAAAACJK}{\bkmkend AAAAAAACJK}
00119                         print(\par
{\bkmkstart AAAAAAACJL}{\bkmkend AAAAAAACJL}
00120                             {\cf22 '                                            '}, end={\cf22 '\\r'})\par
{\bkmkstart AAAAAAACJM}{\bkmkend AAAAAAACJM}
00121                     {\cf19 else}:\par
{\bkmkstart AAAAAAACJN}{\bkmkend AAAAAAACJN}
00122                         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 curses_obj}}}
.addstr(\par
{\bkmkstart AAAAAAACJO}{\bkmkend AAAAAAACJO}
00123                             self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 curses_y}}}
, self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 curses_x}}}
, {\cf22 '                                            '})\par
{\bkmkstart AAAAAAACJP}{\bkmkend AAAAAAACJP}
00124                         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 curses_obj}}}
.refresh()\par
{\bkmkstart AAAAAAACJQ}{\bkmkend AAAAAAACJQ}
00125                 {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 bar}}}
:\par
{\bkmkstart AAAAAAACJR}{\bkmkend AAAAAAACJR}
00126                     tqdm.write(\par
{\bkmkstart AAAAAAACJS}{\bkmkend AAAAAAACJS}
00127                         {\cf22 '                                            '})\par
{\bkmkstart AAAAAAACJT}{\bkmkend AAAAAAACJT}
00128                 os.remove(f{\cf22 'INSTALL_PAUSE\{self.id\}'})\par
{\bkmkstart AAAAAAACJU}{\bkmkend AAAAAAACJU}
00129                 {\cf19 while} {\cf19 not} os.path.isfile(f{\cf22 'INSTALL_UNPAUSE\{self.id\}'}):\par
{\bkmkstart AAAAAAACJV}{\bkmkend AAAAAAACJV}
00130                     sleep(0.1)\par
{\bkmkstart AAAAAAACJW}{\bkmkend AAAAAAACJW}
00131                 os.remove(f{\cf22 'INSTALL_UNPAUSE\{self.id\}'})\par
{\bkmkstart AAAAAAACJX}{\bkmkend AAAAAAACJX}
00132             {\cf19 if} {\cf19 not} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 bar}}}
:\par
{\bkmkstart AAAAAAACJY}{\bkmkend AAAAAAACJY}
00133                 {\cf19 if} {\cf19 not} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGE" }{}}{\fldrslt {\cs37\ul\cf2 use_curses}}}
:\par
{\bkmkstart AAAAAAACJZ}{\bkmkend AAAAAAACJZ}
00134                     print(\par
{\bkmkstart AAAAAAACKA}{\bkmkend AAAAAAACKA}
00135                         f{\cf22 '\{self.comment\} \{self.package\} \{char[number]\}               '}, end={\cf22 '\\r'})\par
{\bkmkstart AAAAAAACKB}{\bkmkend AAAAAAACKB}
00136                 {\cf19 else}:\par
{\bkmkstart AAAAAAACKC}{\bkmkend AAAAAAACKC}
00137                     self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 curses_obj}}}
.addstr(\par
{\bkmkstart AAAAAAACKD}{\bkmkend AAAAAAACKD}
00138                         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 curses_y}}}
, self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 curses_x}}}
, f{\cf22 '\{self.comment\} \{self.package\} \{char[number]\}               '})\par
{\bkmkstart AAAAAAACKE}{\bkmkend AAAAAAACKE}
00139                     self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 curses_obj}}}
.refresh()\par
{\bkmkstart AAAAAAACKF}{\bkmkend AAAAAAACKF}
00140             {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 bar}}}
:\par
{\bkmkstart AAAAAAACKG}{\bkmkend AAAAAAACKG}
00141                 tqdm.write(\par
{\bkmkstart AAAAAAACKH}{\bkmkend AAAAAAACKH}
00142                     f{\cf22 '\{self.comment\} \{self.package\} \{char[number]\}               '})\par
{\bkmkstart AAAAAAACKI}{\bkmkend AAAAAAACKI}
00143             {\cf19 if} {\cf19 not} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFY" }{}}{\fldrslt {\cs37\ul\cf2 move_by_command}}}
 {\cf19 or} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGA" }{}}{\fldrslt {\cs37\ul\cf2 _move}}}
 != 0 {\cf19 and} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFY" }{}}{\fldrslt {\cs37\ul\cf2 move_by_command}}}
:\par
{\bkmkstart AAAAAAACKJ}{\bkmkend AAAAAAACKJ}
00144                 number += 1\par
{\bkmkstart AAAAAAACKK}{\bkmkend AAAAAAACKK}
00145                 {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFY" }{}}{\fldrslt {\cs37\ul\cf2 move_by_command}}}
:\par
{\bkmkstart AAAAAAACKL}{\bkmkend AAAAAAACKL}
00146                     self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGA" }{}}{\fldrslt {\cs37\ul\cf2 _move}}}
 -= 1\par
{\bkmkstart AAAAAAACKM}{\bkmkend AAAAAAACKM}
00147             {\cf19 if} number >= len(char):\par
{\bkmkstart AAAAAAACKN}{\bkmkend AAAAAAACKN}
00148                 number = 0\par
{\bkmkstart AAAAAAACKO}{\bkmkend AAAAAAACKO}
00149             sleep(0.1)\par
{\bkmkstart AAAAAAACKP}{\bkmkend AAAAAAACKP}
00150         {\cf19 if} error:\par
{\bkmkstart AAAAAAACKQ}{\bkmkend AAAAAAACKQ}
00151             {\cf19 if} {\cf19 not} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 bar}}}
:\par
{\bkmkstart AAAAAAACKR}{\bkmkend AAAAAAACKR}
00152                 {\cf19 if} {\cf19 not} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGE" }{}}{\fldrslt {\cs37\ul\cf2 use_curses}}}
:\par
{\bkmkstart AAAAAAACKS}{\bkmkend AAAAAAACKS}
00153                     print(f{\cf22 '\{self.comment\} \{self.package\} ERROR             '})\par
{\bkmkstart AAAAAAACKT}{\bkmkend AAAAAAACKT}
00154                 {\cf19 else}:\par
{\bkmkstart AAAAAAACKU}{\bkmkend AAAAAAACKU}
00155                     self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 curses_obj}}}
.addstr(\par
{\bkmkstart AAAAAAACKV}{\bkmkend AAAAAAACKV}
00156                         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 curses_y}}}
, self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 curses_x}}}
, f{\cf22 '\{self.comment\} \{self.package\} ERROR             '})\par
{\bkmkstart AAAAAAACKW}{\bkmkend AAAAAAACKW}
00157                     self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 curses_obj}}}
.refresh()\par
{\bkmkstart AAAAAAACKX}{\bkmkend AAAAAAACKX}
00158             {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 bar}}}
:\par
{\bkmkstart AAAAAAACKY}{\bkmkend AAAAAAACKY}
00159                 tqdm.write(f{\cf22 '\{self.comment\} \{self.package\} ERROR             '})\par
{\bkmkstart AAAAAAACKZ}{\bkmkend AAAAAAACKZ}
00160         {\cf19 elif} alinst:\par
{\bkmkstart AAAAAAACLA}{\bkmkend AAAAAAACLA}
00161             {\cf19 if} {\cf19 not} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 bar}}}
:\par
{\bkmkstart AAAAAAACLB}{\bkmkend AAAAAAACLB}
00162                 {\cf19 if} {\cf19 not} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGE" }{}}{\fldrslt {\cs37\ul\cf2 use_curses}}}
:\par
{\bkmkstart AAAAAAACLC}{\bkmkend AAAAAAACLC}
00163                     print(\par
{\bkmkstart AAAAAAACLD}{\bkmkend AAAAAAACLD}
00164                         f{\cf22 '\{self.comment\} \{self.package\} ALREADY INSTALLED             '})\par
{\bkmkstart AAAAAAACLE}{\bkmkend AAAAAAACLE}
00165                 {\cf19 else}:\par
{\bkmkstart AAAAAAACLF}{\bkmkend AAAAAAACLF}
00166                     self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 curses_obj}}}
.addstr(\par
{\bkmkstart AAAAAAACLG}{\bkmkend AAAAAAACLG}
00167                         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 curses_y}}}
, self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 curses_x}}}
, f{\cf22 '\{self.comment\} \{self.package\} ALREADY INSTALLED             '})\par
{\bkmkstart AAAAAAACLH}{\bkmkend AAAAAAACLH}
00168                     self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 curses_obj}}}
.refresh()\par
{\bkmkstart AAAAAAACLI}{\bkmkend AAAAAAACLI}
00169             {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 bar}}}
:\par
{\bkmkstart AAAAAAACLJ}{\bkmkend AAAAAAACLJ}
00170                 tqdm.write(\par
{\bkmkstart AAAAAAACLK}{\bkmkend AAAAAAACLK}
00171                     f{\cf22 '\{self.comment\} \{self.package\} ALREADY INSTALLED             '})\par
{\bkmkstart AAAAAAACLL}{\bkmkend AAAAAAACLL}
00172         {\cf19 else}:\par
{\bkmkstart AAAAAAACLM}{\bkmkend AAAAAAACLM}
00173             {\cf19 if} {\cf19 not} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 bar}}}
:\par
{\bkmkstart AAAAAAACLN}{\bkmkend AAAAAAACLN}
00174                 {\cf19 if} {\cf19 not} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGE" }{}}{\fldrslt {\cs37\ul\cf2 use_curses}}}
:\par
{\bkmkstart AAAAAAACLO}{\bkmkend AAAAAAACLO}
00175                     print(f{\cf22 '\{self.comment\} \{self.package\} DONE             '})\par
{\bkmkstart AAAAAAACLP}{\bkmkend AAAAAAACLP}
00176                 {\cf19 else}:\par
{\bkmkstart AAAAAAACLQ}{\bkmkend AAAAAAACLQ}
00177                     self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 curses_obj}}}
.addstr(\par
{\bkmkstart AAAAAAACLR}{\bkmkend AAAAAAACLR}
00178                         self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGG" }{}}{\fldrslt {\cs37\ul\cf2 curses_y}}}
, self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGI" }{}}{\fldrslt {\cs37\ul\cf2 curses_x}}}
, f{\cf22 '\{self.comment\} \{self.package\} DONE             '})\par
{\bkmkstart AAAAAAACLS}{\bkmkend AAAAAAACLS}
00179                     self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACGK" }{}}{\fldrslt {\cs37\ul\cf2 curses_obj}}}
.refresh()\par
{\bkmkstart AAAAAAACLT}{\bkmkend AAAAAAACLT}
00180             {\cf19 if} self.{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAACFW" }{}}{\fldrslt {\cs37\ul\cf2 bar}}}
:\par
{\bkmkstart AAAAAAACLU}{\bkmkend AAAAAAACLU}
00181                 tqdm.write(f{\cf22 '\{self.comment\} \{self.package\} DONE             '})\par
{\bkmkstart AAAAAAACLV}{\bkmkend AAAAAAACLV}
00182         {\cf19 try}:\par
{\bkmkstart AAAAAAACLW}{\bkmkend AAAAAAACLW}
00183             os.remove(f{\cf22 'INSTALL_DONE\{self.id\}'})\par
{\bkmkstart AAAAAAACLX}{\bkmkend AAAAAAACLX}
00184         {\cf19 except} Exception:\par
{\bkmkstart AAAAAAACLY}{\bkmkend AAAAAAACLY}
00185             {\cf19 pass}\par
{\bkmkstart AAAAAAACLZ}{\bkmkend AAAAAAACLZ}
00186         {\cf19 try}:\par
{\bkmkstart AAAAAAACMA}{\bkmkend AAAAAAACMA}
00187             os.remove(f{\cf22 'INSTALL_ERROR\{self.id\}'})\par
{\bkmkstart AAAAAAACMB}{\bkmkend AAAAAAACMB}
00188         {\cf19 except} Exception:\par
{\bkmkstart AAAAAAACMC}{\bkmkend AAAAAAACMC}
00189             {\cf19 pass}\par
{\bkmkstart AAAAAAACMD}{\bkmkend AAAAAAACMD}
00190         {\cf19 try}:\par
{\bkmkstart AAAAAAACME}{\bkmkend AAAAAAACME}
00191             os.remove(f{\cf22 'INSTALL_ALINST\{self.id\}'})\par
{\bkmkstart AAAAAAACMF}{\bkmkend AAAAAAACMF}
00192         {\cf19 except} Exception:\par
{\bkmkstart AAAAAAACMG}{\bkmkend AAAAAAACMG}
00193             {\cf19 pass}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
